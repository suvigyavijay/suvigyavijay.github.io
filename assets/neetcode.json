[
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Contains Duplicate",
        "pattern": "Arrays & Hashing",
        "link": "contains-duplicate/",
        "video": "3OamzN90kPg",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0217-contains-duplicate",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "dart": true,
        "id": 217
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Valid Anagram",
        "pattern": "Arrays & Hashing",
        "link": "valid-anagram/",
        "video": "9UtInBqnCgA",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0242-valid-anagram",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "dart": true,
        "id": 242
    },
    {
        "problem": "Concatenation of Array",
        "pattern": "Arrays & Hashing",
        "link": "concatenation-of-array/",
        "video": "68isPRHgcFQ",
        "difficulty": "Easy",
        "code": "1929-concatenation-of-array",
        "python": true,
        "cpp": true,
        "java": true,
        "javascript": true,
        "kotlin": true,
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "rust": true,
        "scala": true,
        "dart": true,
        "id": 1929
    },
    {
        "problem": "Replace Elements With Greatest Element On Right Side",
        "pattern": "Arrays & Hashing",
        "link": "replace-elements-with-greatest-element-on-right-side/",
        "video": "ZHjKhUjcsaU",
        "difficulty": "Easy",
        "code": "1299-replace-elements-with-greatest-element-on-right-side",
        "c": true,
        "cpp": true,
        "csharp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "dart": true,
        "kotlin": true,
        "swift": true,
        "id": 1299
    },
    {
        "problem": "Is Subsequence",
        "pattern": "Arrays & Hashing",
        "link": "is-subsequence/",
        "video": "99RVfqklbCE",
        "difficulty": "Easy",
        "code": "0392-is-subsequence",
        "c": true,
        "cpp": true,
        "csharp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "dart": true,
        "kotlin": true,
        "swift": true,
        "id": 392
    },
    {
        "problem": "Length of Last Word",
        "pattern": "Arrays & Hashing",
        "link": "length-of-last-word/",
        "video": "KT9rltZTybQ",
        "difficulty": "Easy",
        "code": "0058-length-of-last-word",
        "c": true,
        "cpp": true,
        "csharp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "rust": true,
        "go": true,
        "swift": true,
        "dart": true,
        "ruby": true,
        "kotlin": true,
        "id": 58
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Two Sum",
        "pattern": "Arrays & Hashing",
        "link": "two-sum/",
        "video": "KLlXCFG5TnA",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0001-two-sum",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "dart": true,
        "id": 1
    },
    {
        "problem": "Longest Common Prefix",
        "pattern": "Arrays & Hashing",
        "link": "longest-common-prefix/",
        "video": "0sWShKIJoo4",
        "difficulty": "Easy",
        "code": "0014-longest-common-prefix",
        "cpp": true,
        "python": true,
        "javascript": true,
        "c": true,
        "csharp": true,
        "java": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "dart": true,
        "kotlin": true,
        "id": 14
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Group Anagrams",
        "pattern": "Arrays & Hashing",
        "link": "group-anagrams/",
        "video": "vzdNOK2oB2E",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0049-group-anagrams",
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "dart": true,
        "c": true,
        "scala": true,
        "id": 49
    },
    {
        "problem": "Pascals Triangle",
        "pattern": "Arrays & Hashing",
        "link": "pascals-triangle/",
        "video": "nPVEaB3AjUM",
        "difficulty": "Easy",
        "code": "0118-pascals-triangle",
        "c": true,
        "cpp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "rust": true,
        "csharp": true,
        "go": true,
        "dart": true,
        "kotlin": true,
        "id": 118
    },
    {
        "problem": "Remove Element",
        "pattern": "Arrays & Hashing",
        "link": "remove-element/",
        "video": "Pcd1ii9P9ZI",
        "difficulty": "Easy",
        "code": "0027-remove-element",
        "c": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "cpp": true,
        "csharp": true,
        "swift": true,
        "rust": true,
        "dart": true,
        "kotlin": true,
        "id": 27
    },
    {
        "problem": "Unique Email Addresses",
        "pattern": "Arrays & Hashing",
        "link": "unique-email-addresses/",
        "video": "TC_xLIWl7qY",
        "difficulty": "Easy",
        "code": "0929-unique-email-addresses",
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "swift": true,
        "cpp": true,
        "csharp": true,
        "go": true,
        "rust": true,
        "c": true,
        "kotlin": true,
        "id": 929
    },
    {
        "problem": "Isomorphic Strings",
        "pattern": "Arrays & Hashing",
        "link": "isomorphic-strings/",
        "video": "7yF-U1hLEqQ",
        "difficulty": "Easy",
        "code": "0205-isomorphic-strings",
        "c": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "swift": true,
        "cpp": true,
        "csharp": true,
        "go": true,
        "rust": true,
        "kotlin": true,
        "id": 205
    },
    {
        "problem": "Can Place Flowers",
        "pattern": "Arrays & Hashing",
        "link": "can-place-flowers/",
        "video": "ZGxqqjljpUI",
        "difficulty": "Easy",
        "code": "0605-can-place-flowers",
        "c": true,
        "cpp": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "csharp": true,
        "go": true,
        "rust": true,
        "java": true,
        "kotlin": true,
        "swift": true,
        "id": 605
    },
    {
        "problem": "Majority Element",
        "pattern": "Arrays & Hashing",
        "link": "majority-element/",
        "video": "7pnhv842keE",
        "difficulty": "Easy",
        "code": "0169-majority-element",
        "c": true,
        "cpp": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "swift": true,
        "csharp": true,
        "java": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "id": 169
    },
    {
        "problem": "Next Greater Element I",
        "pattern": "Arrays & Hashing",
        "link": "next-greater-element-i/",
        "video": "68a1Dc_qVq4",
        "difficulty": "Easy",
        "code": "0496-next-greater-element-i",
        "java": true,
        "python": true,
        "typescript": true,
        "c": true,
        "cpp": true,
        "csharp": true,
        "javascript": true,
        "go": true,
        "rust": true,
        "kotlin": true,
        "id": 496
    },
    {
        "problem": "Find Pivot Index",
        "pattern": "Arrays & Hashing",
        "link": "find-pivot-index/",
        "video": "u89i60lYx8U",
        "difficulty": "Easy",
        "code": "0724-find-pivot-index",
        "c": true,
        "cpp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "csharp": true,
        "kotlin": true,
        "swift": true,
        "id": 724
    },
    {
        "problem": "Range Sum Query - Immutable",
        "pattern": "Arrays & Hashing",
        "link": "range-sum-query-immutable/",
        "video": "2pndAmo_sMA",
        "difficulty": "Easy",
        "code": "0303-range-sum-query-immutable",
        "python": true,
        "c": true,
        "cpp": true,
        "java": true,
        "kotlin": true,
        "csharp": true,
        "javascript": true,
        "rust": true,
        "id": 303
    },
    {
        "problem": "Find All Numbers Disappeared in An Array",
        "pattern": "Arrays & Hashing",
        "link": "find-all-numbers-disappeared-in-an-array/",
        "video": "8i-f24YFWC4",
        "difficulty": "Easy",
        "code": "0448-find-all-numbers-disappeared-in-an-array",
        "cpp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "c": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "csharp": true,
        "kotlin": true,
        "id": 448
    },
    {
        "problem": "Maximum Number of Balloons",
        "pattern": "Arrays & Hashing",
        "link": "maximum-number-of-balloons/",
        "video": "G9xeB2-7PqY",
        "difficulty": "Easy",
        "code": "1189-maximum-number-of-balloons",
        "c": true,
        "java": true,
        "python": true,
        "javascript": true,
        "cpp": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "csharp": true,
        "kotlin": true,
        "id": 1189
    },
    {
        "problem": "Word Pattern",
        "pattern": "Arrays & Hashing",
        "link": "word-pattern/",
        "video": "W_akoecmCbM",
        "difficulty": "Easy",
        "code": "0290-word-pattern",
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "c": true,
        "cpp": true,
        "go": true,
        "rust": true,
        "csharp": true,
        "kotlin": true,
        "id": 290
    },
    {
        "problem": "Design HashSet",
        "pattern": "Arrays & Hashing",
        "link": "design-hashset/",
        "video": "VymjPQUXjL8",
        "difficulty": "Easy",
        "code": "0705-design-hashset",
        "kotlin": true,
        "c": true,
        "cpp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "rust": true,
        "id": 705
    },
    {
        "problem": "Design HashMap",
        "pattern": "Arrays & Hashing",
        "link": "design-hashmap/",
        "video": "cNWsgbKwwoU",
        "difficulty": "Easy",
        "code": "0706-design-hashmap",
        "python": true,
        "c": true,
        "cpp": true,
        "java": true,
        "javascript": true,
        "kotlin": true,
        "rust": true,
        "id": 706
    },
    {
        "problem": "Sort an Array",
        "pattern": "Arrays & Hashing",
        "link": "sort-an-array/",
        "video": "MsYZSinhuFo",
        "difficulty": "Medium",
        "code": "0912-sort-an-array",
        "python": true,
        "java": true,
        "kotlin": true,
        "cpp": true,
        "csharp": true,
        "javascript": true,
        "go": true,
        "rust": true,
        "id": 912
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Top K Frequent Elements",
        "pattern": "Arrays & Hashing",
        "link": "top-k-frequent-elements/",
        "video": "YPTqKIgVk-k",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0347-top-k-frequent-elements",
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "c": true,
        "scala": true,
        "id": 347
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Product of Array Except Self",
        "pattern": "Arrays & Hashing",
        "link": "product-of-array-except-self/",
        "video": "bNvIQI2wAjk",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0238-product-of-array-except-self",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 238
    },
    {
        "neetcode150": true,
        "problem": "Valid Sudoku",
        "pattern": "Arrays & Hashing",
        "link": "valid-sudoku/",
        "video": "TjFXEUCMqI8",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0036-valid-sudoku",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "kotlin": true,
        "rust": true,
        "dart": true,
        "scala": true,
        "id": 36
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Encode and Decode Strings",
        "premium": true,
        "freeLink": "https://www.lintcode.com/problem/659/",
        "pattern": "Arrays & Hashing",
        "link": "encode-and-decode-strings/",
        "video": "B1k_sxOSgv8",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0271-encode-and-decode-strings",
        "csharp": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "rust": true,
        "typescript": true,
        "kotlin": true,
        "id": 271
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Longest Consecutive Sequence",
        "pattern": "Arrays & Hashing",
        "link": "longest-consecutive-sequence/",
        "video": "P6RZZMu_maU",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0128-longest-consecutive-sequence",
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "c": true,
        "id": 128
    },
    {
        "problem": "Sort Colors",
        "pattern": "Arrays & Hashing",
        "link": "sort-colors/",
        "video": "4xbWSRZHqac",
        "difficulty": "Medium",
        "code": "0075-sort-colors",
        "c": true,
        "java": true,
        "javascript": true,
        "go": true,
        "kotlin": true,
        "cpp": true,
        "python": true,
        "typescript": true,
        "csharp": true,
        "rust": true,
        "swift": true,
        "id": 75
    },
    {
        "problem": "Encode and Decode TinyURL",
        "pattern": "Arrays & Hashing",
        "link": "encode-and-decode-tinyurl/",
        "video": "VyBOaboQLGc",
        "difficulty": "Medium",
        "code": "0535-encode-and-decode-tinyurl",
        "javascript": true,
        "cpp": true,
        "python": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "swift": true,
        "kotlin": true,
        "c": true,
        "java": true,
        "id": 535
    },
    {
        "problem": "Brick Wall",
        "pattern": "Arrays & Hashing",
        "link": "brick-wall/",
        "video": "Kkmv2h48ekw",
        "difficulty": "Medium",
        "code": "0554-brick-wall",
        "javascript": true,
        "typescript": true,
        "c": true,
        "cpp": true,
        "java": true,
        "python": true,
        "rust": true,
        "kotlin": true,
        "id": 554
    },
    {
        "problem": "Best Time to Buy And Sell Stock II",
        "pattern": "Arrays & Hashing",
        "link": "best-time-to-buy-and-sell-stock-ii/",
        "video": "3SJ3pUkPQMc",
        "difficulty": "Medium",
        "code": "0122-best-time-to-buy-and-sell-stock-ii",
        "c": true,
        "javascript": true,
        "go": true,
        "cpp": true,
        "java": true,
        "python": true,
        "kotlin": true,
        "rust": true,
        "id": 122
    },
    {
        "problem": "Subarray Sum Equals K",
        "pattern": "Arrays & Hashing",
        "link": "subarray-sum-equals-k/",
        "video": "fFVZt-6sgyo",
        "difficulty": "Medium",
        "code": "0560-subarray-sum-equals-k",
        "java": true,
        "cpp": true,
        "go": true,
        "c": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "kotlin": true,
        "rust": true,
        "csharp": true,
        "id": 560
    },
    {
        "problem": "Unique Length 3 Palindromic Subsequences",
        "pattern": "Arrays & Hashing",
        "link": "unique-length-3-palindromic-subsequences/",
        "video": "3THUt0vAFLU",
        "difficulty": "Medium",
        "code": "1930-unique-length-3-palindromic-subsequences",
        "cpp": true,
        "java": true,
        "kotlin": true,
        "c": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "rust": true,
        "id": 1930
    },
    {
        "problem": "Minimum Number of Swaps to Make The String Balanced",
        "pattern": "Arrays & Hashing",
        "link": "minimum-number-of-swaps-to-make-the-string-balanced/",
        "video": "3YDBT9ZrfaU",
        "difficulty": "Medium",
        "code": "1963-minimum-number-of-swaps-to-make-the-string-balanced",
        "javascript": true,
        "cpp": true,
        "c": true,
        "python": true,
        "kotlin": true,
        "java": true,
        "rust": true,
        "id": 1963
    },
    {
        "problem": "Number of Pairs of Interchangeable Rectangles",
        "pattern": "Arrays & Hashing",
        "link": "number-of-pairs-of-interchangeable-rectangles/",
        "video": "lEQ8ZlLOuyQ",
        "difficulty": "Medium",
        "code": "2001-number-of-pairs-of-interchangeable-rectangles",
        "javascript": true,
        "cpp": true,
        "python": true,
        "c": true,
        "java": true,
        "rust": true,
        "kotlin": true,
        "id": 2001
    },
    {
        "problem": "Maximum Product of The Length of Two Palindromic Subsequences",
        "pattern": "Arrays & Hashing",
        "link": "maximum-product-of-the-length-of-two-palindromic-subsequences/",
        "video": "aoHbYlO8vDg",
        "difficulty": "Medium",
        "code": "2002-maximum-product-of-the-length-of-two-palindromic-subsequences",
        "cpp": true,
        "c": true,
        "csharp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "id": 2002
    },
    {
        "problem": "Grid Game",
        "pattern": "Arrays & Hashing",
        "link": "grid-game/",
        "video": "N4wDSOw65hI",
        "difficulty": "Medium",
        "code": "2017-grid-game",
        "python": true,
        "cpp": true,
        "kotlin": true,
        "java": true,
        "javascript": true,
        "rust": true,
        "id": 2017
    },
    {
        "problem": "Find All Anagrams in a String",
        "pattern": "Arrays & Hashing",
        "link": "find-all-anagrams-in-a-string/",
        "video": "G8xtZy0fDKg",
        "difficulty": "Medium",
        "code": "0438-find-all-anagrams-in-a-string",
        "cpp": true,
        "csharp": true,
        "python": true,
        "java": true,
        "javascript": true,
        "go": true,
        "kotlin": true,
        "c": true,
        "id": 438
    },
    {
        "problem": "Find The Index of The First Occurrence in a String",
        "pattern": "Arrays & Hashing",
        "link": "find-the-index-of-the-first-occurrence-in-a-string/",
        "video": "JoF0Z7nVSrA",
        "difficulty": "Easy",
        "code": "0028-find-the-index-of-the-first-occurrence-in-a-string",
        "python": true,
        "cpp": true,
        "go": true,
        "c": true,
        "java": true,
        "kotlin": true,
        "csharp": true,
        "javascript": true,
        "id": 28
    },
    {
        "problem": "Wiggle Sort",
        "pattern": "Arrays & Hashing",
        "premium": true,
        "freeLink": "https://www.lintcode.com/problem/508/",
        "link": "wiggle-sort/",
        "video": "vGsyTE4s34w",
        "difficulty": "Medium",
        "code": "0280-wiggle-sort",
        "cpp": true,
        "python": true,
        "kotlin": true,
        "id": 280
    },
    {
        "problem": "Largest Number",
        "pattern": "Arrays & Hashing",
        "link": "largest-number/",
        "video": "WDx6Y4i4xJ8",
        "difficulty": "Medium",
        "code": "0179-largest-number",
        "typescript": true,
        "cpp": true,
        "java": true,
        "kotlin": true,
        "c": true,
        "csharp": true,
        "python": true,
        "javascript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "rust": true,
        "scala": true,
        "id": 179
    },
    {
        "problem": "Continuous Subarray Sum",
        "pattern": "Arrays & Hashing",
        "link": "continuous-subarray-sum/",
        "video": "OKcrLfR-8mE",
        "difficulty": "Medium",
        "code": "0523-continuous-subarray-sum",
        "java": true,
        "python": true,
        "cpp": true,
        "kotlin": true,
        "c": true,
        "javascript": true,
        "rust": true,
        "id": 523
    },
    {
        "problem": "Push Dominoes",
        "pattern": "Arrays & Hashing",
        "link": "push-dominoes/",
        "video": "evUFsOb_iLY",
        "difficulty": "Medium",
        "code": "0838-push-dominoes",
        "typescript": true,
        "cpp": true,
        "python": true,
        "kotlin": true,
        "java": true,
        "id": 838
    },
    {
        "problem": "Repeated DNA Sequences",
        "pattern": "Arrays & Hashing",
        "link": "repeated-dna-sequences/",
        "video": "FzTYfsmtOso",
        "difficulty": "Medium",
        "code": "0187-repeated-dna-sequences",
        "java": true,
        "typescript": true,
        "cpp": true,
        "kotlin": true,
        "python": true,
        "javascript": true,
        "id": 187
    },
    {
        "problem": "Insert Delete Get Random O(1)",
        "pattern": "Arrays & Hashing",
        "link": "insert-delete-getrandom-o1/",
        "video": "j4KwhBziOpg",
        "difficulty": "Medium",
        "code": "0380-insert-delete-getrandom-o1",
        "java": true,
        "typescript": true,
        "javascript": true,
        "go": true,
        "cpp": true,
        "swift": true,
        "kotlin": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Check if a String Contains all Binary Codes of Size K",
        "pattern": "Arrays & Hashing",
        "link": "check-if-a-string-contains-all-binary-codes-of-size-k/",
        "video": "qU32rTy_kOM",
        "difficulty": "Medium",
        "code": "1461-check-if-a-string-contains-all-binary-codes-of-size-k",
        "cpp": true,
        "kotlin": true,
        "python": true,
        "javascript": true,
        "id": 1461
    },
    {
        "problem": "Range Sum Query 2D Immutable",
        "pattern": "Arrays & Hashing",
        "link": "range-sum-query-2d-immutable/",
        "video": "KE8MQuwE2yA",
        "difficulty": "Medium",
        "code": "0304-range-sum-query-2d-immutable",
        "cpp": true,
        "python": true,
        "kotlin": true,
        "javascript": true,
        "id": 304
    },
    {
        "problem": "Non Decreasing Array",
        "pattern": "Arrays & Hashing",
        "link": "non-decreasing-array/",
        "video": "RegQckCegDk",
        "difficulty": "Medium",
        "code": "0665-non-decreasing-array",
        "cpp": true,
        "java": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "scala": true,
        "kotlin": true,
        "python": true,
        "csharp": true,
        "id": 665
    },
    {
        "problem": "First Missing Positive",
        "pattern": "Arrays & Hashing",
        "link": "first-missing-positive/",
        "video": "8g78yfzMlao",
        "difficulty": "Hard",
        "code": "0041-first-missing-positive",
        "python": true,
        "typescript": true,
        "cpp": true,
        "java": true,
        "go": true,
        "kotlin": true,
        "c": true,
        "javascript": true,
        "id": 41
    },
    {
        "problem": "Sign of An Array",
        "pattern": "Arrays & Hashing",
        "link": "sign-of-the-product-of-an-array/",
        "video": "ILDLM86jNow",
        "difficulty": "Easy",
        "code": "1822-sign-of-the-product-of-an-array",
        "cpp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "id": 0
    },
    {
        "problem": "Find the Difference of Two Arrays",
        "pattern": "Arrays & Hashing",
        "link": "find-the-difference-of-two-arrays/",
        "video": "a4wqKR-znBE",
        "difficulty": "Easy",
        "code": "2215-find-the-difference-of-two-arrays",
        "kotlin": true,
        "cpp": true,
        "csharp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "id": 2215
    },
    {
        "problem": "Design Parking System",
        "pattern": "Arrays & Hashing",
        "link": "design-parking-system/",
        "video": "d5zCHesOrSk",
        "difficulty": "Easy",
        "code": "1603-design-parking-system",
        "kotlin": true,
        "java": true,
        "python": true,
        "javascript": true,
        "id": 1603
    },
    {
        "problem": "Number of Zero-Filled Subarrays",
        "pattern": "Arrays & Hashing",
        "link": "number-of-zero-filled-subarrays/",
        "video": "G-EWVGCcL_w",
        "difficulty": "Medium",
        "code": "2348-number-of-zero-filled-subarrays",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2348
    },
    {
        "problem": "Optimal Partition of String",
        "pattern": "Arrays & Hashing",
        "link": "optimal-partition-of-string/",
        "video": "CKZPdiXiQf0",
        "difficulty": "Medium",
        "code": "2405-optimal-partition-of-string",
        "kotlin": true,
        "java": true,
        "id": 2405
    },
    {
        "problem": "Design Underground System",
        "pattern": "Arrays & Hashing",
        "link": "design-underground-system/",
        "video": "W5QOLqXskZM",
        "difficulty": "Medium",
        "code": "1396-design-underground-system",
        "kotlin": true,
        "java": true,
        "javascript": true,
        "id": 1396
    },
    {
        "problem": "Minimum Penalty for a Shop",
        "pattern": "Arrays & Hashing",
        "link": "minimum-penalty-for-a-shop/",
        "video": "0d7ShRoOFVE",
        "difficulty": "Medium",
        "code": "2483-minimum-penalty-for-a-shop",
        "cpp": true,
        "java": true,
        "kotlin": true,
        "id": 2483
    },
    {
        "problem": "Text Justification",
        "pattern": "Arrays & Hashing",
        "link": "text-justification/",
        "video": "TzMl4Z7pVh8",
        "difficulty": "Hard",
        "code": "0068-naming-a-company",
        "python": true,
        "kotlin": true,
        "id": 68
    },
    {
        "problem": "Naming a Company",
        "pattern": "Arrays & Hashing",
        "link": "naming-a-company/",
        "video": "NrHpgTScOcY",
        "difficulty": "Hard",
        "code": "2306-naming-a-company",
        "kotlin": true,
        "java": true,
        "javascript": true,
        "id": 2306
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Valid Palindrome",
        "pattern": "Two Pointers",
        "link": "valid-palindrome/",
        "video": "jJXJ16kPFWg",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0125-valid-palindrome",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "dart": true,
        "scala": true,
        "id": 125
    },
    {
        "problem": "Valid Palindrome II",
        "pattern": "Two Pointers",
        "link": "valid-palindrome-ii/",
        "video": "JrxRYBwG6EI",
        "difficulty": "Easy",
        "code": "0680-valid-palindrome-ii",
        "python": true,
        "cpp": true,
        "csharp": true,
        "java": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "c": true,
        "kotlin": true,
        "id": 680
    },
    {
        "problem": "Minimum Difference Between Highest And Lowest of K Scores",
        "pattern": "Two Pointers",
        "link": "minimum-difference-between-highest-and-lowest-of-k-scores/",
        "video": "JU5XdBZZtlk",
        "difficulty": "Easy",
        "code": "1984-minimum-difference-between-highest-and-lowest-of-k-scores",
        "javascript": true,
        "cpp": true,
        "python": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "java": true,
        "kotlin": true,
        "id": 1984
    },
    {
        "problem": "Merge Strings Alternately",
        "pattern": "Two Pointers",
        "link": "merge-strings-alternately/",
        "video": "LECWOvTo-Sc",
        "difficulty": "Easy",
        "code": "1768-merge-strings-alternately",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "id": 1768
    },
    {
        "problem": "Reverse String",
        "pattern": "Two Pointers",
        "link": "reverse-string/",
        "video": "_d0T_2Lk2qA",
        "difficulty": "Easy",
        "code": "0344-reverse-string",
        "c": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "swift": true,
        "cpp": true,
        "java": true,
        "go": true,
        "rust": true,
        "kotlin": true,
        "dart": true,
        "id": 344
    },
    {
        "problem": "Merge Sorted Array",
        "pattern": "Two Pointers",
        "link": "merge-sorted-array/",
        "video": "P1Ic85RarKY",
        "difficulty": "Easy",
        "code": "0088-merge-sorted-array",
        "c": true,
        "java": true,
        "javascript": true,
        "cpp": true,
        "python": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "kotlin": true,
        "id": 88
    },
    {
        "problem": "Move Zeroes",
        "pattern": "Two Pointers",
        "link": "move-zeroes/",
        "video": "aayNRwUN3Do",
        "difficulty": "Easy",
        "code": "0283-move-zeroes",
        "c": true,
        "cpp": true,
        "javascript": true,
        "csharp": true,
        "python": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "rust": true,
        "java": true,
        "kotlin": true,
        "id": 283
    },
    {
        "problem": "Remove Duplicates From Sorted Array",
        "pattern": "Two Pointers",
        "link": "remove-duplicates-from-sorted-array/",
        "video": "DEJAZBq0FDA",
        "difficulty": "Easy",
        "code": "0026-remove-duplicates-from-sorted-array",
        "python": true,
        "javascript": true,
        "go": true,
        "cpp": true,
        "typescript": true,
        "swift": true,
        "rust": true,
        "java": true,
        "kotlin": true,
        "c": true,
        "id": 26
    },
    {
        "problem": "Remove Duplicates From Sorted Array II",
        "pattern": "Two Pointers",
        "link": "remove-duplicates-from-sorted-array-ii/",
        "video": "ycAq8iqh0TI",
        "difficulty": "Medium",
        "code": "0080-remove-duplicates-from-sorted-array-ii",
        "python": true,
        "kotlin": true,
        "cpp": true,
        "csharp": true,
        "javascript": true,
        "swift": true,
        "id": 80
    },
    {
        "neetcode150": true,
        "problem": "Two Sum II Input Array Is Sorted",
        "pattern": "Two Pointers",
        "link": "two-sum-ii-input-array-is-sorted/",
        "video": "cQ1Oz4ckceM",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0167-two-sum-ii-input-array-is-sorted",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "id": 167
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "3Sum",
        "pattern": "Two Pointers",
        "link": "3sum/",
        "video": "jzZsG8n2R9A",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0015-3sum",
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "c": true,
        "id": 15
    },
    {
        "problem": "4Sum",
        "pattern": "Two Pointers",
        "link": "4sum/",
        "video": "EYeR-_1NRlQ",
        "difficulty": "Medium",
        "code": "0018-4sum",
        "python": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "cpp": true,
        "kotlin": true,
        "java": true,
        "id": 18
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Container With Most Water",
        "pattern": "Two Pointers",
        "link": "container-with-most-water/",
        "video": "UuiTKBwPgAo",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0011-container-with-most-water",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "dart": true,
        "id": 11
    },
    {
        "problem": "Number of Subsequences That Satisfy The Given Sum Condition",
        "pattern": "Two Pointers",
        "link": "number-of-subsequences-that-satisfy-the-given-sum-condition/",
        "video": "xCsIkPLS4Ls",
        "difficulty": "Medium",
        "code": "1498-number-of-subsequences-that-satisfy-the-given-sum-condition",
        "cpp": true,
        "python": true,
        "kotlin": true,
        "id": 1498
    },
    {
        "problem": "Rotate Array",
        "pattern": "Two Pointers",
        "link": "rotate-array/",
        "video": "BHr381Guz3Y",
        "difficulty": "Medium",
        "code": "0189-rotate-array",
        "cpp": true,
        "java": true,
        "python": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "javascript": true,
        "id": 189
    },
    {
        "problem": "Array With Elements Not Equal to Average of Neighbors",
        "pattern": "Two Pointers",
        "link": "array-with-elements-not-equal-to-average-of-neighbors/",
        "video": "Wmb3YdVYfqM",
        "difficulty": "Medium",
        "code": "1968-array-with-elements-not-equal-to-average-of-neighbors",
        "c": true,
        "cpp": true,
        "kotlin": true,
        "python": true,
        "javascript": true,
        "id": 1968
    },
    {
        "problem": "Boats to Save People",
        "pattern": "Two Pointers",
        "link": "boats-to-save-people/",
        "video": "XbaxWuHIWUs",
        "difficulty": "Medium",
        "code": "0881-boats-to-save-people",
        "c": true,
        "cpp": true,
        "typescript": true,
        "javascript": true,
        "python": true,
        "kotlin": true,
        "java": true,
        "swift": true,
        "id": 881
    },
    {
        "neetcode150": true,
        "problem": "Trapping Rain Water",
        "pattern": "Two Pointers",
        "link": "trapping-rain-water/",
        "video": "ZI2z5pq0TqA",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0042-trapping-rain-water",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 42
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Best Time to Buy And Sell Stock",
        "pattern": "Sliding Window",
        "link": "best-time-to-buy-and-sell-stock/",
        "video": "1pkOgXD63yU",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0121-best-time-to-buy-and-sell-stock",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "id": 121
    },
    {
        "problem": "Contains Duplicate II",
        "pattern": "Sliding Window",
        "link": "contains-duplicate-ii/",
        "video": "ypn0aZ0nrL4",
        "difficulty": "Easy",
        "python": true,
        "code": "0219-contains-duplicate-ii",
        "cpp": true,
        "java": true,
        "javascript": true,
        "kotlin": true,
        "rust": true,
        "id": 219
    },
    {
        "problem": "Number of Sub Arrays of Size K and Avg Greater than or Equal to Threshold",
        "pattern": "Sliding Window",
        "link": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/",
        "video": "D8B4tKxMTnY",
        "difficulty": "Medium",
        "python": true,
        "code": "1343-number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
        "cpp": true,
        "javascript": true,
        "kotlin": true,
        "java": true,
        "id": 0
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Longest Substring Without Repeating Characters",
        "pattern": "Sliding Window",
        "link": "longest-substring-without-repeating-characters/",
        "video": "wiGpQwVHdE0",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0003-longest-substring-without-repeating-characters",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "id": 3
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Longest Repeating Character Replacement",
        "pattern": "Sliding Window",
        "link": "longest-repeating-character-replacement/",
        "video": "gqXU1UyA8pk",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0424-longest-repeating-character-replacement",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "kotlin": true,
        "rust": true,
        "swift": true,
        "id": 424
    },
    {
        "neetcode150": true,
        "problem": "Permutation In String",
        "pattern": "Sliding Window",
        "link": "permutation-in-string/",
        "video": "UbyhOgBN834",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0567-permutation-in-string",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "id": 567
    },
    {
        "problem": "Frequency of The Most Frequent Element",
        "pattern": "Sliding Window",
        "link": "frequency-of-the-most-frequent-element/",
        "video": "vgBrQ0NM5vE",
        "difficulty": "Medium",
        "code": "1838-frequency-of-the-most-frequent-element",
        "csharp": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "c": true,
        "cpp": true,
        "kotlin": true,
        "java": true,
        "python": true,
        "id": 1838
    },
    {
        "problem": "Fruits into Basket",
        "pattern": "Sliding Window",
        "link": "fruit-into-baskets/",
        "video": "yYtaV0G3mWQ",
        "difficulty": "Medium",
        "code": "0904-fruit-into-baskets",
        "javascript": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Maximum Number of Vowels in a Substring of Given Length",
        "pattern": "Sliding Window",
        "link": "maximum-number-of-vowels-in-a-substring-of-given-length/",
        "video": "kEfPSzgL-Ss",
        "difficulty": "Medium",
        "code": "1456-maximum-number-of-vowels-in-a-substring-of-given-length",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1456
    },
    {
        "problem": "Minimum Number of Flips to Make The Binary String Alternating",
        "pattern": "Sliding Window",
        "link": "minimum-number-of-flips-to-make-the-binary-string-alternating/",
        "video": "MOeuK6gaC2A",
        "difficulty": "Medium",
        "code": "1888-minimum-number-of-flips-to-make-the-binary-string-alternating",
        "javascript": true,
        "typescript": true,
        "kotlin": true,
        "python": true,
        "id": 1888
    },
    {
        "problem": "Minimum Size Subarray Sum",
        "pattern": "Sliding Window",
        "link": "minimum-size-subarray-sum/",
        "video": "aYqYMIqZx5s",
        "difficulty": "Medium",
        "code": "0209-minimum-size-subarray-sum",
        "c": true,
        "cpp": true,
        "javascript": true,
        "go": true,
        "java": true,
        "kotlin": true,
        "python": true,
        "id": 209
    },
    {
        "problem": "Find K Closest Elements",
        "pattern": "Sliding Window",
        "link": "find-k-closest-elements/",
        "video": "o-YDQzHoaKM",
        "difficulty": "Medium",
        "code": "0658-find-k-closest-elements",
        "python": true,
        "typescript": true,
        "javascript": true,
        "kotlin": true,
        "id": 658
    },
    {
        "problem": "Minimum Operations to Reduce X to Zero",
        "pattern": "Sliding Window",
        "link": "minimum-operations-to-reduce-x-to-zero/",
        "video": "xumn16n7njs",
        "difficulty": "Medium",
        "code": "1658-minimum-operations-to-reduce-x-to-zero",
        "java": true,
        "kotlin": true,
        "id": 1658
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Minimum Window Substring",
        "pattern": "Sliding Window",
        "link": "minimum-window-substring/",
        "video": "jSto0O4AJbM",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0076-minimum-window-substring",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "ruby": true,
        "swift": true,
        "id": 76
    },
    {
        "neetcode150": true,
        "problem": "Sliding Window Maximum",
        "pattern": "Sliding Window",
        "link": "sliding-window-maximum/",
        "video": "DfljaUwZsOk",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0239-sliding-window-maximum",
        "csharp": true,
        "go": true,
        "kotlin": true,
        "typescript": true,
        "ruby": true,
        "c": true,
        "rust": true,
        "id": 239
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Valid Parentheses",
        "pattern": "Stack",
        "link": "valid-parentheses/",
        "video": "WTzjTskDFMg",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0020-valid-parentheses",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "dart": true,
        "id": 20
    },
    {
        "problem": "Baseball Game",
        "pattern": "Stack",
        "link": "baseball-game/",
        "video": "Id_tqGdsZQI",
        "difficulty": "Easy",
        "code": "0682-baseball-game",
        "c": true,
        "cpp": true,
        "python": true,
        "java": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "kotlin": true,
        "csharp": true,
        "javascript": true,
        "swift": true,
        "id": 682
    },
    {
        "problem": "Implement Stack Using Queues",
        "pattern": "Stack",
        "link": "implement-stack-using-queues/",
        "video": "rW4vm0-DLYc",
        "difficulty": "Easy",
        "code": "0225-implement-stack-using-queues",
        "cpp": true,
        "go": true,
        "c": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "rust": true,
        "kotlin": true,
        "id": 225
    },
    {
        "neetcode150": true,
        "problem": "Min Stack",
        "pattern": "Stack",
        "link": "min-stack/",
        "video": "qkLl7nAwDPo",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0155-min-stack",
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "kotlin": true,
        "c": true,
        "rust": true,
        "swift": true,
        "id": 155
    },
    {
        "neetcode150": true,
        "problem": "Evaluate Reverse Polish Notation",
        "pattern": "Stack",
        "link": "evaluate-reverse-polish-notation/",
        "video": "iu0082c4HDE",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0150-evaluate-reverse-polish-notation",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 150
    },
    {
        "problem": "Removing Stars From a String",
        "pattern": "Stack",
        "link": "removing-stars-from-a-string/",
        "video": "pRyFZIaKegA",
        "difficulty": "Medium",
        "code": "2390-removing-stars-from-a-string",
        "kotlin": true,
        "java": true,
        "python": true,
        "javascript": true,
        "id": 2390
    },
    {
        "problem": "Validate Stack Sequences",
        "pattern": "Stack",
        "link": "validate-stack-sequences/",
        "video": "mzua0r94kb8",
        "difficulty": "Medium",
        "code": "0946-validate-stack-sequences",
        "kotlin": true,
        "python": true,
        "id": 946
    },
    {
        "neetcode150": true,
        "problem": "Generate Parentheses",
        "pattern": "Stack",
        "link": "generate-parentheses/",
        "video": "s9fokUqJ76A",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0022-generate-parentheses",
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "kotlin": true,
        "c": true,
        "rust": true,
        "swift": true,
        "id": 22
    },
    {
        "problem": "Asteroid Collision",
        "pattern": "Stack",
        "link": "asteroid-collision/",
        "video": "LN7KjRszjk4",
        "difficulty": "Medium",
        "code": "0735-asteroid-collision",
        "java": true,
        "javascript": true,
        "typescript": true,
        "rust": true,
        "python": true,
        "cpp": true,
        "kotlin": true,
        "id": 735
    },
    {
        "neetcode150": true,
        "problem": "Daily Temperatures",
        "pattern": "Stack",
        "link": "daily-temperatures/",
        "video": "cTBiBSnjO3c",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0739-daily-temperatures",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 739
    },
    {
        "problem": "Online Stock Span",
        "pattern": "Stack",
        "link": "online-stock-span/",
        "video": "slYh0ZNEqSw",
        "difficulty": "Medium",
        "code": "0901-online-stock-span",
        "python": true,
        "typescript": true,
        "rust": true,
        "cpp": true,
        "java": true,
        "javascript": true,
        "kotlin": true,
        "id": 901
    },
    {
        "neetcode150": true,
        "problem": "Car Fleet",
        "pattern": "Stack",
        "link": "car-fleet/",
        "video": "Pr6T-3yB9RM",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0853-car-fleet",
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "kotlin": true,
        "rust": true,
        "c": true,
        "id": 853
    },
    {
        "problem": "Simplify Path",
        "pattern": "Stack",
        "link": "simplify-path/",
        "video": "qYlHrAKJfyA",
        "difficulty": "Medium",
        "code": "0071-simplify-path",
        "python": true,
        "typescript": true,
        "rust": true,
        "java": true,
        "kotlin": true,
        "javascript": true,
        "id": 71
    },
    {
        "problem": "Decode String",
        "pattern": "Stack",
        "link": "decode-string/",
        "video": "qB0zZpBJlh8",
        "difficulty": "Medium",
        "code": "0394-decode-string",
        "python": true,
        "typescript": true,
        "rust": true,
        "scala": true,
        "java": true,
        "kotlin": true,
        "id": 394
    },
    {
        "problem": "Remove K Digits",
        "pattern": "Stack",
        "link": "remove-k-digits/",
        "video": "cFabMOnJaq0",
        "difficulty": "Medium",
        "code": "0402-remove-k-digits",
        "cpp": true,
        "javascript": true,
        "typescript": true,
        "rust": true,
        "kotlin": true,
        "java": true,
        "python": true,
        "id": 402
    },
    {
        "problem": "Remove All Adjacent Duplicates In String II",
        "pattern": "Stack",
        "link": "remove-all-adjacent-duplicates-in-string-ii/",
        "video": "w6LcypDgC4w",
        "difficulty": "Medium",
        "code": "1209-remove-all-adjacent-duplicates-in-string-ii",
        "cpp": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "rust": true,
        "kotlin": true,
        "id": 1209
    },
    {
        "problem": "132 Pattern",
        "pattern": "Stack",
        "link": "132-pattern/",
        "video": "q5ANAl8Z458",
        "difficulty": "Medium",
        "code": "0456-132-pattern",
        "python": true,
        "cpp": true,
        "java": true,
        "javascript": true,
        "typescript": true,
        "kotlin": true,
        "rust": true,
        "id": 456
    },
    {
        "problem": "Maximum Frequency Stack",
        "pattern": "Stack",
        "link": "maximum-frequency-stack/",
        "video": "Z6idIicFDOE",
        "difficulty": "Hard",
        "code": "0895-maximum-frequency-stack",
        "javascript": true,
        "typescript": true,
        "rust": true,
        "kotlin": true,
        "id": 895
    },
    {
        "neetcode150": true,
        "problem": "Largest Rectangle In Histogram",
        "pattern": "Stack",
        "link": "largest-rectangle-in-histogram/",
        "video": "zx5Sw9130L0",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0084-largest-rectangle-in-histogram",
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "c": true,
        "id": 84
    },
    {
        "neetcode150": true,
        "problem": "Binary Search",
        "pattern": "Binary Search",
        "link": "binary-search/",
        "video": "s4DPM8ct1pI",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0704-binary-search",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "dart": true,
        "id": 704
    },
    {
        "problem": "Search Insert Position",
        "pattern": "Binary Search",
        "link": "search-insert-position/",
        "video": "K-RYzDZkzCI",
        "difficulty": "Easy",
        "code": "0035-search-insert-position",
        "c": true,
        "cpp": true,
        "python": true,
        "javascript": true,
        "swift": true,
        "csharp": true,
        "java": true,
        "go": true,
        "kotlin": true,
        "typescript": true,
        "rust": true,
        "id": 35
    },
    {
        "problem": "Guess Number Higher Or Lower",
        "pattern": "Binary Search",
        "link": "guess-number-higher-or-lower/",
        "video": "xW4QsTtaCa4",
        "difficulty": "Easy",
        "code": "0374-guess-number-higher-or-lower",
        "c": true,
        "python": true,
        "cpp": true,
        "java": true,
        "javascript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 374
    },
    {
        "problem": "Arranging Coins",
        "pattern": "Binary Search",
        "link": "arranging-coins/",
        "video": "5rHz_6s2Buw",
        "difficulty": "Easy",
        "code": "0441-arranging-coins",
        "python": true,
        "cpp": true,
        "kotlin": true,
        "java": true,
        "javascript": true,
        "id": 441
    },
    {
        "problem": "Squares of a Sorted Array",
        "pattern": "Binary Search",
        "link": "squares-of-a-sorted-array/",
        "video": "FPCZsG_AkUg",
        "difficulty": "Easy",
        "code": "0977-squares-of-a-sorted-array",
        "cpp": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "java": true,
        "rust": true,
        "id": 977
    },
    {
        "problem": "Valid Perfect Square",
        "pattern": "Binary Search",
        "link": "valid-perfect-square/",
        "video": "Cg_wWPHJ2Sk",
        "difficulty": "Easy",
        "code": "0367-valid-perfect-square",
        "python": true,
        "javascript": true,
        "cpp": true,
        "swift": true,
        "java": true,
        "kotlin": true,
        "id": 367
    },
    {
        "problem": "Sqrt(x) ",
        "pattern": "Binary Search",
        "link": "sqrtx/",
        "video": "zdMhGxRWutQ",
        "difficulty": "Easy",
        "code": "0069-sqrtx",
        "kotlin": true,
        "c": true,
        "cpp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "id": 0
    },
    {
        "problem": "Single Element in a Sorted Array",
        "pattern": "Binary Search",
        "link": "single-element-in-a-sorted-array/",
        "video": "HGtqdzyUJ3k",
        "difficulty": "Medium",
        "code": "0540-single-element-in-a-sorted-array",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "id": 540
    },
    {
        "problem": "Capacity to Ship Packages",
        "pattern": "Binary Search",
        "link": "capacity-to-ship-packages-within-d-days/",
        "video": "ER_oLmdc-nw",
        "difficulty": "Medium",
        "code": "1011-capacity-to-ship-packages-within-d-days",
        "kotlin": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Find Peak Element",
        "pattern": "Binary Search",
        "link": "find-peak-element/",
        "video": "kMzJy9es7Hc",
        "difficulty": "Medium",
        "code": "0162-find-peak-element",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "id": 162
    },
    {
        "problem": "Successful Pairs of Spells and Potions",
        "pattern": "Binary Search",
        "link": "successful-pairs-of-spells-and-potions/",
        "video": "OKnm5oyAhWg",
        "difficulty": "Medium",
        "code": "2300-successful-pairs-of-spells-and-potions",
        "kotlin": true,
        "cpp": true,
        "python": true,
        "id": 2300
    },
    {
        "neetcode150": true,
        "problem": "Search a 2D Matrix",
        "pattern": "Binary Search",
        "link": "search-a-2d-matrix/",
        "video": "Ber2pi2C0j0",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0074-search-a-2d-matrix",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 74
    },
    {
        "neetcode150": true,
        "problem": "Koko Eating Bananas",
        "pattern": "Binary Search",
        "link": "koko-eating-bananas/",
        "video": "U2SozAs9RzA",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0875-koko-eating-bananas",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 875
    },
    {
        "problem": "Minimize the Maximum Difference of Pairs",
        "pattern": "Binary Search",
        "link": "minimize-the-maximum-difference-of-pairs/",
        "video": "lf1Pxg7IrzQ",
        "difficulty": "Medium",
        "code": "2616-minimize-the-maximum-difference-of-pairs",
        "java": true,
        "kotlin": true,
        "id": 2616
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Find Minimum In Rotated Sorted Array",
        "pattern": "Binary Search",
        "link": "find-minimum-in-rotated-sorted-array/",
        "video": "nIVW4P8b1VA",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0153-find-minimum-in-rotated-sorted-array",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "ruby": true,
        "id": 153
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Search In Rotated Sorted Array",
        "pattern": "Binary Search",
        "link": "search-in-rotated-sorted-array/",
        "video": "U8XENwh8Oy8",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0033-search-in-rotated-sorted-array",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "id": 33
    },
    {
        "problem": "Search In Rotated Sorted Array II",
        "pattern": "Binary Search",
        "link": "search-in-rotated-sorted-array-ii/",
        "video": "oUnF7o88_Xc",
        "difficulty": "Medium",
        "code": "0081-search-in-rotated-sorted-array-ii",
        "java": true,
        "kotlin": true,
        "id": 81
    },
    {
        "neetcode150": true,
        "problem": "Time Based Key Value Store",
        "pattern": "Binary Search",
        "link": "time-based-key-value-store/",
        "video": "fu2cD_6E8Hw",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0981-time-based-key-value-store",
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "ruby": true,
        "rust": true,
        "c": true,
        "id": 981
    },
    {
        "problem": "Find First And Last Position of Element In Sorted Array",
        "pattern": "Binary Search",
        "link": "find-first-and-last-position-of-element-in-sorted-array/",
        "video": "4sQL7R5ySUU",
        "difficulty": "Medium",
        "code": "0034-find-first-and-last-position-of-element-in-sorted-array",
        "csharp": true,
        "python": true,
        "kotlin": true,
        "cpp": true,
        "java": true,
        "swift": true,
        "javascript": true,
        "id": 34
    },
    {
        "problem": "Maximum Number of Removable Characters",
        "pattern": "Binary Search",
        "link": "maximum-number-of-removable-characters/",
        "video": "NMP3nRPyX5g",
        "difficulty": "Medium",
        "code": "1898-maximum-number-of-removable-characters",
        "javascript": true,
        "kotlin": true,
        "id": 1898
    },
    {
        "problem": "Populating Next Right Pointers In Each Node",
        "pattern": "Binary Search",
        "link": "populating-next-right-pointers-in-each-node/",
        "video": "U4hFQCa1Cq0",
        "difficulty": "Medium",
        "code": "0116-populating-next-right-pointers-in-each-node",
        "go": true,
        "cpp": true,
        "javascript": true,
        "kotlin": true,
        "id": 116
    },
    {
        "problem": "Search Suggestions System",
        "pattern": "Binary Search",
        "link": "search-suggestions-system/",
        "video": "D4T2N0yAr20",
        "difficulty": "Medium",
        "code": "1268-search-suggestions-system",
        "java": true,
        "javascript": true,
        "kotlin": true,
        "id": 1268
    },
    {
        "problem": "Split Array Largest Sum",
        "pattern": "Binary Search",
        "link": "split-array-largest-sum/",
        "video": "YUF3_eBdzsk",
        "difficulty": "Hard",
        "code": "0410-split-array-largest-sum",
        "python": true,
        "javascript": true,
        "kotlin": true,
        "id": 410
    },
    {
        "neetcode150": true,
        "problem": "Median of Two Sorted Arrays",
        "pattern": "Binary Search",
        "link": "median-of-two-sorted-arrays/",
        "video": "q6IEA26hvXc",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0004-median-of-two-sorted-arrays",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "id": 4
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Reverse Linked List",
        "pattern": "Linked List",
        "link": "reverse-linked-list/",
        "video": "G0_I-ZF0S38",
        "difficulty": "Easy",
        "python": true,
        "cpp": true,
        "javascript": true,
        "java": true,
        "code": "0206-reverse-linked-list",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "scala": true,
        "rust": true,
        "dart": true,
        "id": 206
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Merge Two Sorted Lists",
        "pattern": "Linked List",
        "link": "merge-two-sorted-lists/",
        "video": "XIdigk956u0",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0021-merge-two-sorted-lists",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "scala": true,
        "dart": true,
        "rust": true,
        "id": 21
    },
    {
        "problem": "Palindrome Linked List",
        "pattern": "Linked List",
        "link": "palindrome-linked-list/",
        "video": "yOzXms1J6Nk",
        "difficulty": "Easy",
        "code": "0234-palindrome-linked-list",
        "cpp": true,
        "javascript": true,
        "python": true,
        "go": true,
        "java": true,
        "kotlin": true,
        "c": true,
        "id": 234
    },
    {
        "problem": "Remove Linked List Elements",
        "pattern": "Linked List",
        "link": "remove-linked-list-elements/",
        "video": "JI71sxtHTng",
        "difficulty": "Easy",
        "code": "0203-remove-linked-list-elements",
        "javascript": true,
        "typescript": true,
        "go": true,
        "cpp": true,
        "java": true,
        "python": true,
        "kotlin": true,
        "id": 203
    },
    {
        "problem": "Remove Duplicates From Sorted List",
        "pattern": "Linked List",
        "link": "remove-duplicates-from-sorted-list/",
        "video": "p10f-VpO4nE",
        "difficulty": "Easy",
        "code": "0083-remove-duplicates-from-sorted-list",
        "cpp": true,
        "python": true,
        "javascript": true,
        "go": true,
        "java": true,
        "kotlin": true,
        "c": true,
        "id": 83
    },
    {
        "problem": "Middle of the Linked List",
        "pattern": "Linked List",
        "link": "middle-of-the-linked-list/",
        "video": "A2_ldqM4QcY",
        "difficulty": "Easy",
        "python": true,
        "code": "0876-middle-of-the-linked-list",
        "c": true,
        "cpp": true,
        "csharp": true,
        "java": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "swift": true,
        "id": 876
    },
    {
        "problem": "Intersection of Two Linked Lists",
        "pattern": "Linked List",
        "link": "intersection-of-two-linked-lists/",
        "video": "D0X0BONOQhI",
        "difficulty": "Easy",
        "code": "0160-intersection-of-two-linked-lists",
        "python": true,
        "javascript": true,
        "java": true,
        "go": true,
        "kotlin": true,
        "c": true,
        "cpp": true,
        "id": 160
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Reorder List",
        "pattern": "Linked List",
        "link": "reorder-list/",
        "video": "S5bfdUTrKLM",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0143-reorder-list",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "id": 143
    },
    {
        "problem": "Maximum Twin Sum Of A Linked List",
        "pattern": "Linked List",
        "link": "maximum-twin-sum-of-a-linked-list/",
        "video": "doj95MelfSA",
        "difficulty": "Medium",
        "code": "2130-maximum-twin-sum-of-a-linked-list",
        "python": true,
        "java": true,
        "kotlin": true,
        "cpp": true,
        "javascript": true,
        "go": true,
        "id": 2130
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Remove Nth Node From End of List",
        "pattern": "Linked List",
        "link": "remove-nth-node-from-end-of-list/",
        "video": "XVuQxVej6y8",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0019-remove-nth-node-from-end-of-list",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 19
    },
    {
        "problem": "Swapping Nodes in a Linked List",
        "pattern": "Linked List",
        "link": "swapping-nodes-in-a-linked-list/",
        "video": "4LsrgMyQIjQ",
        "difficulty": "Medium",
        "code": "1721-swapping-nodes-in-a-linked-list",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "go": true,
        "id": 1721
    },
    {
        "problem": "LFU Cache",
        "pattern": "Linked List",
        "link": "lfu-cache/",
        "video": "bLEIHn-DgoA",
        "difficulty": "Hard",
        "code": "0460-lfu-cache",
        "javascript": true,
        "kotlin": true,
        "id": 460
    },
    {
        "neetcode150": true,
        "problem": "Copy List With Random Pointer",
        "pattern": "Linked List",
        "link": "copy-list-with-random-pointer/",
        "video": "5Y2EiZST97Y",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0138-copy-list-with-random-pointer",
        "c": true,
        "csharp": true,
        "typescript": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "go": true,
        "id": 138
    },
    {
        "problem": "Design Linked List",
        "pattern": "Linked List",
        "link": "design-linked-list/",
        "video": "Wf4QhpdVFQo",
        "difficulty": "Medium",
        "python": true,
        "code": "0707-design-linked-list",
        "go": true,
        "kotlin": true,
        "c": true,
        "java": true,
        "id": 707
    },
    {
        "problem": "Design Browser History",
        "pattern": "Linked List",
        "link": "design-browser-history/",
        "video": "i1G-kKnBu8k",
        "difficulty": "Medium",
        "python": true,
        "code": "1472-design-browser-history",
        "javascript": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "java": true,
        "kotlin": true,
        "id": 1472
    },
    {
        "neetcode150": true,
        "problem": "Add Two Numbers",
        "pattern": "Linked List",
        "link": "add-two-numbers/",
        "video": "wgFPrzTjm7s",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0002-add-two-numbers",
        "c": true,
        "csharp": true,
        "typescript": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "scala": true,
        "go": true,
        "rust": true,
        "id": 2
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Linked List Cycle",
        "pattern": "Linked List",
        "link": "linked-list-cycle/",
        "video": "gBTe7lFR3vc",
        "difficulty": "Easy",
        "python": true,
        "cpp": true,
        "javascript": true,
        "java": true,
        "code": "0141-linked-list-cycle",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "scala": true,
        "id": 141
    },
    {
        "neetcode150": true,
        "problem": "Find The Duplicate Number",
        "pattern": "Linked List",
        "link": "find-the-duplicate-number/",
        "video": "wjYnzkAhcNk",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0287-find-the-duplicate-number",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 287
    },
    {
        "problem": "Swap Nodes In Pairs",
        "pattern": "Linked List",
        "link": "swap-nodes-in-pairs/",
        "video": "o811TZLAWOo",
        "difficulty": "Medium",
        "code": "0024-swap-nodes-in-pairs",
        "python": true,
        "go": true,
        "java": true,
        "kotlin": true,
        "c": true,
        "cpp": true,
        "id": 24
    },
    {
        "problem": "Sort List",
        "pattern": "Linked List",
        "link": "sort-list/",
        "video": "TGveA1oFhrc",
        "difficulty": "Medium",
        "code": "0148-sort-list",
        "java": true,
        "python": true,
        "c": true,
        "cpp": true,
        "kotlin": true,
        "id": 148
    },
    {
        "problem": "Partition List",
        "pattern": "Linked List",
        "link": "partition-list/",
        "video": "KT1iUciJr4g",
        "difficulty": "Medium",
        "code": "0086-partition-list",
        "python": true,
        "java": true,
        "kotlin": true,
        "id": 86
    },
    {
        "problem": "Rotate List",
        "pattern": "Linked List",
        "link": "rotate-list/",
        "video": "UcGtPs2LE_c",
        "difficulty": "Medium",
        "code": "0061-rotate-list",
        "python": true,
        "cpp": true,
        "java": true,
        "kotlin": true,
        "id": 61
    },
    {
        "problem": "Reverse Linked List II",
        "pattern": "Linked List",
        "link": "reverse-linked-list-ii/",
        "video": "RF_M9tX4Eag",
        "difficulty": "Medium",
        "code": "0092-reverse-linked-list-ii",
        "python": true,
        "javascript": true,
        "cpp": true,
        "java": true,
        "kotlin": true,
        "id": 92
    },
    {
        "problem": "Design Circular Queue",
        "pattern": "Linked List",
        "link": "design-circular-queue/",
        "video": "aBbsfn863oA",
        "difficulty": "Medium",
        "code": "0622-design-circular-queue",
        "python": true,
        "go": true,
        "kotlin": true,
        "java": true,
        "id": 622
    },
    {
        "problem": "Insertion Sort List",
        "pattern": "Linked List",
        "link": "insertion-sort-list/",
        "video": "Kk6mXAzqX3Y",
        "difficulty": "Medium",
        "code": "0147-insertion-sort-list",
        "python": true,
        "cpp": true,
        "kotlin": true,
        "id": 147
    },
    {
        "problem": "Split Linked List in Parts",
        "pattern": "Linked List",
        "link": "split-linked-list-in-parts/",
        "video": "-OTlqdrxrVI",
        "difficulty": "Medium",
        "code": "0725-split-linked-list-in-parts",
        "java": true,
        "kotlin": true,
        "id": 725
    },
    {
        "neetcode150": true,
        "problem": "LRU Cache",
        "pattern": "Linked List",
        "link": "lru-cache/",
        "video": "7ABFKPK2hD4",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0146-lru-cache",
        "c": true,
        "csharp": true,
        "ruby": true,
        "kotlin": true,
        "go": true,
        "typescript": true,
        "swift": true,
        "id": 146
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Merge K Sorted Lists",
        "pattern": "Linked List",
        "link": "merge-k-sorted-lists/",
        "video": "q5a5OiGbT6Q",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0023-merge-k-sorted-lists",
        "c": true,
        "csharp": true,
        "typescript": true,
        "kotlin": true,
        "go": true,
        "swift": true,
        "rust": true,
        "id": 23
    },
    {
        "neetcode150": true,
        "problem": "Reverse Nodes In K Group",
        "pattern": "Linked List",
        "link": "reverse-nodes-in-k-group/",
        "video": "1UOPsfP85V4",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0025-reverse-nodes-in-k-group",
        "c": true,
        "csharp": true,
        "typescript": true,
        "kotlin": true,
        "go": true,
        "swift": true,
        "rust": true,
        "id": 25
    },
    {
        "problem": "Binary Tree Inorder Traversal",
        "pattern": "Trees",
        "link": "binary-tree-inorder-traversal/",
        "video": "g_S5WuasWUE",
        "difficulty": "Easy",
        "code": "0094-binary-tree-inorder-traversal",
        "c": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "ruby": true,
        "csharp": true,
        "java": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "cpp": true,
        "id": 94
    },
    {
        "problem": "Binary Tree Preorder Traversal",
        "pattern": "Trees",
        "link": "binary-tree-preorder-traversal/",
        "video": "afTpieEZXck",
        "difficulty": "Easy",
        "code": "0144-binary-tree-preorder-traversal",
        "python": true,
        "cpp": true,
        "typescript": true,
        "kotlin": true,
        "id": 144
    },
    {
        "problem": "Binary Tree Postorder Traversal",
        "pattern": "Trees",
        "link": "binary-tree-postorder-traversal/",
        "video": "QhszUQhGGlA",
        "difficulty": "Easy",
        "code": "0145-binary-tree-postorder-traversal",
        "python": true,
        "java": true,
        "cpp": true,
        "typescript": true,
        "kotlin": true,
        "id": 145
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Invert Binary Tree",
        "pattern": "Trees",
        "link": "invert-binary-tree/",
        "video": "OnSn2XEQ4MY",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0226-invert-binary-tree",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 226
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Maximum Depth of Binary Tree",
        "pattern": "Trees",
        "link": "maximum-depth-of-binary-tree/",
        "video": "hTM3phVI6YQ",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0104-maximum-depth-of-binary-tree",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 104
    },
    {
        "neetcode150": true,
        "problem": "Diameter of Binary Tree",
        "pattern": "Trees",
        "link": "diameter-of-binary-tree/",
        "video": "bkxqA8Rfv04",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0543-diameter-of-binary-tree",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 543
    },
    {
        "neetcode150": true,
        "problem": "Balanced Binary Tree",
        "pattern": "Trees",
        "link": "balanced-binary-tree/",
        "video": "QfJsau0ItOY",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0110-balanced-binary-tree",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 110
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Same Tree",
        "pattern": "Trees",
        "link": "same-tree/",
        "video": "vRbbcKXCxOw",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0100-same-tree",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 100
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Subtree of Another Tree",
        "pattern": "Trees",
        "link": "subtree-of-another-tree/",
        "video": "E36O5SWp-LE",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0572-subtree-of-another-tree",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "scala": true,
        "rust": true,
        "id": 572
    },
    {
        "problem": "Convert Sorted Array to Binary Search Tree",
        "pattern": "Trees",
        "link": "convert-sorted-array-to-binary-search-tree/",
        "video": "0K0uCMYq5ng",
        "difficulty": "Easy",
        "code": "0108-convert-sorted-array-to-binary-search-tree",
        "c": true,
        "javascript": true,
        "go": true,
        "kotlin": true,
        "java": true,
        "python": true,
        "id": 108
    },
    {
        "problem": "Merge Two Binary Trees",
        "pattern": "Trees",
        "link": "merge-two-binary-trees/",
        "video": "QHH6rIK3dDQ",
        "difficulty": "Easy",
        "code": "0617-merge-two-binary-trees",
        "c": true,
        "java": true,
        "python": true,
        "javascript": true,
        "go": true,
        "dart": true,
        "kotlin": true,
        "cpp": true,
        "id": 617
    },
    {
        "problem": "Path Sum",
        "pattern": "Trees",
        "link": "path-sum/",
        "video": "LSKQyOz_P8I",
        "difficulty": "Easy",
        "code": "0112-path-sum",
        "go": true,
        "c": true,
        "csharp": true,
        "javascript": true,
        "swift": true,
        "java": true,
        "python": true,
        "kotlin": true,
        "id": 112
    },
    {
        "problem": "Construct String From Binary Tree",
        "pattern": "Trees",
        "link": "construct-string-from-binary-tree/",
        "video": "b1WpYxnuebQ",
        "difficulty": "Easy",
        "code": "0606-construct-string-from-binary-tree",
        "java": true,
        "python": true,
        "kotlin": true,
        "id": 606
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Lowest Common Ancestor of a Binary Search Tree",
        "pattern": "Trees",
        "link": "lowest-common-ancestor-of-a-binary-search-tree/",
        "video": "gs2LMfuOR9k",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0235-lowest-common-ancestor-of-a-binary-search-tree",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "scala": true,
        "rust": true,
        "id": 235
    },
    {
        "problem": "Insert into a Binary Search Tree",
        "pattern": "Trees",
        "link": "insert-into-a-binary-search-tree/",
        "video": "Cpg8f79luEA",
        "difficulty": "Medium",
        "python": true,
        "code": "0701-insert-into-a-binary-search-tree",
        "kotlin": true,
        "cpp": true,
        "csharp": true,
        "java": true,
        "typescript": true,
        "id": 701
    },
    {
        "problem": "Delete Node in a BST",
        "pattern": "Trees",
        "link": "delete-node-in-a-bst/",
        "video": "LFzAoJJt92M",
        "difficulty": "Medium",
        "python": true,
        "code": "0450-delete-node-in-a-bst",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "typescript": true,
        "rust": true,
        "id": 450
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Binary Tree Level Order Traversal",
        "pattern": "Trees",
        "link": "binary-tree-level-order-traversal/",
        "video": "6ZnyEApgFYg",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0102-binary-tree-level-order-traversal",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 102
    },
    {
        "neetcode150": true,
        "problem": "Binary Tree Right Side View",
        "pattern": "Trees",
        "link": "binary-tree-right-side-view/",
        "video": "d4zLyf32e3I",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0199-binary-tree-right-side-view",
        "c": true,
        "csharp": true,
        "typescript": true,
        "swift": true,
        "kotlin": true,
        "go": true,
        "rust": true,
        "id": 199
    },
    {
        "problem": "Minimum Distance between BST Nodes",
        "pattern": "Trees",
        "link": "minimum-distance-between-bst-nodes/",
        "video": "joxx4hTYwcw",
        "difficulty": "Easy",
        "code": "0783-minimum-distance-between-bst-nodes",
        "kotlin": true,
        "python": true,
        "id": 783
    },
    {
        "problem": "Symmetric Tree ",
        "pattern": "Trees",
        "link": "symmetric-tree/",
        "video": "Mao9uzxwvmc",
        "difficulty": "Easy",
        "code": "0101-symmetric-tree",
        "kotlin": true,
        "python": true,
        "id": 101
    },
    {
        "problem": "Minimum Time to Collect All Apples in a Tree",
        "pattern": "Trees",
        "link": "minimum-time-to-collect-all-apples-in-a-tree/",
        "video": "Xdt5Z583auM",
        "difficulty": "Medium",
        "code": "1443-minimum-time-to-collect-all-apples-in-a-tree",
        "rust": true,
        "kotlin": true,
        "id": 1443
    },
    {
        "problem": "Binary Tree Zigzag Level Order Traversal",
        "pattern": "Trees",
        "link": "binary-tree-zigzag-level-order-traversal/",
        "video": "igbboQbiwqw",
        "difficulty": "Medium",
        "code": "0103-binary-tree-zigzag-level-order-traversal",
        "kotlin": true,
        "cpp": true,
        "python": true,
        "id": 103
    },
    {
        "problem": "Construct Quad Tree",
        "pattern": "Trees",
        "link": "construct-quad-tree/",
        "video": "UQ-1sBMV0v4",
        "difficulty": "Medium",
        "code": "0427-construct-quad-tree",
        "kotlin": true,
        "id": 427
    },
    {
        "problem": "Find Duplicate Subtrees",
        "pattern": "Trees",
        "link": "find-duplicate-subtrees/",
        "video": "kn0Z5_qPPzY",
        "difficulty": "Medium",
        "code": "0652-find-duplicate-subtrees",
        "kotlin": true,
        "id": 652
    },
    {
        "problem": "Check Completeness of a Binary Tree",
        "pattern": "Trees",
        "link": "check-completeness-of-a-binary-tree/",
        "video": "olbiZ-EOSig",
        "difficulty": "Medium",
        "code": "0958-check-completeness-of-a-binary-tree",
        "kotlin": true,
        "cpp": true,
        "id": 958
    },
    {
        "problem": "Construct Binary Tree from Inorder and Postorder Traversal",
        "pattern": "Trees",
        "link": "construct-binary-tree-from-inorder-and-postorder-traversal/",
        "video": "vm63HuIU7kw",
        "difficulty": "Medium",
        "code": "0106-construct-binary-tree-from-inorder-and-postorder-traversal",
        "java": true,
        "kotlin": true,
        "id": 106
    },
    {
        "problem": "Maximum Width of Binary Tree ",
        "pattern": "Trees",
        "link": "maximum-width-of-binary-tree/",
        "video": "FPzLE2L7uHs",
        "difficulty": "Medium",
        "code": "0662-maximum-width-of-binary-tree",
        "java": true,
        "kotlin": true,
        "id": 662
    },
    {
        "problem": "Time Needed to Inform All Employees ",
        "pattern": "Trees",
        "link": "time-needed-to-inform-all-employees/",
        "video": "zdBYi0p4L5Q",
        "difficulty": "Medium",
        "code": "1376-time-needed-to-inform-all-employees",
        "kotlin": true,
        "id": 1376
    },
    {
        "neetcode150": true,
        "problem": "Count Good Nodes In Binary Tree",
        "pattern": "Trees",
        "link": "count-good-nodes-in-binary-tree/",
        "video": "7cp5imvDzl4",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "1448-count-good-nodes-in-binary-tree",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 1448
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Validate Binary Search Tree",
        "pattern": "Trees",
        "link": "validate-binary-search-tree/",
        "video": "s6ATEkipzow",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0098-validate-binary-search-tree",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 98
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Kth Smallest Element In a Bst",
        "pattern": "Trees",
        "link": "kth-smallest-element-in-a-bst/",
        "video": "5LUXSvjmGCw",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0230-kth-smallest-element-in-a-bst",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "scala": true,
        "rust": true,
        "id": 230
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Construct Binary Tree From Preorder And Inorder Traversal",
        "pattern": "Trees",
        "link": "construct-binary-tree-from-preorder-and-inorder-traversal/",
        "video": "ihj4IQGZ2zc",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0105-construct-binary-tree-from-preorder-and-inorder-traversal",
        "c": true,
        "csharp": true,
        "typescript": true,
        "kotlin": true,
        "go": true,
        "id": 105
    },
    {
        "problem": "Unique Binary Search Trees",
        "pattern": "Trees",
        "link": "unique-binary-search-trees/",
        "video": "Ox0TenN3Zpg",
        "difficulty": "Medium",
        "code": "0096-unique-binary-search-trees",
        "c": true,
        "java": true,
        "kotlin": true,
        "id": 96
    },
    {
        "problem": "Unique Binary Search Trees II",
        "pattern": "Trees",
        "link": "unique-binary-search-trees-ii/",
        "video": "m907FlQa2Yc",
        "difficulty": "Medium",
        "code": "0095-unique-binary-search-trees-ii",
        "kotlin": true,
        "id": 95
    },
    {
        "problem": "Sum Root to Leaf Numbers",
        "pattern": "Trees",
        "link": "sum-root-to-leaf-numbers/",
        "video": "Jk16lZGFWxE",
        "difficulty": "Medium",
        "code": "0129-sum-root-to-leaf-numbers",
        "c": true,
        "java": true,
        "cpp": true,
        "kotlin": true,
        "id": 129
    },
    {
        "problem": "House Robber III",
        "pattern": "Trees",
        "link": "house-robber-iii/",
        "video": "nHR8ytpzz7c",
        "difficulty": "Medium",
        "code": "0337-house-robber-iii",
        "java": true,
        "kotlin": true,
        "id": 337
    },
    {
        "problem": "Flip Equivalent Binary Trees",
        "pattern": "Trees",
        "link": "flip-equivalent-binary-trees/",
        "video": "izRDc1il9Pk",
        "difficulty": "Medium",
        "code": "0951-flip-equivalent-binary-trees",
        "java": true,
        "kotlin": true,
        "id": 951
    },
    {
        "problem": "Operations On Tree",
        "pattern": "Trees",
        "link": "operations-on-tree/",
        "video": "qK4PtjrVD0U",
        "difficulty": "Medium",
        "code": "1993-operations-on-tree",
        "kotlin": true,
        "id": 1993
    },
    {
        "problem": "All Possible Full Binary Trees",
        "pattern": "Trees",
        "link": "all-possible-full-binary-trees/",
        "video": "nZtrZPTTCAo",
        "difficulty": "Medium",
        "code": "0894-all-possible-full-binary-trees",
        "python": true,
        "java": true,
        "kotlin": true,
        "id": 894
    },
    {
        "problem": "Find Bottom Left Tree Value",
        "pattern": "Trees",
        "link": "find-bottom-left-tree-value/",
        "video": "u_by_cTsNJA",
        "difficulty": "Medium",
        "code": "0513-find-bottom-left-tree-value",
        "java": true,
        "kotlin": true,
        "id": 513
    },
    {
        "problem": "Trim a Binary Search Tree",
        "pattern": "Trees",
        "link": "trim-a-binary-search-tree/",
        "video": "jwt5mTjEXGc",
        "difficulty": "Medium",
        "code": "0669-trim-a-binary-search-tree",
        "python": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "java": true,
        "kotlin": true,
        "id": 669
    },
    {
        "problem": "Binary Search Tree Iterator",
        "pattern": "Trees",
        "link": "binary-search-tree-iterator/",
        "video": "RXy5RzGF5wo",
        "difficulty": "Medium",
        "code": "0173-binary-search-tree-iterator",
        "java": true,
        "javascript": true,
        "kotlin": true,
        "id": 173
    },
    {
        "problem": "Convert Bst to Greater Tree",
        "pattern": "Trees",
        "link": "convert-bst-to-greater-tree/",
        "video": "7vVEJwVvAlI",
        "difficulty": "Medium",
        "code": "0538-convert-bst-to-greater-tree",
        "cpp": true,
        "kotlin": true,
        "id": 538
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Binary Tree Maximum Path Sum",
        "pattern": "Trees",
        "link": "binary-tree-maximum-path-sum/",
        "video": "Hr5cWUld4vU",
        "difficulty": "Hard",
        "code": "0124-binary-tree-maximum-path-sum",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 124
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Serialize And Deserialize Binary Tree",
        "pattern": "Trees",
        "link": "serialize-and-deserialize-binary-tree/",
        "video": "u4JAi2JJhI8",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0297-serialize-and-deserialize-binary-tree",
        "c": true,
        "csharp": true,
        "kotlin": true,
        "go": true,
        "typescript": true,
        "swift": true,
        "id": 297
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Implement Trie Prefix Tree",
        "pattern": "Tries",
        "link": "implement-trie-prefix-tree/",
        "video": "oobqoCJlHA0",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0208-implement-trie-prefix-tree",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "id": 208
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Design Add And Search Words Data Structure",
        "pattern": "Tries",
        "link": "design-add-and-search-words-data-structure/",
        "video": "BTf05gs_8iU",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0211-design-add-and-search-words-data-structure",
        "csharp": true,
        "typescript": true,
        "ruby": true,
        "kotlin": true,
        "rust": true,
        "go": true,
        "c": true,
        "scala": true,
        "id": 211
    },
    {
        "problem": "Extra Characters in a String",
        "pattern": "Tries",
        "link": "extra-characters-in-a-string/",
        "video": "ONstwO1cD7c",
        "difficulty": "Medium",
        "code": "2707-extra-characters-in-a-string",
        "cpp": true,
        "id": 2707
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Word Search II",
        "pattern": "Tries",
        "link": "word-search-ii/",
        "video": "asbcE9mZz_U",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0212-word-search-ii",
        "csharp": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "go": true,
        "c": true,
        "id": 212
    },
    {
        "neetcode150": true,
        "problem": "Kth Largest Element In a Stream",
        "pattern": "Heap / Priority Queue",
        "link": "kth-largest-element-in-a-stream/",
        "video": "hOjcdrqMoQ8",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0703-kth-largest-element-in-a-stream",
        "c": true,
        "csharp": true,
        "ruby": true,
        "swift": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "id": 703
    },
    {
        "neetcode150": true,
        "problem": "Last Stone Weight",
        "pattern": "Heap / Priority Queue",
        "link": "last-stone-weight/",
        "video": "B-QCq79-Vfw",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "1046-last-stone-weight",
        "csharp": true,
        "typescript": true,
        "ruby": true,
        "kotlin": true,
        "go": true,
        "rust": true,
        "c": true,
        "id": 1046
    },
    {
        "neetcode150": true,
        "problem": "K Closest Points to Origin",
        "pattern": "Heap / Priority Queue",
        "link": "k-closest-points-to-origin/",
        "video": "rI2EBUEMfTk",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0973-k-closest-points-to-origin",
        "csharp": true,
        "kotlin": true,
        "go": true,
        "rust": true,
        "c": true,
        "id": 973
    },
    {
        "neetcode150": true,
        "problem": "Kth Largest Element In An Array",
        "pattern": "Heap / Priority Queue",
        "link": "kth-largest-element-in-an-array/",
        "video": "XEmy13g1Qxc",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0215-kth-largest-element-in-an-array",
        "csharp": true,
        "typescript": true,
        "kotlin": true,
        "go": true,
        "scala": true,
        "c": true,
        "rust": true,
        "id": 215
    },
    {
        "neetcode150": true,
        "problem": "Task Scheduler",
        "pattern": "Heap / Priority Queue",
        "link": "task-scheduler/",
        "video": "s8p8ukTyA2I",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0621-task-scheduler",
        "csharp": true,
        "typescript": true,
        "kotlin": true,
        "rust": true,
        "c": true,
        "id": 621
    },
    {
        "neetcode150": true,
        "problem": "Design Twitter",
        "pattern": "Heap / Priority Queue",
        "link": "design-twitter/",
        "video": "pNichitDD2E",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0355-design-twitter",
        "csharp": true,
        "go": true,
        "kotlin": true,
        "id": 355
    },
    {
        "problem": "Minimize Deviation in Array",
        "pattern": "Heap / Priority Queue",
        "link": "minimize-deviation-in-array/",
        "video": "boHNFptxo2A",
        "difficulty": "Hard",
        "code": "1675-minimize-deviation-in-array",
        "kotlin": true,
        "cpp": true,
        "id": 1675
    },
    {
        "problem": "Maximum Subsequence Score",
        "pattern": "Heap / Priority Queue",
        "link": "maximum-subsequence-score/",
        "video": "ax1DKi5lJwk",
        "difficulty": "Medium",
        "code": "2542-maximum-subsequence-score",
        "kotlin": true,
        "cpp": true,
        "id": 2542
    },
    {
        "problem": "Single Threaded Cpu",
        "pattern": "Heap / Priority Queue",
        "link": "single-threaded-cpu/",
        "video": "RR1n-d4oYqE",
        "difficulty": "Medium",
        "code": "1834-single-threaded-cpu",
        "java": true,
        "python": true,
        "javascript": true,
        "kotlin": true,
        "rust": true,
        "id": 1834
    },
    {
        "problem": "Seat Reservation Manager",
        "pattern": "Heap / Priority Queue",
        "link": "seat-reservation-manager/",
        "video": "ahobllKXEEY",
        "difficulty": "Medium",
        "code": "1845-seat-reservation-manager",
        "python": true,
        "cpp": true,
        "kotlin": true,
        "id": 1845
    },
    {
        "problem": "Process Tasks Using Servers",
        "pattern": "Heap / Priority Queue",
        "link": "process-tasks-using-servers/",
        "video": "XKA22PecuMQ",
        "difficulty": "Medium",
        "code": "1882-process-tasks-using-servers",
        "kotlin": true,
        "id": 1882
    },
    {
        "problem": "Find The Kth Largest Integer In The Array",
        "pattern": "Heap / Priority Queue",
        "link": "find-the-kth-largest-integer-in-the-array/",
        "video": "lRCaNiqO3xI",
        "difficulty": "Medium",
        "code": "1985-find-the-kth-largest-integer-in-the-array",
        "java": true,
        "python": true,
        "swift": true,
        "cpp": true,
        "go": true,
        "kotlin": true,
        "id": 1985
    },
    {
        "problem": "Reorganize String",
        "pattern": "Heap / Priority Queue",
        "link": "reorganize-string/",
        "video": "2g_b1aYTHeg",
        "difficulty": "Medium",
        "code": "0767-reorganize-string",
        "java": true,
        "python": true,
        "cpp": true,
        "kotlin": true,
        "id": 767
    },
    {
        "problem": "Longest Happy String",
        "pattern": "Heap / Priority Queue",
        "link": "longest-happy-string/",
        "video": "8u-H6O_XQKE",
        "difficulty": "Medium",
        "code": "1405-longest-happy-string",
        "kotlin": true,
        "id": 1405
    },
    {
        "problem": "Car Pooling",
        "pattern": "Heap / Priority Queue",
        "link": "car-pooling/",
        "video": "08sn_w4LWEE",
        "difficulty": "Medium",
        "code": "1094-car-pooling",
        "csharp": true,
        "cpp": true,
        "kotlin": true,
        "id": 1094
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Find Median From Data Stream",
        "pattern": "Heap / Priority Queue",
        "link": "find-median-from-data-stream/",
        "video": "itmhHWaHupI",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0295-find-median-from-data-stream",
        "csharp": true,
        "kotlin": true,
        "go": true,
        "typescript": true,
        "id": 295
    },
    {
        "problem": "Maximum Performance of a Team",
        "pattern": "Heap / Priority Queue",
        "link": "maximum-performance-of-a-team/",
        "video": "Y7UTvogADH0",
        "difficulty": "Hard",
        "code": "1383-maximum-performance-of-a-team",
        "csharp": true,
        "python": true,
        "kotlin": true,
        "id": 1383
    },
    {
        "problem": "IPO",
        "pattern": "Heap / Priority Queue",
        "link": "ipo/",
        "video": "1IUzNJ6TPEM",
        "difficulty": "Hard",
        "code": "0502-ipo",
        "python": true,
        "kotlin": true,
        "id": 502
    },
    {
        "neetcode150": true,
        "problem": "Subsets",
        "pattern": "Backtracking",
        "link": "subsets/",
        "video": "REOH22Xwdkk",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0078-subsets",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 78
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Combination Sum",
        "pattern": "Backtracking",
        "link": "combination-sum/",
        "video": "GBKI9VSKdGg",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0039-combination-sum",
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "ruby": true,
        "rust": true,
        "c": true,
        "swift": true,
        "id": 39
    },
    {
        "problem": "Combinations",
        "pattern": "Backtracking",
        "link": "combinations/",
        "video": "q0s6m7AiM7o",
        "difficulty": "Medium",
        "code": "0077-combinations",
        "python": true,
        "go": true,
        "kotlin": true,
        "java": true,
        "id": 77
    },
    {
        "neetcode150": true,
        "problem": "Permutations",
        "pattern": "Backtracking",
        "link": "permutations/",
        "video": "s7AvT7cGdSo",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0046-permutations",
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "ruby": true,
        "rust": true,
        "c": true,
        "id": 46
    },
    {
        "neetcode150": true,
        "problem": "Subsets II",
        "pattern": "Backtracking",
        "link": "subsets-ii/",
        "video": "Vn2v6ajA7U0",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0090-subsets-ii",
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "ruby": true,
        "rust": true,
        "c": true,
        "id": 90
    },
    {
        "neetcode150": true,
        "problem": "Combination Sum II",
        "pattern": "Backtracking",
        "link": "combination-sum-ii/",
        "video": "rSA3t6BDDwg",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0040-combination-sum-ii",
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "ruby": true,
        "c": true,
        "id": 40
    },
    {
        "problem": "Permutations II",
        "pattern": "Backtracking",
        "link": "permutations-ii/",
        "video": "qhBVWf0YafA",
        "difficulty": "Medium",
        "code": "0047-permutations-ii",
        "python": true,
        "go": true,
        "kotlin": true,
        "java": true,
        "id": 47
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Word Search",
        "pattern": "Backtracking",
        "link": "word-search/",
        "video": "pfiQ_PS1g8E",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0079-word-search",
        "c": true,
        "csharp": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "ruby": true,
        "id": 79
    },
    {
        "neetcode150": true,
        "problem": "Palindrome Partitioning",
        "pattern": "Backtracking",
        "link": "palindrome-partitioning/",
        "video": "3jvWodd7ht0",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0131-palindrome-partitioning",
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "rust": true,
        "swift": true,
        "kotlin": true,
        "id": 131
    },
    {
        "problem": "Restore IP Addresses",
        "pattern": "Backtracking",
        "link": "restore-ip-addresses/",
        "video": "61tN4YEdiTM",
        "difficulty": "Medium",
        "code": "0093-restore-ip-addresses",
        "javascript": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "kotlin": true,
        "id": 93
    },
    {
        "neetcode150": true,
        "problem": "Letter Combinations of a Phone Number",
        "pattern": "Backtracking",
        "link": "letter-combinations-of-a-phone-number/",
        "video": "0snEunUacZY",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0017-letter-combinations-of-a-phone-number",
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "rust": true,
        "kotlin": true,
        "swift": true,
        "id": 17
    },
    {
        "problem": "Matchsticks to Square",
        "pattern": "Backtracking",
        "link": "matchsticks-to-square/",
        "video": "hUe0cUKV-YY",
        "difficulty": "Medium",
        "code": "0473-matchsticks-to-square",
        "cpp": true,
        "python": true,
        "javascript": true,
        "java": true,
        "kotlin": true,
        "id": 473
    },
    {
        "problem": "Splitting a String Into Descending Consecutive Values",
        "pattern": "Backtracking",
        "link": "splitting-a-string-into-descending-consecutive-values/",
        "video": "eDtMmysldaw",
        "difficulty": "Medium",
        "code": "1849-splitting-a-string-into-descending-consecutive-values",
        "python": true,
        "cpp": true,
        "kotlin": true,
        "id": 1849
    },
    {
        "problem": "Find Unique Binary String",
        "pattern": "Backtracking",
        "link": "find-unique-binary-string/",
        "video": "aHqn4Dynd1k",
        "difficulty": "Medium",
        "code": "1980-find-unique-binary-string",
        "python": true,
        "kotlin": true,
        "java": true,
        "id": 1980
    },
    {
        "problem": "Maximum Length of a Concatenated String With Unique Characters",
        "pattern": "Backtracking",
        "link": "maximum-length-of-a-concatenated-string-with-unique-characters/",
        "video": "d4SPuvkaeoo",
        "difficulty": "Medium",
        "code": "1239-maximum-length-of-a-concatenated-string-with-unique-characters",
        "python": true,
        "kotlin": true,
        "id": 1239
    },
    {
        "problem": "Partition to K Equal Sum Subsets",
        "pattern": "Backtracking",
        "link": "partition-to-k-equal-sum-subsets/",
        "video": "mBk4I0X46oI",
        "difficulty": "Medium",
        "code": "0698-partition-to-k-equal-sum-subsets",
        "kotlin": true,
        "python": true,
        "java": true,
        "id": 698
    },
    {
        "neetcode150": true,
        "problem": "N Queens",
        "pattern": "Backtracking",
        "link": "n-queens/",
        "video": "Ph95IHmRp5M",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0051-n-queens",
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "c": true,
        "rust": true,
        "id": 51
    },
    {
        "problem": "N Queens II",
        "pattern": "Backtracking",
        "link": "n-queens-ii/",
        "video": "nalYyLZgvCY",
        "difficulty": "Hard",
        "code": "0052-n-queens-ii",
        "c": true,
        "cpp": true,
        "javascript": true,
        "python": true,
        "kotlin": true,
        "id": 52
    },
    {
        "problem": "Island Perimeter",
        "pattern": "Graphs",
        "link": "island-perimeter/",
        "video": "fISIuAFRM2s",
        "difficulty": "Easy",
        "code": "0463-island-perimeter",
        "c": true,
        "cpp": true,
        "csharp": true,
        "python": true,
        "java": true,
        "javascript": true,
        "go": true,
        "kotlin": true,
        "id": 463
    },
    {
        "problem": "Verifying An Alien Dictionary",
        "pattern": "Graphs",
        "link": "verifying-an-alien-dictionary/",
        "video": "OVgPAJIyX6o",
        "difficulty": "Easy",
        "code": "0953-verifying-an-alien-dictionary",
        "c": true,
        "cpp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "id": 953
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Number of Islands",
        "pattern": "Graphs",
        "link": "number-of-islands/",
        "video": "pV2kpPD66nE",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0200-number-of-islands",
        "c": true,
        "csharp": true,
        "typescript": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "go": true,
        "rust": true,
        "id": 200
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Clone Graph",
        "pattern": "Graphs",
        "link": "clone-graph/",
        "video": "mQeF6bN8hMk",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0133-clone-graph",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "id": 133
    },
    {
        "neetcode150": true,
        "problem": "Max Area of Island",
        "pattern": "Graphs",
        "link": "max-area-of-island/",
        "video": "iJGr1OtmH0c",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0695-max-area-of-island",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "id": 695
    },
    {
        "problem": "Count Sub Islands",
        "pattern": "Graphs",
        "link": "count-sub-islands/",
        "video": "mLpW3qfbNJ8",
        "difficulty": "Medium",
        "code": "1905-count-sub-islands",
        "c": true,
        "csharp": true,
        "python": true,
        "cpp": true,
        "java": true,
        "javascript": true,
        "go": true,
        "kotlin": true,
        "id": 1905
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Pacific Atlantic Water Flow",
        "pattern": "Graphs",
        "link": "pacific-atlantic-water-flow/",
        "video": "s-VkcjHqkGI",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0417-pacific-atlantic-water-flow",
        "c": true,
        "csharp": true,
        "kotlin": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "id": 417
    },
    {
        "neetcode150": true,
        "problem": "Surrounded Regions",
        "pattern": "Graphs",
        "link": "surrounded-regions/",
        "video": "9z2BunfoZ5Y",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0130-surrounded-regions",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "id": 130
    },
    {
        "problem": "Reorder Routes to Make All Paths Lead to The City Zero",
        "pattern": "Graphs",
        "link": "reorder-routes-to-make-all-paths-lead-to-the-city-zero/",
        "video": "m17yOR5_PpI",
        "difficulty": "Medium",
        "code": "1466-reorder-routes-to-make-all-paths-lead-to-the-city-zero",
        "csharp": true,
        "cpp": true,
        "kotlin": true,
        "java": true,
        "id": 1466
    },
    {
        "neetcode150": true,
        "problem": "Rotting Oranges",
        "pattern": "Graphs",
        "link": "rotting-oranges/",
        "video": "y704fEOx0s0",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0994-rotting-oranges",
        "c": true,
        "csharp": true,
        "typescript": true,
        "kotlin": true,
        "go": true,
        "id": 994
    },
    {
        "neetcode150": true,
        "problem": "Walls And Gates",
        "premium": true,
        "freeLink": "https://www.lintcode.com/problem/663/",
        "pattern": "Graphs",
        "link": "walls-and-gates/",
        "video": "e69C6xhiSQE",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0286-walls-and-gates",
        "csharp": true,
        "id": 286
    },
    {
        "problem": "Snakes And Ladders",
        "pattern": "Graphs",
        "link": "snakes-and-ladders/",
        "video": "6lH4nO3JfLk",
        "difficulty": "Medium",
        "code": "0909-snakes-and-ladders",
        "csharp": true,
        "python": true,
        "java": true,
        "kotlin": true,
        "id": 909
    },
    {
        "problem": "Open The Lock",
        "pattern": "Graphs",
        "link": "open-the-lock/",
        "video": "Pzg3bCDY87w",
        "difficulty": "Medium",
        "code": "0752-open-the-lock",
        "csharp": true,
        "java": true,
        "python": true,
        "kotlin": true,
        "id": 752
    },
    {
        "problem": "Find Eventual Safe States",
        "pattern": "Graphs",
        "link": "find-eventual-safe-states/",
        "video": "Re_v0j0CRsg",
        "difficulty": "Medium",
        "code": "0802-find-eventual-safe-states",
        "kotlin": true,
        "java": true,
        "id": 802
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Course Schedule",
        "pattern": "Graphs",
        "link": "course-schedule/",
        "video": "EgI5nU9etnU",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0207-course-schedule",
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "c": true,
        "id": 207
    },
    {
        "neetcode150": true,
        "problem": "Course Schedule II",
        "pattern": "Graphs",
        "link": "course-schedule-ii/",
        "video": "Akt3glAwyfY",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0210-course-schedule-ii",
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "id": 210
    },
    {
        "problem": "Course Schedule IV",
        "pattern": "Graphs",
        "link": "course-schedule-iv/",
        "video": "cEW05ofxhn0",
        "difficulty": "Medium",
        "python": true,
        "code": "1462-course-schedule-iv",
        "kotlin": true,
        "id": 1462
    },
    {
        "problem": "Check if Move Is Legal",
        "pattern": "Graphs",
        "link": "check-if-move-is-legal/",
        "video": "KxK33AcQZpQ",
        "difficulty": "Medium",
        "code": "1958-check-if-move-is-legal",
        "cpp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "go": true,
        "kotlin": true,
        "id": 1958
    },
    {
        "problem": "Shortest Bridge",
        "pattern": "Graphs",
        "link": "shortest-bridge/",
        "video": "gkINMhbbIbU",
        "difficulty": "Medium",
        "code": "0934-shortest-bridge",
        "kotlin": true,
        "javascript": true,
        "id": 934
    },
    {
        "problem": "Shortest Path in Binary Matrix",
        "pattern": "Graphs",
        "video": "YnxUdAO7TAo",
        "link": "shortest-path-in-binary-matrix/",
        "difficulty": "Medium",
        "code": "1091-shortest-path-in-binary-matrix",
        "python": true,
        "java": true,
        "kotlin": true,
        "id": 1091
    },
    {
        "neetcode150": true,
        "problem": "Redundant Connection",
        "pattern": "Graphs",
        "link": "redundant-connection/",
        "video": "FXWRE67PLL0",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0684-redundant-connection",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "id": 684
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Number of Connected Components In An Undirected Graph",
        "premium": true,
        "freeLink": "https://www.lintcode.com/problem/3651/",
        "pattern": "Graphs",
        "link": "number-of-connected-components-in-an-undirected-graph/",
        "video": "8f1XPm4WOUc",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0323-number-of-connected-components-in-an-undirected-graph",
        "csharp": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "id": 323
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Graph Valid Tree",
        "premium": true,
        "freeLink": "https://www.lintcode.com/problem/178/",
        "pattern": "Graphs",
        "link": "graph-valid-tree/",
        "video": "bXsUuownnoQ",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0261-graph-valid-tree",
        "csharp": true,
        "typescript": true,
        "swift": true,
        "id": 261
    },
    {
        "problem": "Accounts Merge",
        "pattern": "Graphs",
        "link": "accounts-merge/",
        "video": "6st4IxEF-90",
        "difficulty": "Medium",
        "code": "0721-accounts-merge",
        "python": true,
        "kotlin": true,
        "java": true,
        "id": 721
    },
    {
        "problem": "Find Closest Node to Given Two Nodes",
        "pattern": "Graphs",
        "link": "find-closest-node-to-given-two-nodes/",
        "video": "AZA8orksO4w",
        "difficulty": "Medium",
        "code": "2359-find-closest-node-to-given-two-nodes",
        "kotlin": true,
        "id": 2359
    },
    {
        "problem": "As Far from Land as Possible",
        "pattern": "Graphs",
        "link": "as-far-from-land-as-possible/",
        "video": "fjxb1hQfrZk",
        "difficulty": "Medium",
        "code": "1162-as-far-from-land-as-possible",
        "kotlin": true,
        "id": 1162
    },
    {
        "problem": "Shortest Path with Alternating Colors",
        "pattern": "Graphs",
        "link": "shortest-path-with-alternating-colors/",
        "video": "69rcy6lb-HQ",
        "difficulty": "Medium",
        "code": "1129-shortest-path-with-alternating-colors",
        "kotlin": true,
        "id": 1129
    },
    {
        "problem": "Minimum Fuel Cost to Report to the Capital",
        "pattern": "Graphs",
        "link": "minimum-fuel-cost-to-report-to-the-capital/",
        "video": "I3lnDUIzIG4",
        "difficulty": "Medium",
        "code": "2477-minimum-fuel-cost-to-report-to-the-capital",
        "kotlin": true,
        "java": true,
        "id": 2477
    },
    {
        "problem": "Minimum Score of a Path Between Two Cities",
        "pattern": "Graphs",
        "link": "minimum-score-of-a-path-between-two-cities/",
        "video": "K7-mXA0irhY",
        "difficulty": "Medium",
        "code": "2492-minimum-score-of-a-path-between-two-cities",
        "kotlin": true,
        "id": 2492
    },
    {
        "problem": "Number of Closed Islands",
        "pattern": "Graphs",
        "link": "number-of-closed-islands/",
        "video": "X8k48xek8g8",
        "difficulty": "Medium",
        "code": "1254-number-of-closed-islands",
        "kotlin": true,
        "id": 1254
    },
    {
        "problem": "Number of Enclaves",
        "pattern": "Graphs",
        "link": "number-of-enclaves/",
        "video": "gf0zsh1FIgE",
        "difficulty": "Medium",
        "code": "1020-number-of-enclaves",
        "kotlin": true,
        "java": true,
        "id": 1020
    },
    {
        "problem": "Minimum Number of Vertices to Reach all Nodes",
        "pattern": "Graphs",
        "link": "minimum-number-of-vertices-to-reach-all-nodes/",
        "video": "TLzcum7vrTc",
        "difficulty": "Medium",
        "code": "1557-minimum-number-of-vertices-to-reach-all-nodes",
        "java": true,
        "kotlin": true,
        "id": 1557
    },
    {
        "problem": "Is Graph Bipartite?",
        "pattern": "Graphs",
        "link": "is-graph-bipartite/",
        "video": "mev55LTubBY",
        "difficulty": "Medium",
        "code": "0785-is-graph-bipartite",
        "kotlin": true,
        "java": true,
        "id": 0
    },
    {
        "problem": "Evaluate Division",
        "pattern": "Graphs",
        "link": "evaluate-division/",
        "video": "Uei1fwDoyKk",
        "difficulty": "Medium",
        "code": "0399-evaluate-division",
        "kotlin": true,
        "cpp": true,
        "id": 399
    },
    {
        "problem": "Detonate the Maximum Bombs",
        "pattern": "Graphs",
        "link": "detonate-the-maximum-bombs/",
        "video": "8NPbAvVXKR4",
        "difficulty": "Medium",
        "code": "2101-detonate-the-maximum-bombs",
        "kotlin": true,
        "id": 2101
    },
    {
        "problem": "Largest Color Value in a Directed Graph",
        "pattern": "Graphs",
        "link": "largest-color-value-in-a-directed-graph/",
        "video": "xLoDjKczUSk",
        "difficulty": "Hard",
        "code": "1857-largest-color-value-in-a-directed-graph",
        "kotlin": true,
        "id": 1857
    },
    {
        "problem": "Minimum Number of Days to Eat N Oranges",
        "pattern": "Graphs",
        "link": "minimum-number-of-days-to-eat-n-oranges/",
        "video": "LziQ6Qx9sks",
        "difficulty": "Hard",
        "code": "1553-minimum-number-of-days-to-eat-n-oranges",
        "kotlin": true,
        "id": 1553
    },
    {
        "neetcode150": true,
        "problem": "Word Ladder",
        "pattern": "Graphs",
        "link": "word-ladder/",
        "video": "h9iTnkgv05E",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0127-word-ladder",
        "csharp": true,
        "typescript": true,
        "kotlin": true,
        "go": true,
        "rust": true,
        "id": 127
    },
    {
        "problem": "Path with Minimum Effort",
        "pattern": "Advanced Graphs",
        "link": "path-with-minimum-effort/",
        "video": "XQlxCCx2vI4",
        "difficulty": "Medium",
        "code": "1631-path-with-minimum-effort",
        "kotlin": true,
        "id": 1631
    },
    {
        "neetcode150": true,
        "problem": "Reconstruct Itinerary",
        "pattern": "Advanced Graphs",
        "link": "reconstruct-itinerary/",
        "video": "ZyB_gQ8vqGA",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0332-reconstruct-itinerary",
        "csharp": true,
        "kotlin": true,
        "go": true,
        "c": true,
        "rust": true,
        "id": 332
    },
    {
        "neetcode150": true,
        "problem": "Min Cost to Connect All Points",
        "pattern": "Advanced Graphs",
        "link": "min-cost-to-connect-all-points/",
        "video": "f7JOBJIC-NA",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "1584-min-cost-to-connect-all-points",
        "csharp": true,
        "ruby": true,
        "swift": true,
        "go": true,
        "kotlin": true,
        "id": 1584
    },
    {
        "neetcode150": true,
        "problem": "Network Delay Time",
        "pattern": "Advanced Graphs",
        "link": "network-delay-time/",
        "video": "EaphyqKU4PQ",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0743-network-delay-time",
        "csharp": true,
        "go": true,
        "kotlin": true,
        "id": 743
    },
    {
        "problem": "Path with Maximum Probability",
        "pattern": "Advanced Graphs",
        "link": "path-with-maximum-probability/",
        "video": "kPsDTGcrzGM",
        "difficulty": "Medium",
        "python": true,
        "code": "1514-path-with-maximum-probability",
        "java": true,
        "javascript": true,
        "kotlin": true,
        "cpp": true,
        "id": 1514
    },
    {
        "neetcode150": true,
        "problem": "Swim In Rising Water",
        "pattern": "Advanced Graphs",
        "link": "swim-in-rising-water/",
        "video": "amvrKlMLuGY",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0778-swim-in-rising-water",
        "csharp": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "id": 778
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Alien Dictionary",
        "premium": true,
        "freeLink": "https://www.lintcode.com/problem/892/",
        "pattern": "Advanced Graphs",
        "link": "alien-dictionary/",
        "video": "6kTZYvNNyps",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0269-alien-dictionary",
        "csharp": true,
        "id": 269
    },
    {
        "neetcode150": true,
        "problem": "Cheapest Flights Within K Stops",
        "pattern": "Advanced Graphs",
        "link": "cheapest-flights-within-k-stops/",
        "video": "5eIK3zUdYmE",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0787-cheapest-flights-within-k-stops",
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "id": 787
    },
    {
        "problem": "Number of Good Paths",
        "pattern": "Advanced Graphs",
        "link": "number-of-good-paths/",
        "video": "rv2GBYQm7xM",
        "difficulty": "Hard",
        "code": "2421-number-of-good-paths",
        "javascript": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "kotlin": true,
        "id": 2421
    },
    {
        "problem": "Remove Max Number of Edges to Keep Graph Fully Traversable",
        "pattern": "Advanced Graphs",
        "link": "remove-max-number-of-edges-to-keep-graph-fully-traversable/",
        "video": "booGwg5wYm4",
        "difficulty": "Hard",
        "code": "1579-remove-max-number-of-edges-to-keep-graph-fully-traversable",
        "kotlin": true,
        "id": 1579
    },
    {
        "problem": "Find Critical and Pseudo Critical Edges in Minimum Spanning Tree",
        "pattern": "Advanced Graphs",
        "link": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree/",
        "video": "83JnUxrLKJU",
        "difficulty": "Hard",
        "code": "1489-find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
        "python": true,
        "kotlin": true,
        "id": 1489
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Climbing Stairs",
        "pattern": "1-D Dynamic Programming",
        "link": "climbing-stairs/",
        "video": "Y0lT9Fck7qI",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0070-climbing-stairs",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "dart": true,
        "id": 70
    },
    {
        "neetcode150": true,
        "problem": "Min Cost Climbing Stairs",
        "pattern": "1-D Dynamic Programming",
        "link": "min-cost-climbing-stairs/",
        "code": "0746-min-cost-climbing-stairs",
        "video": "ktmzAZWkEZ0",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "id": 746
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "House Robber",
        "pattern": "1-D Dynamic Programming",
        "link": "house-robber/",
        "video": "73r3KWiEvyk",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0198-house-robber",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "id": 198
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "House Robber II",
        "pattern": "1-D Dynamic Programming",
        "link": "house-robber-ii/",
        "video": "rWAJCfYYOvM",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0213-house-robber-ii",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "scala": true,
        "id": 213
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Longest Palindromic Substring",
        "pattern": "1-D Dynamic Programming",
        "link": "longest-palindromic-substring/",
        "video": "XYQecbcd6_c",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0005-longest-palindromic-substring",
        "c": true,
        "csharp": true,
        "typescript": true,
        "rust": true,
        "go": true,
        "kotlin": true,
        "id": 5
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Palindromic Substrings",
        "pattern": "1-D Dynamic Programming",
        "link": "palindromic-substrings/",
        "video": "4RACzI5-du8",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0647-palindromic-substrings",
        "c": true,
        "csharp": true,
        "typescript": true,
        "rust": true,
        "go": true,
        "kotlin": true,
        "id": 647
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Decode Ways",
        "pattern": "1-D Dynamic Programming",
        "link": "decode-ways/",
        "video": "6aEyTjOwlJU",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0091-decode-ways",
        "c": true,
        "csharp": true,
        "typescript": true,
        "kotlin": true,
        "scala": true,
        "go": true,
        "id": 91
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Coin Change",
        "pattern": "1-D Dynamic Programming",
        "link": "coin-change/",
        "video": "H9bfqozjoqs",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0322-coin-change",
        "c": true,
        "csharp": true,
        "typescript": true,
        "kotlin": true,
        "rust": true,
        "go": true,
        "scala": true,
        "id": 322
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Maximum Product Subarray",
        "pattern": "1-D Dynamic Programming",
        "link": "maximum-product-subarray/",
        "video": "lXVy6YWFcRM",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0152-maximum-product-subarray",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 152
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Word Break",
        "pattern": "1-D Dynamic Programming",
        "link": "word-break/",
        "video": "Sx9NNgInc3A",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0139-word-break",
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "id": 139
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Longest Increasing Subsequence",
        "pattern": "1-D Dynamic Programming",
        "link": "longest-increasing-subsequence/",
        "video": "cjWnW0hdF1Y",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0300-longest-increasing-subsequence",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "id": 300
    },
    {
        "neetcode150": true,
        "problem": "Partition Equal Subset Sum",
        "pattern": "1-D Dynamic Programming",
        "link": "partition-equal-subset-sum/",
        "video": "IsvocB5BJhw",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0416-partition-equal-subset-sum",
        "csharp": true,
        "go": true,
        "kotlin": true,
        "c": true,
        "id": 416
    },
    {
        "problem": "Triangle",
        "pattern": "1-D Dynamic Programming",
        "link": "triangle/",
        "video": "OM1MTokvxs4",
        "difficulty": "Medium",
        "code": "0120-triangle",
        "cpp": true,
        "java": true,
        "python": true,
        "kotlin": true,
        "c": true,
        "id": 120
    },
    {
        "problem": "Delete And Earn",
        "pattern": "1-D Dynamic Programming",
        "link": "delete-and-earn/",
        "video": "7FCemBxvGw0",
        "difficulty": "Medium",
        "code": "0740-delete-and-earn",
        "python": true,
        "go": true,
        "kotlin": true,
        "c": true,
        "cpp": true,
        "id": 740
    },
    {
        "problem": "Paint House",
        "pattern": "1-D Dynamic Programming",
        "link": "paint-house/",
        "video": "-w67-4tnH5U",
        "difficulty": "Medium",
        "code": "0256-paint-house",
        "csharp": true,
        "id": 256
    },
    {
        "problem": "Combination Sum IV",
        "pattern": "1-D Dynamic Programming",
        "link": "combination-sum-iv/",
        "video": "dw2nMCxG0ik",
        "difficulty": "Medium",
        "code": "0377-combination-sum-iv",
        "python": true,
        "cpp": true,
        "kotlin": true,
        "c": true,
        "java": true,
        "id": 377
    },
    {
        "problem": "Perfect Squares",
        "pattern": "1-D Dynamic Programming",
        "link": "perfect-squares/",
        "video": "HLZLwjzIVGo",
        "difficulty": "Medium",
        "code": "0279-perfect-squares",
        "java": true,
        "go": true,
        "cpp": true,
        "kotlin": true,
        "c": true,
        "id": 279
    },
    {
        "problem": "Check if There is a Valid Partition For The Array",
        "pattern": "1-D Dynamic Programming",
        "link": "check-if-there-is-a-valid-partition-for-the-array/",
        "video": "OxXPiwWFdTI",
        "difficulty": "Medium",
        "code": "2369-check-if-there-is-a-valid-partition-for-the-array",
        "kotlin": true,
        "id": 2369
    },
    {
        "problem": "Maximum Subarray Min Product",
        "pattern": "1-D Dynamic Programming",
        "link": "maximum-subarray-min-product/",
        "video": "YLesLbNkyjA",
        "difficulty": "Medium",
        "code": "1856-maximum-subarray-min-product",
        "kotlin": true,
        "c": true,
        "java": true,
        "id": 1856
    },
    {
        "problem": "Minimum Cost For Tickets",
        "pattern": "1-D Dynamic Programming",
        "link": "minimum-cost-for-tickets/",
        "video": "4pY1bsBpIY4",
        "difficulty": "Medium",
        "code": "0983-minimum-cost-for-tickets",
        "cpp": true,
        "kotlin": true,
        "c": true,
        "id": 983
    },
    {
        "problem": "Integer Break",
        "pattern": "1-D Dynamic Programming",
        "link": "integer-break/",
        "video": "in6QbUPMJ3I",
        "difficulty": "Medium",
        "code": "0343-integer-break",
        "cpp": true,
        "kotlin": true,
        "c": true,
        "java": true,
        "id": 343
    },
    {
        "problem": "Number of Longest Increasing Subsequence",
        "pattern": "1-D Dynamic Programming",
        "link": "number-of-longest-increasing-subsequence/",
        "video": "Tuc-rjJbsXU",
        "difficulty": "Medium",
        "code": "0673-number-of-longest-increasing-subsequence",
        "python": true,
        "kotlin": true,
        "c": true,
        "id": 673
    },
    {
        "problem": "Stickers to Spell Word",
        "pattern": "1-D Dynamic Programming",
        "link": "stickers-to-spell-word/",
        "video": "hsomLb6mUdI",
        "difficulty": "Hard",
        "code": "0691-stickers-to-spell-word",
        "c": true,
        "kotlin": true,
        "id": 691
    },
    {
        "problem": "N-th Tribonacci Number",
        "pattern": "1-D Dynamic Programming",
        "link": "n-th-tribonacci-number/",
        "video": "3lpNp5Ojvrw",
        "difficulty": "Easy",
        "code": "1137-n-th-tribonacci-number",
        "python": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "c": true,
        "cpp": true,
        "id": 1137
    },
    {
        "problem": "Uncrossed Lines",
        "pattern": "1-D Dynamic Programming",
        "link": "uncrossed-lines/",
        "video": "mnJF4vJ7GyE",
        "difficulty": "Medium",
        "code": "1035-uncrossed-lines",
        "kotlin": true,
        "c": true,
        "id": 1035
    },
    {
        "problem": "Solving Questions With Brainpower",
        "pattern": "1-D Dynamic Programming",
        "link": "solving-questions-with-brainpower/",
        "video": "D7TD_ArkfkA",
        "difficulty": "Medium",
        "code": "2140-solving-questions-with-brainpower",
        "kotlin": true,
        "c": true,
        "cpp": true,
        "id": 2140
    },
    {
        "problem": "Count Ways to Build Good Strings",
        "pattern": "1-D Dynamic Programming",
        "link": "count-ways-to-build-good-strings/",
        "video": "JKpVHG2mhbk",
        "difficulty": "Medium",
        "code": "2466-count-ways-to-build-good-strings",
        "kotlin": true,
        "c": true,
        "id": 2466
    },
    {
        "problem": "New 21 Game",
        "pattern": "1-D Dynamic Programming",
        "link": "new-21-game/",
        "video": "zKi4LzjK27k",
        "difficulty": "Medium",
        "code": "0837-new-21-game",
        "kotlin": true,
        "c": true,
        "javascript": true,
        "id": 837
    },
    {
        "problem": "Best Team with no Conflicts",
        "pattern": "1-D Dynamic Programming",
        "link": "best-team-with-no-conflicts/",
        "video": "7kURH3btcV4",
        "difficulty": "Medium",
        "code": "1626-best-team-with-no-conflicts",
        "c": true,
        "kotlin": true,
        "id": 1626
    },
    {
        "problem": "Stone Game III",
        "pattern": "1-D Dynamic Programming",
        "link": "stone-game-iii/",
        "video": "HsLG5QW9CFQ",
        "difficulty": "Hard",
        "code": "1406-stone-game-iii",
        "kotlin": true,
        "c": true,
        "id": 1406
    },
    {
        "problem": "Concatenated Words",
        "pattern": "1-D Dynamic Programming",
        "link": "concatenated-words/",
        "video": "iHp7fjw1R28",
        "difficulty": "Hard",
        "code": "0472-concatenated-words",
        "javascript": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "kotlin": true,
        "id": 472
    },
    {
        "problem": "Maximize Score after N Operations",
        "pattern": "1-D Dynamic Programming",
        "link": "maximize-score-after-n-operations/",
        "video": "RRQVDqp5RSE",
        "difficulty": "Hard",
        "code": "1799-maximize-score-after-n-operations",
        "kotlin": true,
        "c": true,
        "id": 1799
    },
    {
        "problem": "Find the Longest Valid Obstacle Course at Each Position",
        "pattern": "1-D Dynamic Programming",
        "link": "find-the-longest-valid-obstacle-course-at-each-position/",
        "video": "Xq9VT7p0lic",
        "difficulty": "Hard",
        "code": "1964-find-the-longest-valid-obstacle-course-at-each-position",
        "kotlin": true,
        "c": true,
        "id": 1964
    },
    {
        "problem": "Count all Valid Pickup and Delivery Options",
        "pattern": "1-D Dynamic Programming",
        "link": "count-all-valid-pickup-and-delivery-options/",
        "video": "OpgslsirW8s",
        "difficulty": "Hard",
        "code": "1359-count-all-valid-pickup-and-delivery-options",
        "java": true,
        "kotlin": true,
        "id": 1359
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Unique Paths",
        "pattern": "2-D Dynamic Programming",
        "link": "unique-paths/",
        "video": "IlEsdxuD4lY",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0062-unique-paths",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "id": 62
    },
    {
        "problem": "Unique Paths II",
        "pattern": "2-D Dynamic Programming",
        "link": "unique-paths-ii/",
        "video": "d3UOz7zdE4I",
        "difficulty": "Medium",
        "python": true,
        "code": "0063-unique-paths-ii",
        "cpp": true,
        "java": true,
        "go": true,
        "kotlin": true,
        "id": 63
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Longest Common Subsequence",
        "pattern": "2-D Dynamic Programming",
        "link": "longest-common-subsequence/",
        "video": "Ua0GhsJSlWM",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "1143-longest-common-subsequence",
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "c": true,
        "id": 1143
    },
    {
        "problem": "Longest Palindromic Subsequence",
        "pattern": "2-D Dynamic Programming",
        "link": "longest-palindromic-subsequence/",
        "video": "bUr8cNWI09Q",
        "difficulty": "Medium",
        "python": true,
        "code": "0516-longest-palindromic-subsequence",
        "kotlin": true,
        "id": 516
    },
    {
        "problem": "Last Stone Weight II",
        "pattern": "2-D Dynamic Programming",
        "link": "last-stone-weight-ii/",
        "video": "gdXkkmzvR3c",
        "difficulty": "Medium",
        "python": true,
        "code": "1049-last-stone-weight-ii",
        "kotlin": true,
        "id": 1049
    },
    {
        "neetcode150": true,
        "problem": "Best Time to Buy And Sell Stock With Cooldown",
        "pattern": "2-D Dynamic Programming",
        "link": "best-time-to-buy-and-sell-stock-with-cooldown/",
        "video": "I7j0F7AHpb8",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0309-best-time-to-buy-and-sell-stock-with-cooldown",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 309
    },
    {
        "neetcode150": true,
        "problem": "Coin Change II",
        "pattern": "2-D Dynamic Programming",
        "link": "coin-change-ii/",
        "video": "Mjy4hd2xgrs",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0518-coin-change-ii",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "id": 518
    },
    {
        "neetcode150": true,
        "problem": "Target Sum",
        "pattern": "2-D Dynamic Programming",
        "link": "target-sum/",
        "video": "g0npyaQtAQM",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0494-target-sum",
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "c": true,
        "id": 494
    },
    {
        "neetcode150": true,
        "problem": "Interleaving String",
        "pattern": "2-D Dynamic Programming",
        "link": "interleaving-string/",
        "video": "3Rw3p9LrgvE",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0097-interleaving-string",
        "csharp": true,
        "typescript": true,
        "go": true,
        "scala": true,
        "kotlin": true,
        "c": true,
        "id": 97
    },
    {
        "problem": "Stone Game",
        "pattern": "2-D Dynamic Programming",
        "link": "stone-game/",
        "video": "uhgdXOlGYqE",
        "difficulty": "Medium",
        "code": "0877-stone-game",
        "kotlin": true,
        "cpp": true,
        "id": 877
    },
    {
        "problem": "Minimum Path Sum",
        "pattern": "2-D Dynamic Programming",
        "link": "minimum-path-sum/",
        "video": "pGMsrvt0fpk",
        "difficulty": "Medium",
        "code": "0064-minimum-path-sum",
        "cpp": true,
        "java": true,
        "python": true,
        "kotlin": true,
        "id": 64
    },
    {
        "neetcode150": true,
        "problem": "Longest Increasing Path In a Matrix",
        "pattern": "2-D Dynamic Programming",
        "link": "longest-increasing-path-in-a-matrix/",
        "video": "wCc_nd-GiEc",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0329-longest-increasing-path-in-a-matrix",
        "c": true,
        "csharp": true,
        "kotlin": true,
        "rust": true,
        "id": 329
    },
    {
        "problem": "Maximal Square",
        "pattern": "2-D Dynamic Programming",
        "link": "maximal-square/",
        "video": "6X7Ha2PrDmM",
        "difficulty": "Medium",
        "code": "0221-maximal-square",
        "python": true,
        "java": true,
        "kotlin": true,
        "cpp": true,
        "id": 221
    },
    {
        "problem": "Ones and Zeroes",
        "pattern": "2-D Dynamic Programming",
        "link": "ones-and-zeroes/",
        "video": "miZ3qV04b1g",
        "difficulty": "Medium",
        "python": true,
        "code": "0474-ones-and-zeroes",
        "kotlin": true,
        "cpp": true,
        "id": 474
    },
    {
        "problem": "Maximum Alternating Subsequence Sum",
        "pattern": "2-D Dynamic Programming",
        "link": "maximum-alternating-subsequence-sum/",
        "video": "4v42XOuU1XA",
        "difficulty": "Medium",
        "code": "5782-maximum-alternating-subsequence-sum",
        "id": 1911
    },
    {
        "neetcode150": true,
        "problem": "Distinct Subsequences",
        "pattern": "2-D Dynamic Programming",
        "link": "distinct-subsequences/",
        "video": "-RDzMJ33nx8",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0115-distinct-subsequences",
        "csharp": true,
        "typescript": true,
        "kotlin": true,
        "c": true,
        "id": 115
    },
    {
        "neetcode150": true,
        "problem": "Edit Distance",
        "pattern": "2-D Dynamic Programming",
        "link": "edit-distance/",
        "video": "XYi2-LPrwm4",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0072-edit-distance",
        "csharp": true,
        "swift": true,
        "scala": true,
        "kotlin": true,
        "c": true,
        "id": 72
    },
    {
        "problem": "Count Vowels Permutation",
        "pattern": "2-D Dynamic Programming",
        "link": "count-vowels-permutation/",
        "video": "VUVpTZVa7Ls",
        "difficulty": "Hard",
        "code": "1220-count-vowels-permutation",
        "python": true,
        "java": true,
        "go": true,
        "cpp": true,
        "kotlin": true,
        "id": 1220
    },
    {
        "neetcode150": true,
        "problem": "Burst Balloons",
        "pattern": "2-D Dynamic Programming",
        "link": "burst-balloons/",
        "video": "VFskby7lUbw",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0312-burst-balloons",
        "csharp": true,
        "typescript": true,
        "kotlin": true,
        "c": true,
        "id": 312
    },
    {
        "problem": "Number of Ways to Rearrange Sticks With K Sticks Visible",
        "pattern": "2-D Dynamic Programming",
        "link": "number-of-ways-to-rearrange-sticks-with-k-sticks-visible/",
        "video": "O761YBjGxGA",
        "difficulty": "Hard",
        "code": "1866-number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
        "kotlin": true,
        "id": 1866
    },
    {
        "neetcode150": true,
        "problem": "Regular Expression Matching",
        "pattern": "2-D Dynamic Programming",
        "link": "regular-expression-matching/",
        "video": "HAA8mgxlov8",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0010-regular-expression-matching",
        "csharp": true,
        "typescript": true,
        "go": true,
        "c": true,
        "kotlin": true,
        "id": 10
    },
    {
        "problem": "Stone Game II",
        "pattern": "2-D Dynamic Programming",
        "link": "stone-game-ii/",
        "video": "I-z-u0zfQtg",
        "difficulty": "Medium",
        "code": "1140-stone-game-ii",
        "kotlin": true,
        "id": 1140
    },
    {
        "problem": "Flip String to Monotone Increasing",
        "pattern": "2-D Dynamic Programming",
        "link": "flip-string-to-monotone-increasing/",
        "video": "tMq9z5k3umQ",
        "difficulty": "Medium",
        "code": "0926-flip-string-to-monotone-increasing",
        "javascript": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "id": 926
    },
    {
        "problem": "Maximum Value of K Coins from Piles",
        "pattern": "2-D Dynamic Programming",
        "link": "maximum-value-of-k-coins-from-piles/",
        "video": "ZRdEd_eun8g",
        "difficulty": "Hard",
        "code": "2218-maximum-value-of-k-coins-from-piles",
        "kotlin": true,
        "id": 2218
    },
    {
        "problem": "Number of Music Playlists",
        "pattern": "2-D Dynamic Programming",
        "link": "number-of-music-playlists/",
        "video": "gk4qzZSmyrs",
        "difficulty": "Hard",
        "code": "0920-number-of-music-playlists",
        "java": true,
        "kotlin": true,
        "id": 920
    },
    {
        "problem": "Number of Ways to Form a Target String Given a Dictionary",
        "pattern": "2-D Dynamic Programming",
        "link": "number-of-ways-to-form-a-target-string-given-a-dictionary/",
        "video": "_GF-0T-YjW8",
        "difficulty": "Hard",
        "code": "1639-number-of-ways-to-form-a-target-string-given-a-dictionary",
        "kotlin": true,
        "id": 1639
    },
    {
        "problem": "Profitable Schemes",
        "pattern": "2-D Dynamic Programming",
        "link": "profitable-schemes/",
        "video": "CcLKQLKvOl8",
        "difficulty": "Hard",
        "code": "0879-profitable-schemes",
        "kotlin": true,
        "id": 879
    },
    {
        "problem": "Minimum Cost to Cut a Stick",
        "pattern": "2-D Dynamic Programming",
        "link": "minimum-cost-to-cut-a-stick/",
        "video": "EVxTO5I0d7w",
        "difficulty": "Hard",
        "code": "1547-minimum-cost-to-cut-a-stick",
        "kotlin": true,
        "id": 1547
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Maximum Subarray",
        "pattern": "Greedy",
        "link": "maximum-subarray/",
        "video": "5WZl3MMT0Eg",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0053-maximum-subarray",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "ruby": true,
        "id": 53
    },
    {
        "problem": "Maximum Sum Circular Subarray",
        "pattern": "Greedy",
        "link": "maximum-sum-circular-subarray/",
        "video": "fxT9KjakYPM",
        "difficulty": "Medium",
        "code": "0918-maximum-sum-circular-subarray",
        "python": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "kotlin": true,
        "java": true,
        "id": 918
    },
    {
        "problem": "Longest Turbulent Array",
        "pattern": "Greedy",
        "link": "longest-turbulent-subarray/",
        "video": "V_iHUhR8Dek",
        "difficulty": "Medium",
        "code": "0978-longest-turbulent-subarray",
        "python": true,
        "kotlin": true,
        "id": 0
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Jump Game",
        "pattern": "Greedy",
        "link": "jump-game/",
        "video": "Yan0cv2cLy8",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0055-jump-game",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 55
    },
    {
        "neetcode150": true,
        "problem": "Jump Game II",
        "pattern": "Greedy",
        "link": "jump-game-ii/",
        "video": "dJ7sWiOoK7g",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0045-jump-game-ii",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "ruby": true,
        "id": 45
    },
    {
        "problem": "Jump Game VII",
        "pattern": "Greedy",
        "link": "jump-game-vii/",
        "video": "v1HpZUnQ4Yo",
        "difficulty": "Medium",
        "code": "1871-jump-game-vii",
        "kotlin": true,
        "id": 1871
    },
    {
        "neetcode150": true,
        "problem": "Gas Station",
        "pattern": "Greedy",
        "link": "gas-station/",
        "video": "lJwbPZGo05A",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0134-gas-station",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "ruby": true,
        "id": 134
    },
    {
        "neetcode150": true,
        "problem": "Hand of Straights",
        "pattern": "Greedy",
        "link": "hand-of-straights/",
        "video": "amnrMCVd2YI",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0846-hand-of-straights",
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "kotlin": true,
        "c": true,
        "id": 846
    },
    {
        "problem": "Minimize Maximum of Array",
        "pattern": "Greedy",
        "link": "minimize-maximum-of-array/",
        "video": "AeHMvcKuR0Y",
        "difficulty": "Medium",
        "code": "2439-minimize-maximum-of-array",
        "kotlin": true,
        "id": 2439
    },
    {
        "problem": "Dota2 Senate",
        "pattern": "Greedy",
        "link": "dota2-senate/",
        "video": "zZA5KskfMuQ",
        "difficulty": "Medium",
        "code": "0649-dota2-senate",
        "kotlin": true,
        "id": 649
    },
    {
        "problem": "Maximum Points You Can Obtain From Cards",
        "pattern": "Greedy",
        "link": "maximum-points-you-can-obtain-from-cards/",
        "video": "TsA4vbtfCvo",
        "difficulty": "Medium",
        "code": "1423-maximum-points-you-can-obtain-from-cards",
        "csharp": true,
        "kotlin": true,
        "id": 1423
    },
    {
        "neetcode150": true,
        "problem": "Merge Triplets to Form Target Triplet",
        "pattern": "Greedy",
        "link": "merge-triplets-to-form-target-triplet/",
        "video": "kShkQLQZ9K4",
        "difficulty": "Medium",
        "code": "1899-merge-triplets-to-form-target-triplet",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "csharp": true,
        "typescript": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "c": true,
        "id": 1899
    },
    {
        "neetcode150": true,
        "problem": "Partition Labels",
        "pattern": "Greedy",
        "link": "partition-labels/",
        "video": "B7m8UmZE-vw",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0763-partition-labels",
        "csharp": true,
        "go": true,
        "ruby": true,
        "kotlin": true,
        "c": true,
        "id": 763
    },
    {
        "neetcode150": true,
        "problem": "Valid Parenthesis String",
        "pattern": "Greedy",
        "link": "valid-parenthesis-string/",
        "video": "QhPdNS143Qg",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0678-valid-parenthesis-string",
        "c": true,
        "csharp": true,
        "typescript": true,
        "kotlin": true,
        "id": 678
    },
    {
        "problem": "Eliminate Maximum Number of Monsters",
        "pattern": "Greedy",
        "link": "eliminate-maximum-number-of-monsters/",
        "video": "6QQRayzOTD4",
        "difficulty": "Medium",
        "code": "1921-eliminate-maximum-number-of-monsters",
        "cpp": true,
        "java": true,
        "kotlin": true,
        "id": 1921
    },
    {
        "problem": "Two City Scheduling",
        "pattern": "Greedy",
        "link": "two-city-scheduling/",
        "video": "d-B_gk_gJtQ",
        "difficulty": "Medium",
        "code": "1029-two-city-scheduling",
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "kotlin": true,
        "id": 1029
    },
    {
        "problem": "Maximum Length of Pair Chain",
        "pattern": "Greedy",
        "link": "maximum-length-of-pair-chain/",
        "video": "LcNNorqMVTw",
        "difficulty": "Medium",
        "code": "0646-maximum-length-of-pair-chain",
        "kotlin": true,
        "id": 646
    },
    {
        "problem": "Minimum Deletions to Make Character Frequencies Unique",
        "pattern": "Greedy",
        "link": "minimum-deletions-to-make-character-frequencies-unique/",
        "video": "h8AZEN49gTc",
        "difficulty": "Medium",
        "code": "1647-minimum-deletions-to-make-character-frequencies-unique",
        "java": true,
        "kotlin": true,
        "id": 1647
    },
    {
        "problem": "Candy",
        "pattern": "Greedy",
        "link": "candy/",
        "video": "1IzCRCcK17A",
        "difficulty": "Hard",
        "code": "135-candy",
        "id": 135
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Insert Interval",
        "pattern": "Intervals",
        "link": "insert-interval/",
        "video": "A8NUOmlwOlM",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0057-insert-interval",
        "csharp": true,
        "typescript": true,
        "swift": true,
        "rust": true,
        "go": true,
        "kotlin": true,
        "c": true,
        "id": 57
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Merge Intervals",
        "pattern": "Intervals",
        "link": "merge-intervals/",
        "video": "44H3cEC2fFM",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0056-merge-intervals",
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "scala": true,
        "c": true,
        "rust": true,
        "id": 56
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Non Overlapping Intervals",
        "pattern": "Intervals",
        "link": "non-overlapping-intervals/",
        "video": "nONCGxWoUfM",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0435-non-overlapping-intervals",
        "csharp": true,
        "typescript": true,
        "go": true,
        "scala": true,
        "c": true,
        "kotlin": true,
        "id": 435
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Meeting Rooms",
        "premium": true,
        "freeLink": "https://www.lintcode.com/problem/920/",
        "pattern": "Intervals",
        "link": "meeting-rooms/",
        "video": "PaJxqZVPhbg",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0252-meeting-rooms",
        "csharp": true,
        "rust": true,
        "kotlin": true,
        "id": 252
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Meeting Rooms II",
        "premium": true,
        "freeLink": "https://www.lintcode.com/problem/919/",
        "pattern": "Intervals",
        "link": "meeting-rooms-ii/",
        "video": "FdzJmTCVyJU",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0253-meeting-rooms-ii",
        "csharp": true,
        "rust": true,
        "kotlin": true,
        "id": 253
    },
    {
        "problem": "Remove Covered Intervals",
        "pattern": "Intervals",
        "link": "remove-covered-intervals/",
        "video": "nhAsMabiVkM",
        "difficulty": "Medium",
        "code": "1288-remove-covered-intervals",
        "c": true,
        "kotlin": true,
        "id": 1288
    },
    {
        "neetcode150": true,
        "problem": "Minimum Interval to Include Each Query",
        "pattern": "Intervals",
        "link": "minimum-interval-to-include-each-query/",
        "video": "5hQ5WWW5awQ",
        "difficulty": "Hard",
        "python": true,
        "java": true,
        "cpp": true,
        "code": "1851-minimum-interval-to-include-each-query",
        "csharp": true,
        "javascript": true,
        "kotlin": true,
        "id": 1851
    },
    {
        "problem": "Data Stream as Disjoint Intervals",
        "pattern": "Intervals",
        "link": "data-stream-as-disjoint-intervals/",
        "video": "FavoZjPIWpo",
        "difficulty": "Hard",
        "code": "0352-data-stream-as-disjoint-intervals",
        "javascript": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "kotlin": true,
        "id": 352
    },
    {
        "problem": "Excel Sheet Column Title",
        "pattern": "Math & Geometry",
        "link": "excel-sheet-column-title/",
        "video": "X_vJDpCCuoA",
        "difficulty": "Easy",
        "code": "0168-excel-sheet-column-title",
        "java": true,
        "python": true,
        "kotlin": true,
        "id": 168
    },
    {
        "problem": "Greatest Common Divisor of Strings",
        "pattern": "Math & Geometry",
        "link": "greatest-common-divisor-of-strings/",
        "video": "i5I_wrbUdzM",
        "difficulty": "Easy",
        "code": "1071-greatest-common-divisor-of-strings",
        "javascript": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "cpp": true,
        "id": 1071
    },
    {
        "problem": "Count Odd Numbers in an Interval Range",
        "pattern": "Math & Geometry",
        "link": "count-odd-numbers-in-an-interval-range/",
        "video": "wrIWye928JQ",
        "difficulty": "Easy",
        "code": "1523-count-odd-numbers-in-an-interval-range",
        "kotlin": true,
        "id": 1523
    },
    {
        "problem": "Matrix Diagonal Sum",
        "pattern": "Math & Geometry",
        "link": "matrix-diagonal-sum/",
        "video": "WliTu6gIK7o",
        "difficulty": "Easy",
        "code": "1572-matrix-diagonal-sum",
        "kotlin": true,
        "javascript": true,
        "id": 1572
    },
    {
        "problem": "Maximum Points on a Line",
        "pattern": "Math & Geometry",
        "link": "max-points-on-a-line/",
        "video": "Bb9lOXUOnFw",
        "difficulty": "Hard",
        "code": "0149-max-points-on-a-line",
        "python": true,
        "javascript": true,
        "typescript": true,
        "rust": true,
        "cpp": true,
        "kotlin": true,
        "id": 0
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Rotate Image",
        "pattern": "Math & Geometry",
        "link": "rotate-image/",
        "video": "fMSJSS7eO1w",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0048-rotate-image",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "ruby": true,
        "kotlin": true,
        "rust": true,
        "id": 48
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Spiral Matrix",
        "pattern": "Math & Geometry",
        "link": "spiral-matrix/",
        "video": "BJnMZNwUk1M",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0054-spiral-matrix",
        "csharp": true,
        "typescript": true,
        "kotlin": true,
        "go": true,
        "ruby": true,
        "c": true,
        "id": 54
    },
    {
        "problem": "Spiral Matrix II ",
        "pattern": "Math & Geometry",
        "link": "spiral-matrix-ii/",
        "video": "RvLrWFBJ9fM",
        "difficulty": "Medium",
        "code": "0059-spiral-matrix-ii",
        "javascript": true,
        "kotlin": true,
        "id": 59
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Set Matrix Zeroes",
        "pattern": "Math & Geometry",
        "link": "set-matrix-zeroes/",
        "video": "T41rL0L3Pnw",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0073-set-matrix-zeroes",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "ruby": true,
        "id": 73
    },
    {
        "neetcode150": true,
        "problem": "Happy Number",
        "pattern": "Math & Geometry",
        "link": "happy-number/",
        "video": "ljz85bxOYJ0",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0202-happy-number",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "ruby": true,
        "rust": true,
        "id": 202
    },
    {
        "neetcode150": true,
        "problem": "Plus One",
        "pattern": "Math & Geometry",
        "link": "plus-one/",
        "video": "jIaA8boiG1s",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0066-plus-one",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "swift": true,
        "kotlin": true,
        "ruby": true,
        "rust": true,
        "id": 66
    },
    {
        "problem": "Palindrome Number",
        "pattern": "Math & Geometry",
        "link": "palindrome-number/",
        "video": "yubRKwixN-U",
        "difficulty": "Easy",
        "code": "0009-palindrome-number",
        "javascript": true,
        "typescript": true,
        "cpp": true,
        "java": true,
        "python": true,
        "go": true,
        "rust": true,
        "swift": true,
        "c": true,
        "kotlin": true,
        "id": 9
    },
    {
        "problem": "Ugly Number",
        "pattern": "Math & Geometry",
        "link": "ugly-number/",
        "video": "M0Zay1Qr9ws",
        "difficulty": "Easy",
        "code": "0263-ugly-number",
        "c": true,
        "cpp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "swift": true,
        "kotlin": true,
        "id": 263
    },
    {
        "problem": "Shift 2D Grid",
        "pattern": "Math & Geometry",
        "link": "shift-2d-grid/",
        "video": "nJYFh4Dl-as",
        "difficulty": "Easy",
        "code": "1260-shift-2d-grid",
        "cpp": true,
        "java": true,
        "python": true,
        "javascript": true,
        "kotlin": true,
        "id": 1260
    },
    {
        "problem": "Roman to Integer",
        "pattern": "Math & Geometry",
        "link": "roman-to-integer/",
        "video": "3jdxYj3DD98",
        "difficulty": "Easy",
        "code": "0013-roman-to-integer",
        "python": true,
        "javascript": true,
        "go": true,
        "typescript": true,
        "rust": true,
        "java": true,
        "cpp": true,
        "kotlin": true,
        "id": 13
    },
    {
        "problem": "Integer to Roman",
        "pattern": "Math & Geometry",
        "link": "integer-to-roman/",
        "video": "ohBNdSJyLh8",
        "difficulty": "Medium",
        "code": "0012-integer-to-roman",
        "python": true,
        "typescript": true,
        "go": true,
        "rust": true,
        "javascript": true,
        "cpp": true,
        "java": true,
        "kotlin": true,
        "id": 12
    },
    {
        "neetcode150": true,
        "problem": "Pow(x, n)",
        "pattern": "Math & Geometry",
        "link": "powx-n/",
        "video": "g9YQyYi4IQQ",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "javascript": true,
        "cpp": true,
        "code": "0050-powx-n",
        "c": true,
        "csharp": true,
        "typescript": true,
        "swift": true,
        "ruby": true,
        "kotlin": true,
        "id": 0
    },
    {
        "neetcode150": true,
        "problem": "Multiply Strings",
        "pattern": "Math & Geometry",
        "link": "multiply-strings/",
        "video": "1vZswirL8Y8",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0043-multiply-strings",
        "csharp": true,
        "typescript": true,
        "swift": true,
        "ruby": true,
        "kotlin": true,
        "c": true,
        "id": 43
    },
    {
        "neetcode150": true,
        "problem": "Detect Squares",
        "pattern": "Math & Geometry",
        "link": "detect-squares/",
        "video": "bahebearrDc",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "2013-detect-squares",
        "csharp": true,
        "kotlin": true,
        "ruby": true,
        "rust": true,
        "id": 2013
    },
    {
        "problem": "Robot Bounded In Circle",
        "pattern": "Math & Geometry",
        "link": "robot-bounded-in-circle/",
        "video": "nKv2LnC_g6E",
        "difficulty": "Medium",
        "code": "1041-robot-bounded-in-circle",
        "kotlin": true,
        "id": 1041
    },
    {
        "problem": "Zigzag Conversion",
        "pattern": "Math & Geometry",
        "link": "zigzag-conversion/",
        "video": "Q2Tw6gcVEwc",
        "difficulty": "Medium",
        "code": "0006-zigzag-conversion",
        "java": true,
        "cpp": true,
        "go": true,
        "kotlin": true,
        "id": 6
    },
    {
        "problem": "Find Missing Observations",
        "pattern": "Math & Geometry",
        "link": "find-missing-observations/",
        "video": "86yKkaNi3sU",
        "difficulty": "Medium",
        "code": "2028-find-missing-observations",
        "kotlin": true,
        "id": 2028
    },
    {
        "neetcode150": true,
        "problem": "Single Number",
        "pattern": "Bit Manipulation",
        "link": "single-number/",
        "video": "qMPX1AOa83k",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0136-single-number",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "dart": true,
        "id": 136
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Number of 1 Bits",
        "pattern": "Bit Manipulation",
        "link": "number-of-1-bits/",
        "video": "5Km3utixwZs",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0191-number-of-1-bits",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 191
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Counting Bits",
        "pattern": "Bit Manipulation",
        "link": "counting-bits/",
        "video": "RyBM56RIWrM",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0338-counting-bits",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 338
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Reverse Bits",
        "pattern": "Bit Manipulation",
        "link": "reverse-bits/",
        "video": "UcoN6UjAI64",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0190-reverse-bits",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 190
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Missing Number",
        "pattern": "Bit Manipulation",
        "link": "missing-number/",
        "video": "WnPLSRLSANE",
        "difficulty": "Easy",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0268-missing-number",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 268
    },
    {
        "problem": "Shuffle the Array",
        "pattern": "Bit Manipulation",
        "link": "shuffle-the-array/",
        "video": "IvIKD_EU8BY",
        "difficulty": "Easy",
        "code": "1470-shuffle-the-array",
        "javascript": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "c": true,
        "id": 1470
    },
    {
        "problem": "Add to Array-Form of Integer",
        "pattern": "Bit Manipulation",
        "link": "add-to-array-form-of-integer/",
        "video": "eBTZQt1TWfk",
        "difficulty": "Easy",
        "code": "0989-add-to-array-form-of-integer",
        "javascript": true,
        "typescript": true,
        "go": true,
        "kotlin": true,
        "rust": true,
        "c": true,
        "id": 989
    },
    {
        "neetcode150": true,
        "blind75": true,
        "problem": "Sum of Two Integers",
        "pattern": "Bit Manipulation",
        "link": "sum-of-two-integers/",
        "video": "gVUrDV4tZfY",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0371-sum-of-two-integers",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "rust": true,
        "id": 371
    },
    {
        "neetcode150": true,
        "problem": "Reverse Integer",
        "pattern": "Bit Manipulation",
        "link": "reverse-integer/",
        "video": "HAgLH58IgJQ",
        "difficulty": "Medium",
        "python": true,
        "java": true,
        "cpp": true,
        "javascript": true,
        "code": "0007-reverse-integer",
        "c": true,
        "csharp": true,
        "typescript": true,
        "go": true,
        "ruby": true,
        "swift": true,
        "kotlin": true,
        "scala": true,
        "rust": true,
        "id": 7
    },
    {
        "problem": "Add Binary",
        "pattern": "Bit Manipulation",
        "link": "add-binary/",
        "video": "keuWJ47xG8g",
        "difficulty": "Easy",
        "code": "0067-add-binary",
        "cpp": true,
        "java": true,
        "python": true,
        "kotlin": true,
        "rust": true,
        "c": true,
        "id": 67
    },
    {
        "problem": "Create Hello World Function",
        "pattern": "JavaScript",
        "link": "create-hello-world-function/",
        "video": "P9Ldx1eTlRc",
        "difficulty": "Easy",
        "code": "2667-create-hello-world-function",
        "javascript": true,
        "typescript": true,
        "id": 0
    },
    {
        "problem": "Counter",
        "pattern": "JavaScript",
        "link": "counter/",
        "video": "yEGQQAG5V68",
        "difficulty": "Easy",
        "code": "2620-counter",
        "javascript": true,
        "typescript": true,
        "id": 0
    },
    {
        "problem": "Counter II",
        "pattern": "JavaScript",
        "link": "counter-ii/",
        "video": "UXNXKGFZD08",
        "difficulty": "Easy",
        "code": "2665-counter-ii",
        "javascript": true,
        "id": 0
    },
    {
        "problem": "Apply Transform over each Element in Array",
        "pattern": "JavaScript",
        "link": "apply-transform-over-each-element-in-array/",
        "video": "7FhJHA5jlYk",
        "difficulty": "Easy",
        "code": "2635-apply-transform-over-each-element-in-array",
        "id": 0
    },
    {
        "problem": "Filter Elements from Array",
        "pattern": "JavaScript",
        "link": "filter-elements-from-array/",
        "video": "w1o81gbEEJU",
        "difficulty": "Easy",
        "code": "2634-filter-elements-from-array",
        "id": 0
    },
    {
        "problem": "Array Reduce Transformation",
        "pattern": "JavaScript",
        "link": "array-reduce-transformation/",
        "video": "KmTbYfpGxdM",
        "difficulty": "Easy",
        "code": "2626-array-reduce-transformation",
        "id": 0
    },
    {
        "problem": "Function Composition",
        "pattern": "JavaScript",
        "link": "function-composition/",
        "video": "mIFw1H7Ljco",
        "difficulty": "Easy",
        "code": "2629-function-composition",
        "id": 0
    },
    {
        "problem": "Allow One Function Call",
        "pattern": "JavaScript",
        "link": "allow-one-function-call/",
        "video": "m_SWhM9iX3s",
        "difficulty": "Easy",
        "code": "2666-allow-one-function-call",
        "id": 0
    },
    {
        "problem": "Memoize",
        "pattern": "JavaScript",
        "link": "memoize/",
        "video": "oFXyzJt9VeU",
        "difficulty": "Medium",
        "code": "2623-memoize",
        "id": 0
    },
    {
        "problem": "Curry",
        "pattern": "JavaScript",
        "link": "curry/",
        "video": "pi4kqMWQXxA",
        "difficulty": "Medium",
        "code": "2632-curry",
        "id": 0
    },
    {
        "problem": "Sleep",
        "pattern": "JavaScript",
        "link": "sleep/",
        "video": "P0D9Z6H7O00",
        "difficulty": "Easy",
        "code": "2621-sleep",
        "id": 0
    },
    {
        "problem": "Promise Time Limit",
        "pattern": "JavaScript",
        "link": "promise-time-limit/",
        "video": "hfH57rdZhOk",
        "difficulty": "Easy",
        "code": "2637-promise-time-limit",
        "id": 0
    },
    {
        "problem": "Promise Pool",
        "pattern": "JavaScript",
        "link": "promise-pool/",
        "video": "DB8pAAg-9xw",
        "difficulty": "Medium",
        "code": "2636-promise-pool",
        "id": 0
    },
    {
        "problem": "Cache With Time Limit",
        "pattern": "JavaScript",
        "link": "cache-with-time-limit/",
        "video": "w772gtNK0Gw",
        "difficulty": "Medium",
        "code": "2622-cache-with-time-limit",
        "id": 0
    },
    {
        "problem": "Debounce",
        "pattern": "JavaScript",
        "link": "debounce/",
        "video": "1sxSpnxNx5w",
        "difficulty": "Medium",
        "code": "2627-debounce",
        "id": 0
    },
    {
        "problem": "Throttle",
        "pattern": "JavaScript",
        "link": "throttle/",
        "video": "zyGZV_fIQWk",
        "difficulty": "Medium",
        "code": "2676-throttle",
        "id": 0
    },
    {
        "problem": "JSON Deep Equal",
        "pattern": "JavaScript",
        "link": "json-deep-equal/",
        "video": "4JVZ-mVqJPg",
        "difficulty": "Medium",
        "code": "2628-json-deep-equal",
        "javascript": true,
        "id": 0
    },
    {
        "problem": "Convert Object to JSON String",
        "pattern": "JavaScript",
        "link": "convert-object-to-json-string/",
        "video": "f94fUbHU-FY",
        "difficulty": "Medium",
        "code": "2633-convert-object-to-json-string",
        "id": 0
    },
    {
        "problem": "Array of Objects to Matrix",
        "pattern": "JavaScript",
        "link": "array-of-objects-to-matrix/",
        "video": "LJwgAMHGcI0",
        "difficulty": "Medium",
        "code": "2675-array-of-objects-to-matrix",
        "id": 0
    },
    {
        "problem": "Difference Between Two Objects",
        "pattern": "JavaScript",
        "link": "differences-between-two-objects/",
        "video": "gH7oZs1WZfg",
        "difficulty": "Medium",
        "code": "2700-differences-between-two-objects",
        "id": 0
    },
    {
        "problem": "Chunk Array",
        "pattern": "JavaScript",
        "link": "chunk-array/",
        "video": "VUN-O3B9ceY",
        "difficulty": "Easy",
        "code": "2677-chunk-array",
        "id": 0
    },
    {
        "problem": "Flatten Deeply Nested Array",
        "pattern": "JavaScript",
        "link": "flatten-deeply-nested-array/",
        "video": "_DetLPKtFNk",
        "difficulty": "Medium",
        "code": "2625-flatten-deeply-nested-array",
        "id": 0
    },
    {
        "problem": "Array Prototype Last",
        "pattern": "JavaScript",
        "link": "array-prototype-last/",
        "video": "3JdtfMBrUqc",
        "difficulty": "Easy",
        "code": "2619-array-prototype-last",
        "id": 0
    },
    {
        "problem": "Group By",
        "pattern": "JavaScript",
        "link": "group-by/",
        "video": "zs9axOyYHRE",
        "difficulty": "Medium",
        "code": "2631-group-by",
        "id": 0
    },
    {
        "problem": "Check if Object Instance of Class",
        "pattern": "JavaScript",
        "link": "check-if-object-instance-of-class/",
        "video": "meIo-Q07Ba8",
        "difficulty": "Medium",
        "code": "2618-check-if-object-instance-of-class",
        "id": 0
    },
    {
        "problem": "Call Function with Custom Context",
        "pattern": "JavaScript",
        "link": "call-function-with-custom-context/",
        "video": "du_GH-Ooa8E",
        "difficulty": "Medium",
        "code": "2693-call-function-with-custom-context",
        "id": 0
    },
    {
        "problem": "Event Emitter",
        "pattern": "JavaScript",
        "link": "event-emitter/",
        "video": "M69bjWFarU0",
        "difficulty": "Medium",
        "code": "2694-event-emitter",
        "id": 0
    },
    {
        "problem": "Array Wrapper",
        "pattern": "JavaScript",
        "link": "array-wrapper/",
        "video": "XoGjPdPTAVA",
        "difficulty": "Easy",
        "code": "2695-array-wrapper",
        "id": 0
    },
    {
        "problem": "Generate Fibonacci Sequence",
        "pattern": "JavaScript",
        "link": "generate-fibonacci-sequence/",
        "video": "T643rQ70Jlk",
        "difficulty": "Easy",
        "code": "2648-generate-fibonacci-sequence",
        "id": 0
    },
    {
        "problem": "Nested Array Generator",
        "pattern": "JavaScript",
        "link": "nested-array-generator/",
        "video": "yo-J1jQaZYU",
        "difficulty": "Medium",
        "code": "2649-nested-array-generator",
        "id": 0
    },
    {
        "problem": "",
        "link": "",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Max Area of Island",
        "link": "max-area-of-island",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 695
    },
    {
        "problem": "Convert Bst to Greater Tree",
        "link": "convert-bst-to-greater-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 538
    },
    {
        "problem": "Remove Colored Pieces if Both Neighbors are the Same Color",
        "link": "remove-colored-pieces-if-both-neighbors-are-the-same-color",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2038
    },
    {
        "problem": "Longest Common Prefix",
        "link": "longest-common-prefix",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 14
    },
    {
        "problem": "Insert into a Binary Search Tree",
        "link": "insert-into-a-binary-search-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 701
    },
    {
        "problem": "Cherry Pickup II",
        "link": "cherry-pickup-ii",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1463
    },
    {
        "problem": "Pascal's Triangle II",
        "link": "pascal's-triangle-ii",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Task Scheduler",
        "link": "task-scheduler",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 621
    },
    {
        "problem": "Merge Intervals",
        "link": "merge-intervals",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 56
    },
    {
        "problem": "Reorder List",
        "link": "reorder-list",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 143
    },
    {
        "problem": "Merge Two Binary Trees",
        "link": "merge-two-binary-trees",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 617
    },
    {
        "problem": "Number of Laser Beams in a Bank",
        "link": "number-of-laser-beams-in-a-bank",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2125
    },
    {
        "problem": "Maximum Length of Pair Chain",
        "link": "maximum-length-of-pair-chain",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 646
    },
    {
        "problem": "Freedom Trail",
        "link": "freedom-trail",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 514
    },
    {
        "problem": "Copy List With Random Pointer",
        "link": "copy-list-with-random-pointer",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 138
    },
    {
        "problem": "Middle of the Linked List",
        "link": "middle-of-the-linked-list",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 876
    },
    {
        "problem": "Single Element in a Sorted Array",
        "link": "single-element-in-a-sorted-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 540
    },
    {
        "problem": "Number of Islands",
        "link": "number-of-islands",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 200
    },
    {
        "problem": "N Queens II",
        "link": "n-queens-ii",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 52
    },
    {
        "problem": "Design HashMap",
        "link": "design-hashmap",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 706
    },
    {
        "problem": "Number of Dice Rolls with Target Sum",
        "link": "number-of-dice-rolls-with-target-sum",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1155
    },
    {
        "problem": "Top K Frequent Elements",
        "link": "top-k-frequent-elements",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 347
    },
    {
        "problem": "Longest Turbulent Array",
        "link": "longest-turbulent-array",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Last Stone Weight II",
        "link": "last-stone-weight-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1049
    },
    {
        "problem": "Regular Expression Matching",
        "link": "regular-expression-matching",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 10
    },
    {
        "problem": "Can Place Flowers",
        "link": "can-place-flowers",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 605
    },
    {
        "problem": "Power of Four",
        "link": "power-of-four",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 342
    },
    {
        "problem": "Maximum Score After Splitting a String",
        "link": "maximum-score-after-splitting-a-string",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1422
    },
    {
        "problem": "Longest Ideal Subsequence",
        "link": "longest-ideal-subsequence",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2370
    },
    {
        "problem": "Trapping Rain Water",
        "link": "trapping-rain-water",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 42
    },
    {
        "problem": "Coin Change II",
        "link": "coin-change-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 518
    },
    {
        "problem": "Sliding Window Maximum",
        "link": "sliding-window-maximum",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 239
    },
    {
        "problem": "Count Triplets That Can Form Two Arrays of Equal XOR",
        "link": "count-triplets-that-can-form-two-arrays-of-equal-xor",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1442
    },
    {
        "problem": "Boats to Save People",
        "link": "boats-to-save-people",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 881
    },
    {
        "problem": "Restore IP Addresses",
        "link": "restore-ip-addresses",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 93
    },
    {
        "problem": "LFU Cache",
        "link": "lfu-cache",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 460
    },
    {
        "problem": "Combination Sum IV",
        "link": "combination-sum-iv",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 377
    },
    {
        "problem": "Detonate the Maximum Bombs",
        "link": "detonate-the-maximum-bombs",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2101
    },
    {
        "problem": "Last Stone Weight",
        "link": "last-stone-weight",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1046
    },
    {
        "problem": "Partition List",
        "link": "partition-list",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 86
    },
    {
        "problem": "Spiral Matrix II",
        "link": "spiral-matrix-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 59
    },
    {
        "problem": "Minimum Numbers of Operations to Make Array Empty",
        "link": "minimum-numbers-of-operations-to-make-array-empty",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Convert an Array Into a 2D Array With Conditions",
        "link": "convert-an-array-into-a-2d-array-with-conditions",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2610
    },
    {
        "problem": "Validate Stack Sequences",
        "link": "validate-stack-sequences",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 946
    },
    {
        "problem": "Valid Sudoku",
        "link": "valid-sudoku",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 36
    },
    {
        "problem": "Missing Number",
        "link": "missing-number",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 268
    },
    {
        "problem": "Insert Delete Get Random O(1)",
        "link": "insert-delete-get-random-o(1)",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Search Insert Position",
        "link": "search-insert-position",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 35
    },
    {
        "problem": "Asteroid Collision",
        "link": "asteroid-collision",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 735
    },
    {
        "problem": "Sign of An Array",
        "link": "sign-of-an-array",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Maximum Subarray Min Product",
        "link": "maximum-subarray-min-product",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1856
    },
    {
        "problem": "Search Suggestions System",
        "link": "search-suggestions-system",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1268
    },
    {
        "problem": "Shift 2D Grid",
        "link": "shift-2d-grid",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1260
    },
    {
        "problem": "Score After Flipping Matrix",
        "link": "score-after-flipping-matrix",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 861
    },
    {
        "problem": "Wiggle Sort",
        "link": "wiggle-sort",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 280
    },
    {
        "problem": "Decode String",
        "link": "decode-string",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 394
    },
    {
        "problem": "Path with Minimum Effort",
        "link": "path-with-minimum-effort",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1631
    },
    {
        "problem": "Minimum Distance between BST Nodes",
        "link": "minimum-distance-between-bst-nodes",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 783
    },
    {
        "problem": "Car Fleet",
        "link": "car-fleet",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 853
    },
    {
        "problem": "Open The Lock",
        "link": "open-the-lock",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 752
    },
    {
        "problem": "Find the Longest Valid Obstacle Course at Each Position",
        "link": "find-the-longest-valid-obstacle-course-at-each-position",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1964
    },
    {
        "problem": "Partition Equal Subset Sum",
        "link": "partition-equal-subset-sum",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 416
    },
    {
        "problem": "Unique Length 3 Palindromic Subsequences",
        "link": "unique-length-3-palindromic-subsequences",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1930
    },
    {
        "problem": "Island Perimeter",
        "link": "island-perimeter",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 463
    },
    {
        "problem": "Find Missing Observations",
        "link": "find-missing-observations",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2028
    },
    {
        "problem": "Repeated DNA Sequences",
        "link": "repeated-dna-sequences",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 187
    },
    {
        "problem": "Sort List",
        "link": "sort-list",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 148
    },
    {
        "problem": "Number of Sub Arrays of Size K and Avg Greater than or Equal to Threshold",
        "link": "number-of-sub-arrays-of-size-k-and-avg-greater-than-or-equal-to-threshold",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Minimum Operations to Reduce X to Zero",
        "link": "minimum-operations-to-reduce-x-to-zero",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1658
    },
    {
        "problem": "Gas Station",
        "link": "gas-station",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 134
    },
    {
        "problem": "Palindrome Partitioning",
        "link": "palindrome-partitioning",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 131
    },
    {
        "problem": "Number of Zero-Filled Subarrays",
        "link": "number-of-zero-filled-subarrays",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2348
    },
    {
        "problem": "Word Search",
        "link": "word-search",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 79
    },
    {
        "problem": "Permutations II",
        "link": "permutations-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 47
    },
    {
        "problem": "Reverse Nodes In K Group",
        "link": "reverse-nodes-in-k-group",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 25
    },
    {
        "problem": "Number of Ways to Stay in the Same Place After Some Steps",
        "link": "number-of-ways-to-stay-in-the-same-place-after-some-steps",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1269
    },
    {
        "problem": "Set Mismatch",
        "link": "set-mismatch",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 645
    },
    {
        "problem": "Distribute Coins in Binary Tree",
        "link": "distribute-coins-in-binary-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 979
    },
    {
        "problem": "Burst Balloons",
        "link": "burst-balloons",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 312
    },
    {
        "problem": "LRU Cache",
        "link": "lru-cache",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 146
    },
    {
        "problem": "Sequential Digits",
        "link": "sequential-digits",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1291
    },
    {
        "problem": "All Possible Full Binary Trees",
        "link": "all-possible-full-binary-trees",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 894
    },
    {
        "problem": "Interleaving String",
        "link": "interleaving-string",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 97
    },
    {
        "problem": "Stone Game III",
        "link": "stone-game-iii",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1406
    },
    {
        "problem": "Target Sum",
        "link": "target-sum",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 494
    },
    {
        "problem": "Integer to Roman",
        "link": "integer-to-roman",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 12
    },
    {
        "problem": "K Inverse Pairs Array",
        "link": "k-inverse-pairs-array",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 629
    },
    {
        "problem": "Reverse Integer",
        "link": "reverse-integer",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 7
    },
    {
        "problem": "Unique Binary Search Trees II",
        "link": "unique-binary-search-trees-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 95
    },
    {
        "problem": "Reverse String",
        "link": "reverse-string",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 344
    },
    {
        "problem": "Permutation In String",
        "link": "permutation-in-string",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 567
    },
    {
        "problem": "Climbing Stairs",
        "link": "climbing-stairs",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 70
    },
    {
        "problem": "Number of Pairs of Interchangeable Rectangles",
        "link": "number-of-pairs-of-interchangeable-rectangles",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2001
    },
    {
        "problem": "Longest Happy String",
        "link": "longest-happy-string",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1405
    },
    {
        "problem": "Range Sum of BST",
        "link": "range-sum-of-bst",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 938
    },
    {
        "problem": "Number of Good Pairs",
        "link": "number-of-good-pairs",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1512
    },
    {
        "problem": "Move Zeroes",
        "link": "move-zeroes",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 283
    },
    {
        "problem": "Count Sub Islands",
        "link": "count-sub-islands",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1905
    },
    {
        "problem": "Insertion Sort List",
        "link": "insertion-sort-list",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 147
    },
    {
        "problem": "Unique Binary Search Trees",
        "link": "unique-binary-search-trees",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 96
    },
    {
        "problem": "Number of 1 Bits",
        "link": "number-of-1-bits",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 191
    },
    {
        "problem": "Minimum Time To Make Rope Colorful",
        "link": "minimum-time-to-make-rope-colorful",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1578
    },
    {
        "problem": "Snakes And Ladders",
        "link": "snakes-and-ladders",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 909
    },
    {
        "problem": "Maximum Alternating Subsequence Sum",
        "link": "maximum-alternating-subsequence-sum",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1911
    },
    {
        "problem": "Minimum Difficulty of a Job Schedule",
        "link": "minimum-difficulty-of-a-job-schedule",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1335
    },
    {
        "problem": "Split Array Largest Sum",
        "link": "split-array-largest-sum",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 410
    },
    {
        "problem": "Find All Duplicates in an Array",
        "link": "find-all-duplicates-in-an-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 442
    },
    {
        "problem": "Shortest Path in Binary Matrix",
        "link": "shortest-path-in-binary-matrix",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1091
    },
    {
        "problem": "Product of Array Except Self",
        "link": "product-of-array-except-self",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 238
    },
    {
        "problem": "Valid Perfect Square",
        "link": "valid-perfect-square",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 367
    },
    {
        "problem": "Operations On Tree",
        "link": "operations-on-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1993
    },
    {
        "problem": "Plus One",
        "link": "plus-one",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 66
    },
    {
        "problem": "Arithmetic Slices II",
        "link": "arithmetic-slices-ii",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Construct String From Binary Tree",
        "link": "construct-string-from-binary-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 606
    },
    {
        "problem": "Largest Local Values in a Matrix",
        "link": "largest-local-values-in-a-matrix",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2373
    },
    {
        "problem": "Robot Bounded In Circle",
        "link": "robot-bounded-in-circle",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1041
    },
    {
        "problem": "3Sum",
        "link": "3sum",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 15
    },
    {
        "problem": "Merge in Between Linked Lists",
        "link": "merge-in-between-linked-lists",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1669
    },
    {
        "problem": "Smallest String Starting From Leaf",
        "link": "smallest-string-starting-from-leaf",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 988
    },
    {
        "problem": "Partition Labels",
        "link": "partition-labels",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 763
    },
    {
        "problem": "Monotonic Array",
        "link": "monotonic-array",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 896
    },
    {
        "problem": "Sum of Absolute Differences in a Sorted Array",
        "link": "sum-of-absolute-differences-in-a-sorted-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1685
    },
    {
        "problem": "Non Decreasing Array",
        "link": "non-decreasing-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 665
    },
    {
        "problem": "Capacity to Ship Packages",
        "link": "capacity-to-ship-packages",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Array With Elements Not Equal to Average of Neighbors",
        "link": "array-with-elements-not-equal-to-average-of-neighbors",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1968
    },
    {
        "problem": "Find All People With Secret",
        "link": "find-all-people-with-secret",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2092
    },
    {
        "problem": "Largest 3-Same-Digit Number in String",
        "link": "largest-3-same-digit-number-in-string",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2264
    },
    {
        "problem": "Rearrange Array Elements by Sign",
        "link": "rearrange-array-elements-by-sign",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2149
    },
    {
        "problem": "Best Time to Buy And Sell Stock II",
        "link": "best-time-to-buy-and-sell-stock-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 122
    },
    {
        "problem": "Delete Leaves With a Given Value",
        "link": "delete-leaves-with-a-given-value",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1325
    },
    {
        "problem": "Shortest Bridge",
        "link": "shortest-bridge",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 934
    },
    {
        "problem": "Minimum Number of Vertices to Reach all Nodes",
        "link": "minimum-number-of-vertices-to-reach-all-nodes",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1557
    },
    {
        "problem": "Triangle",
        "link": "triangle",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 120
    },
    {
        "problem": "Find Minimum In Rotated Sorted Array",
        "link": "find-minimum-in-rotated-sorted-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 153
    },
    {
        "problem": "Split Linked List in Parts",
        "link": "split-linked-list-in-parts",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 725
    },
    {
        "problem": "Isomorphic Strings",
        "link": "isomorphic-strings",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 205
    },
    {
        "problem": "Minimum Cost For Tickets",
        "link": "minimum-cost-for-tickets",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 983
    },
    {
        "problem": "Subarray Product Less Than K",
        "link": "subarray-product-less-than-k",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 713
    },
    {
        "problem": "Number of Ways to Rearrange Sticks With K Sticks Visible",
        "link": "number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1866
    },
    {
        "problem": "Binary Tree Level Order Traversal",
        "link": "binary-tree-level-order-traversal",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 102
    },
    {
        "problem": "Remove Nodes From Linked List",
        "link": "remove-nodes-from-linked-list",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2487
    },
    {
        "problem": "Stone Game",
        "link": "stone-game",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 877
    },
    {
        "problem": "Maximal Square",
        "link": "maximal-square",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 221
    },
    {
        "problem": "Largest Substring Between Two Equal Characters",
        "link": "largest-substring-between-two-equal-characters",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1624
    },
    {
        "problem": "Maximize Score after N Operations",
        "link": "maximize-score-after-n-operations",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1799
    },
    {
        "problem": "Maximum Product of The Length of Two Palindromic Subsequences",
        "link": "maximum-product-of-the-length-of-two-palindromic-subsequences",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2002
    },
    {
        "problem": "Container With Most Water",
        "link": "container-with-most-water",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 11
    },
    {
        "problem": "Reverse Linked List",
        "link": "reverse-linked-list",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 206
    },
    {
        "problem": "Minimum Window Substring",
        "link": "minimum-window-substring",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 76
    },
    {
        "problem": "Reconstruct Itinerary",
        "link": "reconstruct-itinerary",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 332
    },
    {
        "problem": "Find the Diffrence",
        "link": "find-the-diffrence",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Student Attendance Record II",
        "link": "student-attendance-record-ii",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 552
    },
    {
        "problem": "Maximum Depth of Binary Tree",
        "link": "maximum-depth-of-binary-tree",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 104
    },
    {
        "problem": "Number of Flowers in Full Bloom",
        "link": "number-of-flowers-in-full-bloom",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2251
    },
    {
        "problem": "Minimum Cost to Cut a Stick",
        "link": "minimum-cost-to-cut-a-stick",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1547
    },
    {
        "problem": "Construct Binary Tree from Inorder and Postorder Traversal",
        "link": "construct-binary-tree-from-inorder-and-postorder-traversal",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 106
    },
    {
        "problem": "Eliminate Maximum Number of Monsters",
        "link": "eliminate-maximum-number-of-monsters",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1921
    },
    {
        "problem": "Combination Sum II",
        "link": "combination-sum-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 40
    },
    {
        "problem": "Is Subsequence",
        "link": "is-subsequence",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 392
    },
    {
        "problem": "Paint House",
        "link": "paint-house",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 256
    },
    {
        "problem": "Sum of Subarray Minimums",
        "link": "sum-of-subarray-minimums",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 907
    },
    {
        "problem": "Flip String to Monotone Increasing",
        "link": "flip-string-to-monotone-increasing",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 926
    },
    {
        "problem": "Remove All Adjacent Duplicates In String II",
        "link": "remove-all-adjacent-duplicates-in-string-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1209
    },
    {
        "problem": "Minimum Length of String after Deleting Similar Ends",
        "link": "minimum-length-of-string-after-deleting-similar-ends",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1750
    },
    {
        "problem": "Delete And Earn",
        "link": "delete-and-earn",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 740
    },
    {
        "problem": "Maximum Product Subarray",
        "link": "maximum-product-subarray",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 152
    },
    {
        "problem": "Find Polygon with the Largest Perimeter",
        "link": "find-polygon-with-the-largest-perimeter",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2971
    },
    {
        "problem": "Find Eventual Safe States",
        "link": "find-eventual-safe-states",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 802
    },
    {
        "problem": "Minimum Fuel Cost to Report to the Capital",
        "link": "minimum-fuel-cost-to-report-to-the-capital",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2477
    },
    {
        "problem": "Alien Dictionary",
        "link": "alien-dictionary",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 269
    },
    {
        "problem": "Reorder Routes to Make All Paths Lead to The City Zero",
        "link": "reorder-routes-to-make-all-paths-lead-to-the-city-zero",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1466
    },
    {
        "problem": "Number of Ways to Divide a Long Corridor",
        "link": "number-of-ways-to-divide-a-long-corridor",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2147
    },
    {
        "problem": "Design Browser History",
        "link": "design-browser-history",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1472
    },
    {
        "problem": "Meeting Rooms",
        "link": "meeting-rooms",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 252
    },
    {
        "problem": "Longest Substring Without Repeating Characters",
        "link": "longest-substring-without-repeating-characters",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 3
    },
    {
        "problem": "Number of Connected Components In An Undirected Graph",
        "link": "number-of-connected-components-in-an-undirected-graph",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 323
    },
    {
        "problem": "Design a Food Rating System",
        "link": "design-a-food-rating-system",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2353
    },
    {
        "problem": "Brick Wall",
        "link": "brick-wall",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 554
    },
    {
        "problem": "Largest Number",
        "link": "largest-number",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 179
    },
    {
        "problem": "Minimize the Maximum Difference of Pairs",
        "link": "minimize-the-maximum-difference-of-pairs",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2616
    },
    {
        "problem": "Painting the Walls",
        "link": "painting-the-walls",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2742
    },
    {
        "problem": "Find First And Last Position of Element In Sorted Array",
        "link": "find-first-and-last-position-of-element-in-sorted-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 34
    },
    {
        "problem": "Add to Array-Form of Integer",
        "link": "add-to-array-form-of-integer",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 989
    },
    {
        "problem": "Check if There is a Valid Partition For The Array",
        "link": "check-if-there-is-a-valid-partition-for-the-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2369
    },
    {
        "problem": "Evaluate Boolean Binary Tree",
        "link": "evaluate-boolean-binary-tree",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2331
    },
    {
        "problem": "Time Based Key Value Store",
        "link": "time-based-key-value-store",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 981
    },
    {
        "problem": "Sum Root to Leaf Numbers",
        "link": "sum-root-to-leaf-numbers",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 129
    },
    {
        "problem": "Bag of Tokens",
        "link": "bag-of-tokens",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 948
    },
    {
        "problem": "Remove Covered Intervals",
        "link": "remove-covered-intervals",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1288
    },
    {
        "problem": "Contains Duplicate",
        "link": "contains-duplicate",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 217
    },
    {
        "problem": "Lowest Common Ancestor of a Binary Search Tree",
        "link": "lowest-common-ancestor-of-a-binary-search-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 235
    },
    {
        "problem": "Number of Closed Islands",
        "link": "number-of-closed-islands",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1254
    },
    {
        "problem": "Maximum Width of Binary Tree",
        "link": "maximum-width-of-binary-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 662
    },
    {
        "problem": "Length of Longest Subarray With at Most K Frequency",
        "link": "length-of-longest-subarray-with-at-most-k-frequency",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2958
    },
    {
        "problem": "Maximum Odd Binary Number",
        "link": "maximum-odd-binary-number",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2864
    },
    {
        "problem": "Constrained Subsequence Sum",
        "link": "constrained-subsequence-sum",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1425
    },
    {
        "problem": "Binary Tree Right Side View",
        "link": "binary-tree-right-side-view",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 199
    },
    {
        "problem": "Design HashSet",
        "link": "design-hashset",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 705
    },
    {
        "problem": "Greatest Common Divisor Traversal",
        "link": "greatest-common-divisor-traversal",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2709
    },
    {
        "problem": "Time Needed to Buy Tickets",
        "link": "time-needed-to-buy-tickets",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2073
    },
    {
        "problem": "Solving Questions With Brainpower",
        "link": "solving-questions-with-brainpower",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2140
    },
    {
        "problem": "Remove Duplicates From Sorted List",
        "link": "remove-duplicates-from-sorted-list",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 83
    },
    {
        "problem": "Sum of All Subsets XOR Total",
        "link": "sum-of-all-subsets-xor-total",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Replace Elements With Greatest Element On Right Side",
        "link": "replace-elements-with-greatest-element-on-right-side",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1299
    },
    {
        "problem": "Unique Email Addresses",
        "link": "unique-email-addresses",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 929
    },
    {
        "problem": "Time Needed to Inform All Employees",
        "link": "time-needed-to-inform-all-employees",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1376
    },
    {
        "problem": "Remove Duplicates From Sorted Array",
        "link": "remove-duplicates-from-sorted-array",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 26
    },
    {
        "problem": "Binary Subarrays with Sum",
        "link": "binary-subarrays-with-sum",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 930
    },
    {
        "problem": "Invert Binary Tree",
        "link": "invert-binary-tree",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 226
    },
    {
        "problem": "Trim a Binary Search Tree",
        "link": "trim-a-binary-search-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 669
    },
    {
        "problem": "Maximum Subarray",
        "link": "maximum-subarray",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 53
    },
    {
        "problem": "Linked List Cycle",
        "link": "linked-list-cycle",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 141
    },
    {
        "problem": "Number of Subsequences That Satisfy The Given Sum Condition",
        "link": "number-of-subsequences-that-satisfy-the-given-sum-condition",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1498
    },
    {
        "problem": "Find Median From Data Stream",
        "link": "find-median-from-data-stream",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 295
    },
    {
        "problem": "Set Matrix Zeroes",
        "link": "set-matrix-zeroes",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 73
    },
    {
        "problem": "Flatten Nested List Iterator",
        "link": "flatten-nested-list-iterator",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 341
    },
    {
        "problem": "Subtree of Another Tree",
        "link": "subtree-of-another-tree",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 572
    },
    {
        "problem": "Subsets",
        "link": "subsets",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 78
    },
    {
        "problem": "Word Break II",
        "link": "word-break-ii",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 140
    },
    {
        "problem": "Range Sum Query - Immutable",
        "link": "range-sum-query-immutable",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 303
    },
    {
        "problem": "Encode and Decode TinyURL",
        "link": "encode-and-decode-tinyurl",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 535
    },
    {
        "problem": "Maximum Score Words Formed By Letters",
        "link": "maximum-score-words-formed-by-letters",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1255
    },
    {
        "problem": "Search a 2D Matrix",
        "link": "search-a-2d-matrix",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 74
    },
    {
        "problem": "Design Circular Queue",
        "link": "design-circular-queue",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 622
    },
    {
        "problem": "Find The Kth Largest Integer In The Array",
        "link": "find-the-kth-largest-integer-in-the-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1985
    },
    {
        "problem": "Kth Largest Element In An Array",
        "link": "kth-largest-element-in-an-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 215
    },
    {
        "problem": "Implement Queue using Stacks",
        "link": "implement-queue-using-stacks",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 232
    },
    {
        "problem": "Minimum Number of Flips to Make The Binary String Alternating",
        "link": "minimum-number-of-flips-to-make-the-binary-string-alternating",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1888
    },
    {
        "problem": "Swap Nodes In Pairs",
        "link": "swap-nodes-in-pairs",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 24
    },
    {
        "problem": "K Closest Points to Origin",
        "link": "k-closest-points-to-origin",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 973
    },
    {
        "problem": "Find All Numbers Disappeared in An Array",
        "link": "find-all-numbers-disappeared-in-an-array",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 448
    },
    {
        "problem": "Minimum Difference Between Highest And Lowest of K Scores",
        "link": "minimum-difference-between-highest-and-lowest-of-k-scores",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1984
    },
    {
        "problem": "Is Graph Bipartite?",
        "link": "is-graph-bipartite?",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Minimum Cost to Hire K Workers",
        "link": "minimum-cost-to-hire-k-workers",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 857
    },
    {
        "problem": "Same Tree",
        "link": "same-tree",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 100
    },
    {
        "problem": "Longest Increasing Path In a Matrix",
        "link": "longest-increasing-path-in-a-matrix",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 329
    },
    {
        "problem": "Jump Game",
        "link": "jump-game",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 55
    },
    {
        "problem": "Divide Array Into Arrays With Max Difference",
        "link": "divide-array-into-arrays-with-max-difference",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2966
    },
    {
        "problem": "Knight Dialer",
        "link": "knight-dialer",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 935
    },
    {
        "problem": "N Queens",
        "link": "n-queens",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 51
    },
    {
        "problem": "Distinct Subsequences",
        "link": "distinct-subsequences",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 115
    },
    {
        "problem": "Edit Distance",
        "link": "edit-distance",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 72
    },
    {
        "problem": "Minimum Number of Arrows to Burst Balloons",
        "link": "minimum-number-of-arrows-to-burst-balloons",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 452
    },
    {
        "problem": "Redundant Connection",
        "link": "redundant-connection",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 684
    },
    {
        "problem": "Minimum Number of Operations to Make Array Continuous",
        "link": "minimum-number-of-operations-to-make-array-continuous",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2009
    },
    {
        "problem": "Happy Number",
        "link": "happy-number",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 202
    },
    {
        "problem": "Minimum Interval to Include Each Query",
        "link": "minimum-interval-to-include-each-query",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1851
    },
    {
        "problem": "Count Ways to Build Good Strings",
        "link": "count-ways-to-build-good-strings",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2466
    },
    {
        "problem": "Generate Parentheses",
        "link": "generate-parentheses",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 22
    },
    {
        "problem": "Remove Max Number of Edges to Keep Graph Fully Traversable",
        "link": "remove-max-number-of-edges-to-keep-graph-fully-traversable",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1579
    },
    {
        "problem": "Rotate Image",
        "link": "rotate-image",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 48
    },
    {
        "problem": "Palindrome Linked List",
        "link": "palindrome-linked-list",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 234
    },
    {
        "problem": "Count of Matches in Tournament",
        "link": "count-of-matches-in-tournament",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1688
    },
    {
        "problem": "Remove Nth Node From End of List",
        "link": "remove-nth-node-from-end-of-list",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 19
    },
    {
        "problem": "Data Stream as Disjoint Intervals",
        "link": "data-stream-as-disjoint-intervals",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 352
    },
    {
        "problem": "Median of Two Sorted Arrays",
        "link": "median-of-two-sorted-arrays",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 4
    },
    {
        "problem": "Maximum Number of Balloons",
        "link": "maximum-number-of-balloons",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1189
    },
    {
        "problem": "Redistribute Characters to Make All Strings Equal",
        "link": "redistribute-characters-to-make-all-strings-equal",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1897
    },
    {
        "problem": "Sort Characters By Frequency",
        "link": "sort-characters-by-frequency",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 451
    },
    {
        "problem": "Best Team with no Conflicts",
        "link": "best-team-with-no-conflicts",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1626
    },
    {
        "problem": "Largest Divisible Subset",
        "link": "largest-divisible-subset",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 368
    },
    {
        "problem": "Sort Colors",
        "link": "sort-colors",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 75
    },
    {
        "problem": "Kth Largest Element In a Stream",
        "link": "kth-largest-element-in-a-stream",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 703
    },
    {
        "problem": "Course Schedule II",
        "link": "course-schedule-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 210
    },
    {
        "problem": "Maximum Nesting Depth of the Parentheses",
        "link": "maximum-nesting-depth-of-the-parentheses",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1614
    },
    {
        "problem": "Candy",
        "link": "candy",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 135
    },
    {
        "problem": "Number of Submatrices that Sum to Target",
        "link": "number-of-submatrices-that-sum-to-target",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1074
    },
    {
        "problem": "Find Critical and Pseudo Critical Edges in Minimum Spanning Tree",
        "link": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1489
    },
    {
        "problem": "Maximum Twin Sum Of A Linked List",
        "link": "maximum-twin-sum-of-a-linked-list",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2130
    },
    {
        "problem": "Number of Enclaves",
        "link": "number-of-enclaves",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1020
    },
    {
        "problem": "Minimum Size Subarray Sum",
        "link": "minimum-size-subarray-sum",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 209
    },
    {
        "problem": "Binary Tree Preorder Traversal",
        "link": "binary-tree-preorder-traversal",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 144
    },
    {
        "problem": "Serialize And Deserialize Binary Tree",
        "link": "serialize-and-deserialize-binary-tree",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 297
    },
    {
        "problem": "As Far from Land as Possible",
        "link": "as-far-from-land-as-possible",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1162
    },
    {
        "problem": "Combinations",
        "link": "combinations",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 77
    },
    {
        "problem": "Arranging Coins",
        "link": "arranging-coins",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 441
    },
    {
        "problem": "Check if a String Contains all Binary Codes of Size K",
        "link": "check-if-a-string-contains-all-binary-codes-of-size-k",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1461
    },
    {
        "problem": "Removing Stars From a String",
        "link": "removing-stars-from-a-string",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2390
    },
    {
        "problem": "Check Completeness of a Binary Tree",
        "link": "check-completeness-of-a-binary-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 958
    },
    {
        "problem": "Stickers to Spell Word",
        "link": "stickers-to-spell-word",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 691
    },
    {
        "problem": "Permutations",
        "link": "permutations",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 46
    },
    {
        "problem": "Symmetric Tree",
        "link": "symmetric-tree",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 101
    },
    {
        "problem": "Kth Smallest Element In a Bst",
        "link": "kth-smallest-element-in-a-bst",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 230
    },
    {
        "problem": "Largest Color Value in a Directed Graph",
        "link": "largest-color-value-in-a-directed-graph",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1857
    },
    {
        "problem": "Word Ladder",
        "link": "word-ladder",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 127
    },
    {
        "problem": "Path Crossing",
        "link": "path-crossing",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1496
    },
    {
        "problem": "Find the Town Judge",
        "link": "find-the-town-judge",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 997
    },
    {
        "problem": "Minimum Remove to Make Valid Parentheses",
        "link": "minimum-remove-to-make-valid-parentheses",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1249
    },
    {
        "problem": "Backspace String Compare",
        "link": "backspace-string-compare",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 844
    },
    {
        "problem": "Naming a Company",
        "link": "naming-a-company",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2306
    },
    {
        "problem": "Maximum Product Difference Between Two",
        "link": "maximum-product-difference-between-two",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Power of Two",
        "link": "power-of-two",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 231
    },
    {
        "problem": "Minimum Height Trees",
        "link": "minimum-height-trees",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 310
    },
    {
        "problem": "Majority Element",
        "link": "majority-element",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 169
    },
    {
        "problem": "Add Binary",
        "link": "add-binary",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 67
    },
    {
        "problem": "Shortest Path with Alternating Colors",
        "link": "shortest-path-with-alternating-colors",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1129
    },
    {
        "problem": "Remove Element",
        "link": "remove-element",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 27
    },
    {
        "problem": "Construct Binary Tree From Preorder And Inorder Traversal",
        "link": "construct-binary-tree-from-preorder-and-inorder-traversal",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 105
    },
    {
        "problem": "Partition Array for Maximum Sum",
        "link": "partition-array-for-maximum-sum",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1043
    },
    {
        "problem": "Roman to Integer",
        "link": "roman-to-integer",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 13
    },
    {
        "problem": "Parallel Courses III",
        "link": "parallel-courses-iii",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2050
    },
    {
        "problem": "Make The String Great",
        "link": "make-the-string-great",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1544
    },
    {
        "problem": "Maximum Points on a Line",
        "link": "maximum-points-on-a-line",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Maximum Profit in Job Scheduling",
        "link": "maximum-profit-in-job-scheduling",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1235
    },
    {
        "problem": "First Unique Character in a String",
        "link": "first-unique-character-in-a-string",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 387
    },
    {
        "problem": "Binary Tree Maximum Path Sum",
        "link": "binary-tree-maximum-path-sum",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 124
    },
    {
        "problem": "Baseball Game",
        "link": "baseball-game",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 682
    },
    {
        "problem": "Reverse Words in a String III",
        "link": "reverse-words-in-a-string-iii",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 557
    },
    {
        "problem": "K-th Symbol in Grammar",
        "link": "k-th-symbol-in-grammar",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 779
    },
    {
        "problem": "Rotate Array",
        "link": "rotate-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 189
    },
    {
        "problem": "First Missing Positive",
        "link": "first-missing-positive",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 41
    },
    {
        "problem": "Grid Game",
        "link": "grid-game",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2017
    },
    {
        "problem": "Merge Two Sorted Lists",
        "link": "merge-two-sorted-lists",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 21
    },
    {
        "problem": "Majority Element II",
        "link": "majority-element-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 229
    },
    {
        "problem": "Check if Move Is Legal",
        "link": "check-if-move-is-legal",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1958
    },
    {
        "problem": "Least Number of Unique Integers after K Removal",
        "link": "least-number-of-unique-integers-after-k-removal",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Pow(x, n)",
        "link": "pow(x,-n)",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Counting Bits",
        "link": "counting-bits",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 338
    },
    {
        "problem": "Concatenated Words",
        "link": "concatenated-words",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 472
    },
    {
        "problem": "Get Equal Substrings Within Budget",
        "link": "get-equal-substrings-within-budget",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1208
    },
    {
        "problem": "Longest Palindromic Subsequence",
        "link": "longest-palindromic-subsequence",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 516
    },
    {
        "problem": "Pacific Atlantic Water Flow",
        "link": "pacific-atlantic-water-flow",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 417
    },
    {
        "problem": "Accounts Merge",
        "link": "accounts-merge",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 721
    },
    {
        "problem": "Verifying An Alien Dictionary",
        "link": "verifying-an-alien-dictionary",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 953
    },
    {
        "problem": "Palindromic Substrings",
        "link": "palindromic-substrings",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 647
    },
    {
        "problem": "Word Search II",
        "link": "word-search-ii",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 212
    },
    {
        "problem": "Binary Tree Inorder Traversal",
        "link": "binary-tree-inorder-traversal",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 94
    },
    {
        "problem": "Find in Mountain Array",
        "link": "find-in-mountain-array",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1095
    },
    {
        "problem": "Balanced Binary Tree",
        "link": "balanced-binary-tree",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 110
    },
    {
        "problem": "Zigzag Conversion",
        "link": "zigzag-conversion",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 6
    },
    {
        "problem": "Minimum Changes To Make Alternating Binary String",
        "link": "minimum-changes-to-make-alternating-binary-string",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1758
    },
    {
        "problem": "Valid Palindrome",
        "link": "valid-palindrome",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 125
    },
    {
        "problem": "Valid Parentheses",
        "link": "valid-parentheses",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 20
    },
    {
        "problem": "Count Vowels Permutation",
        "link": "count-vowels-permutation",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1220
    },
    {
        "problem": "Minimum Score of a Path Between Two Cities",
        "link": "minimum-score-of-a-path-between-two-cities",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2492
    },
    {
        "problem": "Design Parking System",
        "link": "design-parking-system",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1603
    },
    {
        "problem": "Find Words That Can Be Formed by Characters",
        "link": "find-words-that-can-be-formed-by-characters",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1160
    },
    {
        "problem": "Maximum Score of a Good Subarray",
        "link": "maximum-score-of-a-good-subarray",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1793
    },
    {
        "problem": "Walls And Gates",
        "link": "walls-and-gates",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 286
    },
    {
        "problem": "Greatest Common Divisor of Strings",
        "link": "greatest-common-divisor-of-strings",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1071
    },
    {
        "problem": "Construct Quad Tree",
        "link": "construct-quad-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 427
    },
    {
        "problem": "Find Largest Value in Tree Row",
        "link": "find-largest-value-in-tree-row",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Maximum Element After Decreasing and Rearranging",
        "link": "maximum-element-after-decreasing-and-rearranging",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1846
    },
    {
        "problem": "Spiral Matrix",
        "link": "spiral-matrix",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 54
    },
    {
        "problem": "Populating Next Right Pointers In Each Node",
        "link": "populating-next-right-pointers-in-each-node",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 116
    },
    {
        "problem": "Min Cost to Connect All Points",
        "link": "min-cost-to-connect-all-points",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1584
    },
    {
        "problem": "Find the Maximum Sum of Node Values",
        "link": "find-the-maximum-sum-of-node-values",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 3068
    },
    {
        "problem": "Count Subarrays Where Max Element Appears at Least K Times",
        "link": "count-subarrays-where-max-element-appears-at-least-k-times",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2962
    },
    {
        "problem": "Non Overlapping Intervals",
        "link": "non-overlapping-intervals",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 435
    },
    {
        "problem": "Guess Number Higher Or Lower",
        "link": "guess-number-higher-or-lower",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 374
    },
    {
        "problem": "Uncrossed Lines",
        "link": "uncrossed-lines",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1035
    },
    {
        "problem": "Pseudo-Palindromic Paths in a Binary Tree",
        "link": "pseudo-palindromic-paths-in-a-binary-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1457
    },
    {
        "problem": "Find First Palindromic String in the Array",
        "link": "find-first-palindromic-string-in-the-array",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2108
    },
    {
        "problem": "Subsets II",
        "link": "subsets-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 90
    },
    {
        "problem": "Assign Cookies",
        "link": "assign-cookies",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 455
    },
    {
        "problem": "Remove Linked List Elements",
        "link": "remove-linked-list-elements",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 203
    },
    {
        "problem": "Validate Binary Search Tree",
        "link": "validate-binary-search-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 98
    },
    {
        "problem": "Profitable Schemes",
        "link": "profitable-schemes",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 879
    },
    {
        "problem": "Search In Rotated Sorted Array II",
        "link": "search-in-rotated-sorted-array-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 81
    },
    {
        "problem": "Shuffle the Array",
        "link": "shuffle-the-array",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1470
    },
    {
        "problem": "Ones and Zeroes",
        "link": "ones-and-zeroes",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 474
    },
    {
        "problem": "Process Tasks Using Servers",
        "link": "process-tasks-using-servers",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1882
    },
    {
        "problem": "Minimum Number of Days to Eat N Oranges",
        "link": "minimum-number-of-days-to-eat-n-oranges",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1553
    },
    {
        "problem": "Remove K Digits",
        "link": "remove-k-digits",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 402
    },
    {
        "problem": "Merge Sorted Array",
        "link": "merge-sorted-array",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 88
    },
    {
        "problem": "Reverse Bits",
        "link": "reverse-bits",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 190
    },
    {
        "problem": "Surrounded Regions",
        "link": "surrounded-regions",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 130
    },
    {
        "problem": "Furthest Building You Can Reach",
        "link": "furthest-building-you-can-reach",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1642
    },
    {
        "problem": "Network Delay Time",
        "link": "network-delay-time",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 743
    },
    {
        "problem": "Rotting Oranges",
        "link": "rotting-oranges",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 994
    },
    {
        "problem": "Matrix Diagonal Sum",
        "link": "matrix-diagonal-sum",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1572
    },
    {
        "problem": "Koko Eating Bananas",
        "link": "koko-eating-bananas",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 875
    },
    {
        "problem": "Implement Trie Prefix Tree",
        "link": "implement-trie-prefix-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 208
    },
    {
        "problem": "Minimize Maximum of Array",
        "link": "minimize-maximum-of-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2439
    },
    {
        "problem": "Single Number III",
        "link": "single-number-iii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 260
    },
    {
        "problem": "Coin Change",
        "link": "coin-change",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 322
    },
    {
        "problem": "Merge Triplets to Form Target Triplet",
        "link": "merge-triplets-to-form-target-triplet",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1899
    },
    {
        "problem": "Validate Binary Tree Nodes",
        "link": "validate-binary-tree-nodes",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1361
    },
    {
        "problem": "Best Time to Buy And Sell Stock With Cooldown",
        "link": "best-time-to-buy-and-sell-stock-with-cooldown",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 309
    },
    {
        "problem": "Longest Repeating Character Replacement",
        "link": "longest-repeating-character-replacement",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 424
    },
    {
        "problem": "Single Number",
        "link": "single-number",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 136
    },
    {
        "problem": "Next Greater Element I",
        "link": "next-greater-element-i",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 496
    },
    {
        "problem": "Car Pooling",
        "link": "car-pooling",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1094
    },
    {
        "problem": "Merge K Sorted Lists",
        "link": "merge-k-sorted-lists",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 23
    },
    {
        "problem": "Maximum Length of a Concatenated String With Unique Characters",
        "link": "maximum-length-of-a-concatenated-string-with-unique-characters",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1239
    },
    {
        "problem": "Detect Squares",
        "link": "detect-squares",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2013
    },
    {
        "problem": "Contains Duplicate II",
        "link": "contains-duplicate-ii",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 219
    },
    {
        "problem": "The Number of Beautiful Subsets",
        "link": "the-number-of-beautiful-subsets",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2597
    },
    {
        "problem": "Number of Longest Increasing Subsequence",
        "link": "number-of-longest-increasing-subsequence",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 673
    },
    {
        "problem": "Text Justification",
        "link": "text-justification",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 68
    },
    {
        "problem": "Longest Consecutive Sequence",
        "link": "longest-consecutive-sequence",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 128
    },
    {
        "problem": "Largest Rectangle In Histogram",
        "link": "largest-rectangle-in-histogram",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 84
    },
    {
        "problem": "Rotate List",
        "link": "rotate-list",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 61
    },
    {
        "problem": "Find Unique Binary String",
        "link": "find-unique-binary-string",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1980
    },
    {
        "problem": "Letter Combinations of a Phone Number",
        "link": "letter-combinations-of-a-phone-number",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 17
    },
    {
        "problem": "Design Twitter",
        "link": "design-twitter",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 355
    },
    {
        "problem": "Minimum Penalty for a Shop",
        "link": "minimum-penalty-for-a-shop",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2483
    },
    {
        "problem": "Two City Scheduling",
        "link": "two-city-scheduling",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1029
    },
    {
        "problem": "Count all Valid Pickup and Delivery Options",
        "link": "count-all-valid-pickup-and-delivery-options",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1359
    },
    {
        "problem": "Find the Safest Path in a Grid",
        "link": "find-the-safest-path-in-a-grid",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2812
    },
    {
        "problem": "Subarrays with K Different Integers",
        "link": "subarrays-with-k-different-integers",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 992
    },
    {
        "problem": "Calculate Money in Leetcode Bank",
        "link": "calculate-money-in-leetcode-bank",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1716
    },
    {
        "problem": "Integer Break",
        "link": "integer-break",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 343
    },
    {
        "problem": "Evaluate Division",
        "link": "evaluate-division",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 399
    },
    {
        "problem": "Destination City",
        "link": "destination-city",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1436
    },
    {
        "problem": "Count Good Nodes In Binary Tree",
        "link": "count-good-nodes-in-binary-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1448
    },
    {
        "problem": "Reveal Cards In Increasing Order",
        "link": "reveal-cards-in-increasing-order",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 950
    },
    {
        "problem": "Number of Good Paths",
        "link": "number-of-good-paths",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2421
    },
    {
        "problem": "Find Bottom Left Tree Value",
        "link": "find-bottom-left-tree-value",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 513
    },
    {
        "problem": "House Robber II",
        "link": "house-robber-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 213
    },
    {
        "problem": "Course Schedule IV",
        "link": "course-schedule-iv",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1462
    },
    {
        "problem": "Single Threaded Cpu",
        "link": "single-threaded-cpu",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1834
    },
    {
        "problem": "Continuous Subarray Sum",
        "link": "continuous-subarray-sum",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 523
    },
    {
        "problem": "Find Pivot Index",
        "link": "find-pivot-index",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 724
    },
    {
        "problem": "Find the Difference of Two Arrays",
        "link": "find-the-difference-of-two-arrays",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2215
    },
    {
        "problem": "Design Underground System",
        "link": "design-underground-system",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1396
    },
    {
        "problem": "Find Peak Element",
        "link": "find-peak-element",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 162
    },
    {
        "problem": "Diameter of Binary Tree",
        "link": "diameter-of-binary-tree",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 543
    },
    {
        "problem": "Longest String Chain",
        "link": "longest-string-chain",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1048
    },
    {
        "problem": "Maximum Performance of a Team",
        "link": "maximum-performance-of-a-team",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1383
    },
    {
        "problem": "Merge Strings Alternately",
        "link": "merge-strings-alternately",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1768
    },
    {
        "problem": "Number of Ways to Form a Target String Given a Dictionary",
        "link": "number-of-ways-to-form-a-target-string-given-a-dictionary",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1639
    },
    {
        "problem": "Implement Stack Using Queues",
        "link": "implement-stack-using-queues",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 225
    },
    {
        "problem": "Jump Game VII",
        "link": "jump-game-vii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1871
    },
    {
        "problem": "Sum of Two Integers",
        "link": "sum-of-two-integers",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 371
    },
    {
        "problem": "Extra Characters in a String",
        "link": "extra-characters-in-a-string",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2707
    },
    {
        "problem": "Maximum Sum Circular Subarray",
        "link": "maximum-sum-circular-subarray",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 918
    },
    {
        "problem": "Count Odd Numbers in an Interval Range",
        "link": "count-odd-numbers-in-an-interval-range",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1523
    },
    {
        "problem": "Seat Reservation Manager",
        "link": "seat-reservation-manager",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1845
    },
    {
        "problem": "Excel Sheet Column Title",
        "link": "excel-sheet-column-title",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 168
    },
    {
        "problem": "Optimal Partition of String",
        "link": "optimal-partition-of-string",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2405
    },
    {
        "problem": "Combination Sum",
        "link": "combination-sum",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 39
    },
    {
        "problem": "Simplify Path",
        "link": "simplify-path",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 71
    },
    {
        "problem": "Matchsticks to Square",
        "link": "matchsticks-to-square",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 473
    },
    {
        "problem": "Min Cost Climbing Stairs",
        "link": "min-cost-climbing-stairs",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 746
    },
    {
        "problem": "Meeting Rooms III",
        "link": "meeting-rooms-iii",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2402
    },
    {
        "problem": "House Robber III",
        "link": "house-robber-iii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 337
    },
    {
        "problem": "132 Pattern",
        "link": "132-pattern",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 456
    },
    {
        "problem": "Concatenation of Array",
        "link": "concatenation-of-array",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1929
    },
    {
        "problem": "Min Stack",
        "link": "min-stack",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 155
    },
    {
        "problem": "Swim In Rising Water",
        "link": "swim-in-rising-water",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 778
    },
    {
        "problem": "Maximum Number of Removable Characters",
        "link": "maximum-number-of-removable-characters",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1898
    },
    {
        "problem": "Wildest Vertical Area Between Two Points Containing No Points",
        "link": "wildest-vertical-area-between-two-points-containing-no-points",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Path Sum",
        "link": "path-sum",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 112
    },
    {
        "problem": "Sort Array by Parity",
        "link": "sort-array-by-parity",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 905
    },
    {
        "problem": "Fruits into Basket",
        "link": "fruits-into-basket",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Number of Music Playlists",
        "link": "number-of-music-playlists",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 920
    },
    {
        "problem": "Bitwise AND of Numbers Range",
        "link": "bitwise-and-of-numbers-range",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 201
    },
    {
        "problem": "Find The Duplicate Number",
        "link": "find-the-duplicate-number",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 287
    },
    {
        "problem": "Daily Temperatures",
        "link": "daily-temperatures",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 739
    },
    {
        "problem": "Find Closest Node to Given Two Nodes",
        "link": "find-closest-node-to-given-two-nodes",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2359
    },
    {
        "problem": "House Robber",
        "link": "house-robber",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 198
    },
    {
        "problem": "Squares of a Sorted Array",
        "link": "squares-of-a-sorted-array",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 977
    },
    {
        "problem": "Design Linked List",
        "link": "design-linked-list",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 707
    },
    {
        "problem": "Maximum Number of Vowels in a Substring of Given Length",
        "link": "maximum-number-of-vowels-in-a-substring-of-given-length",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1456
    },
    {
        "problem": "Best Time to Buy And Sell Stock",
        "link": "best-time-to-buy-and-sell-stock",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 121
    },
    {
        "problem": "Largest Odd Number in String",
        "link": "largest-odd-number-in-string",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1903
    },
    {
        "problem": "Maximum Points You Can Obtain From Cards",
        "link": "maximum-points-you-can-obtain-from-cards",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1423
    },
    {
        "problem": "Out of Boundary Paths",
        "link": "out-of-boundary-paths",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 576
    },
    {
        "problem": "Minimum Number of One Bit Operations to Make Integers Zero",
        "link": "minimum-number-of-one-bit-operations-to-make-integers-zero",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Clone Graph",
        "link": "clone-graph",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 133
    },
    {
        "problem": "Range Sum Query 2D Immutable",
        "link": "range-sum-query-2d-immutable",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 304
    },
    {
        "problem": "Special Array with X Elements Greater than or Equal X",
        "link": "special-array-with-x-elements-greater-than-or-equal-x",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1608
    },
    {
        "problem": "Group Anagrams",
        "link": "group-anagrams",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 49
    },
    {
        "problem": "Graph Valid Tree",
        "link": "graph-valid-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 261
    },
    {
        "problem": "Path with Maximum Probability",
        "link": "path-with-maximum-probability",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1514
    },
    {
        "problem": "Longest Common Subsequence",
        "link": "longest-common-subsequence",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1143
    },
    {
        "problem": "Minimum Number of Swaps to Make The String Balanced",
        "link": "minimum-number-of-swaps-to-make-the-string-balanced",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1963
    },
    {
        "problem": "Leaf-Similar Trees",
        "link": "leaf-similar-trees",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 872
    },
    {
        "problem": "Flip Equivalent Binary Trees",
        "link": "flip-equivalent-binary-trees",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 951
    },
    {
        "problem": "Frequency of The Most Frequent Element",
        "link": "frequency-of-the-most-frequent-element",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1838
    },
    {
        "problem": "Find K Closest Elements",
        "link": "find-k-closest-elements",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 658
    },
    {
        "problem": "Pascals Triangle",
        "link": "pascals-triangle",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 118
    },
    {
        "problem": "Jump Game II",
        "link": "jump-game-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 45
    },
    {
        "problem": "Longest Increasing Subsequence",
        "link": "longest-increasing-subsequence",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 300
    },
    {
        "problem": "Contiguous Array",
        "link": "contiguous-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 525
    },
    {
        "problem": "Swapping Nodes in a Linked List",
        "link": "swapping-nodes-in-a-linked-list",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1721
    },
    {
        "problem": "4Sum",
        "link": "4sum",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 18
    },
    {
        "problem": "Minimize Deviation in Array",
        "link": "minimize-deviation-in-array",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1675
    },
    {
        "problem": "Evaluate Reverse Polish Notation",
        "link": "evaluate-reverse-polish-notation",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 150
    },
    {
        "problem": "Two Sum II Input Array Is Sorted",
        "link": "two-sum-ii-input-array-is-sorted",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 167
    },
    {
        "problem": "Word Break",
        "link": "word-break",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 139
    },
    {
        "problem": "Reverse Linked List II",
        "link": "reverse-linked-list-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 92
    },
    {
        "problem": "Buy Two Chocolates",
        "link": "buy-two-chocolates",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2706
    },
    {
        "problem": "Largest Submatrix With Rearrangements",
        "link": "largest-submatrix-with-rearrangements",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1727
    },
    {
        "problem": "Multiply Strings",
        "link": "multiply-strings",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 43
    },
    {
        "problem": "Decode Ways",
        "link": "decode-ways",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 91
    },
    {
        "problem": "Find The Index of The First Occurrence in a String",
        "link": "find-the-index-of-the-first-occurrence-in-a-string",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 28
    },
    {
        "problem": "Word Pattern",
        "link": "word-pattern",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 290
    },
    {
        "problem": "Partition to K Equal Sum Subsets",
        "link": "partition-to-k-equal-sum-subsets",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 698
    },
    {
        "problem": "Two Sum",
        "link": "two-sum",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1
    },
    {
        "problem": "Valid Palindrome II",
        "link": "valid-palindrome-ii",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 680
    },
    {
        "problem": "Minimum Falling Path Sum II",
        "link": "minimum-falling-path-sum-ii",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1289
    },
    {
        "problem": "Check If Two String Arrays are Equivalent",
        "link": "check-if-two-string-arrays-are-equivalent",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1662
    },
    {
        "problem": "N-th Tribonacci Number",
        "link": "n-th-tribonacci-number",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1137
    },
    {
        "problem": "Valid Anagram",
        "link": "valid-anagram",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 242
    },
    {
        "problem": "Minimum Path Sum",
        "link": "minimum-path-sum",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 64
    },
    {
        "problem": "Course Schedule",
        "link": "course-schedule",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 207
    },
    {
        "problem": "Number of Students Unable to Eat Lunch",
        "link": "number-of-students-unable-to-eat-lunch",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1700
    },
    {
        "problem": "Find All Anagrams in a String",
        "link": "find-all-anagrams-in-a-string",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 438
    },
    {
        "problem": "Binary Tree Zigzag Level Order Traversal",
        "link": "binary-tree-zigzag-level-order-traversal",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 103
    },
    {
        "problem": "Path with Maximum Gold",
        "link": "path-with-maximum-gold",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1219
    },
    {
        "problem": "Intersection of Two Arrays",
        "link": "intersection-of-two-arrays",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 349
    },
    {
        "problem": "String Compression II",
        "link": "string-compression-ii",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1531
    },
    {
        "problem": "Longest Palindromic Substring",
        "link": "longest-palindromic-substring",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 5
    },
    {
        "problem": "Perfect Squares",
        "link": "perfect-squares",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 279
    },
    {
        "problem": "Stone Game II",
        "link": "stone-game-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1140
    },
    {
        "problem": "Search In Rotated Sorted Array",
        "link": "search-in-rotated-sorted-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 33
    },
    {
        "problem": "Even Odd Tree",
        "link": "even-odd-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1609
    },
    {
        "problem": "Find Duplicate Subtrees",
        "link": "find-duplicate-subtrees",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 652
    },
    {
        "problem": "Dota2 Senate",
        "link": "dota2-senate",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 649
    },
    {
        "problem": "Sort an Array",
        "link": "sort-an-array",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 912
    },
    {
        "problem": "Online Stock Span",
        "link": "online-stock-span",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 901
    },
    {
        "problem": "Palindrome Number",
        "link": "palindrome-number",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 9
    },
    {
        "problem": "Ugly Number",
        "link": "ugly-number",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 263
    },
    {
        "problem": "Convert Sorted Array to Binary Search Tree",
        "link": "convert-sorted-array-to-binary-search-tree",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 108
    },
    {
        "problem": "Design Add And Search Words Data Structure",
        "link": "design-add-and-search-words-data-structure",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 211
    },
    {
        "problem": "Unique Paths",
        "link": "unique-paths",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 62
    },
    {
        "problem": "IPO",
        "link": "ipo",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 502
    },
    {
        "problem": "Push Dominoes",
        "link": "push-dominoes",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 838
    },
    {
        "problem": "Successful Pairs of Spells and Potions",
        "link": "successful-pairs-of-spells-and-potions",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2300
    },
    {
        "problem": "Maximum Subsequence Score",
        "link": "maximum-subsequence-score",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2542
    },
    {
        "problem": "Hand of Straights",
        "link": "hand-of-straights",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 846
    },
    {
        "problem": "Encode and Decode Strings",
        "link": "encode-and-decode-strings",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 271
    },
    {
        "problem": "Minimum Deletions to Make Character Frequencies Unique",
        "link": "minimum-deletions-to-make-character-frequencies-unique",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1647
    },
    {
        "problem": "Length of Last Word",
        "link": "length-of-last-word",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 58
    },
    {
        "problem": "Maximum Frequency Stack",
        "link": "maximum-frequency-stack",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 895
    },
    {
        "problem": "New 21 Game",
        "link": "new-21-game",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 837
    },
    {
        "problem": "Binary Search",
        "link": "binary-search",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 704
    },
    {
        "problem": "Minimum Time to Collect All Apples in a Tree",
        "link": "minimum-time-to-collect-all-apples-in-a-tree",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1443
    },
    {
        "problem": "Meeting Rooms II",
        "link": "meeting-rooms-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 253
    },
    {
        "problem": "Minimum Falling Path Sum",
        "link": "minimum-falling-path-sum",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 931
    },
    {
        "problem": "Insert Interval",
        "link": "insert-interval",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 57
    },
    {
        "problem": "Unique Paths II",
        "link": "unique-paths-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 63
    },
    {
        "problem": "Subarray Sum Equals K",
        "link": "subarray-sum-equals-k",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 560
    },
    {
        "problem": "Sqrt(x)",
        "link": "sqrt(x)",
        "video": "",
        "difficulty": "Unknown",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 0
    },
    {
        "problem": "Binary Search Tree Iterator",
        "link": "binary-search-tree-iterator",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 173
    },
    {
        "problem": "Remove Duplicates From Sorted Array II",
        "link": "remove-duplicates-from-sorted-array-ii",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 80
    },
    {
        "problem": "Add Two Numbers",
        "link": "add-two-numbers",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2
    },
    {
        "problem": "Binary Tree Postorder Traversal",
        "link": "binary-tree-postorder-traversal",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 145
    },
    {
        "problem": "Intersection of Two Linked Lists",
        "link": "intersection-of-two-linked-lists",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 160
    },
    {
        "problem": "Cheapest Flights Within K Stops",
        "link": "cheapest-flights-within-k-stops",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 787
    },
    {
        "problem": "Maximum Value of K Coins from Piles",
        "link": "maximum-value-of-k-coins-from-piles",
        "video": "",
        "difficulty": "Hard",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 2218
    },
    {
        "problem": "Splitting a String Into Descending Consecutive Values",
        "link": "splitting-a-string-into-descending-consecutive-values",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 1849
    },
    {
        "problem": "Valid Parenthesis String",
        "link": "valid-parenthesis-string",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 678
    },
    {
        "problem": "Transpose Matrix",
        "link": "transpose-matrix",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 867
    },
    {
        "problem": "Reorganize String",
        "link": "reorganize-string",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 767
    },
    {
        "problem": "Champagne Tower",
        "link": "champagne-tower",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 799
    },
    {
        "problem": "Image Smoother",
        "link": "image-smoother",
        "video": "",
        "difficulty": "Easy",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 661
    },
    {
        "problem": "Delete Node in a BST",
        "link": "delete-node-in-a-bst",
        "video": "",
        "difficulty": "Medium",
        "code": "",
        "kotlin": true,
        "cpp": true,
        "java": true,
        "python": true,
        "id": 450
    }
]